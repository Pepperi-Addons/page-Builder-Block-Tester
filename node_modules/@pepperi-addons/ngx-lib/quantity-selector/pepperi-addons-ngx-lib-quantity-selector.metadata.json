{"__symbolic":"module","version":4,"metadata":{"PepQuantitySelectorModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":24,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":26,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":27,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatCommonModule","line":29,"character":8},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":31,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":32,"character":8},{"__symbolic":"reference","module":"@angular/material/badge","name":"MatBadgeModule","line":33,"character":8},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":34,"character":8},{"__symbolic":"reference","module":"@pepperi-addons/ngx-lib","name":"PepNgxLibModule","line":36,"character":8},{"__symbolic":"reference","module":"@pepperi-addons/ngx-lib/icon","name":"PepIconModule","line":37,"character":8},{"__symbolic":"reference","module":"@pepperi-addons/ngx-lib/field-title","name":"PepFieldTitleModule","line":38,"character":8}],"exports":[{"__symbolic":"reference","name":"PepQuantitySelectorComponent"}],"declarations":[{"__symbolic":"reference","name":"PepQuantitySelectorComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@pepperi-addons/ngx-lib/icon","name":"PepIconRegistry","line":48,"character":41}]}]}},"PepQuantitySelectorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":38,"character":1},"arguments":[{"selector":"pep-quantity-selector","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":42,"character":21},"member":"OnPush"},"animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":44,"character":8},"arguments":["showHide",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":45,"character":12},"arguments":["show",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":47,"character":16},"arguments":[{"opacity":1,"transform":"scale(1)"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":52,"character":12},"arguments":["hide",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":54,"character":16},"arguments":[{"opacity":0,"transform":"scale(0)"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":59,"character":12},"arguments":["show => hide",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":59,"character":39},"arguments":["250ms ease-out"]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":60,"character":12},"arguments":["hide => show",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":60,"character":39},"arguments":["250ms ease-in"]}]}]]}],"template":"<ng-container [formGroup]=\"form\">\n    <ng-template #pepTemplate>\n        <div #QSCont class=\"pep-quantity-selector-container {{ styleType }}\" [ngClass]=\"{\n                'hide-qs-actions' : layoutType === 'card' && rowSpan <= 1,\n                'pep-table-quantity-selector': layoutType === 'table',\n                'one-row': rowSpan === 1,\n                caution: isCaution,\n                'matrix-qs': type === 'qsForMatrix',\n                'zero-quantity': formattedValue === '0'\n            }\">\n            <pep-field-title *ngIf=\"layoutType !== 'table' && layoutType !== 'card'\" [label]=\"label\"\n                [mandatory]=\"mandatory\" [disabled]=\"disabled\" [showTitle]=\"showTitle\" [xAlignment]=\"xAlignment\">\n            </pep-field-title>\n\n            <ng-container *ngIf=\"type == 'qs'\">\n                <ng-container *ngIf=\"readonly; then readonlyBlock; else editableQSBlock\"></ng-container>\n                <ng-template #readonlyBlock>\n                    <button [id]=\"key\" mat-button class=\"pep-button {{ styleType }} disable \"\n                        [ngClass]=\"{caution: isCaution, md: rowSpan !== 1, xs: rowSpan === 1}\"\n                        title=\"{{ formattedValue }}\" disabled=\"true\">\n                        <span class=\"ellipsis\">\n                            {{ formattedValue }}\n                        </span>\n                    </button>\n                </ng-template>\n                <ng-template #editableQSBlock>\n                    <mat-form-field appearance=\"outline\">\n                        <input pepQsValidation [allowDecimal]=\"allowDecimal\" type=\"decimalNumber\" inputmode=\"decimal\"\n                            matInput #QSInput name=\"{{ key }}\" class=\"body-lg ellipsis\" title=\"{{ formattedValue }}\"\n                            autocomplete=\"off\" [id]=\"key\" [formControlName]=\"key\" [value]=\"displayValue\"\n                            (click)=\"$event.target.setSelectionRange(0, 999)\" (keydown)=\"onKeydown($event)\"\n                            (blur)=\"onBlur($event)\" (focus)=\"onFocus($event)\" />\n                        <button *ngIf=\"showQsBtn\" mat-button matPrefix (click)=\"decrement($event)\"\n                            class=\"pep-button icon-button sm weak qs-action\" [disabled]=\"disabled\" [ngClass]=\"{ disable: disabled, caution: isCaution && styleType !== 'strong',\n                                'keep-background-on-focus': styleType === 'strong'}\">\n                            <mat-icon>\n                                <pep-icon name=\"number_minus\">\n                                </pep-icon>\n                            </mat-icon>\n                        </button>\n                        <button *ngIf=\"showQsBtn\" mat-button matSuffix (click)=\"increment($event)\"\n                            class=\"pep-button icon-button sm weak qs-action\" [disabled]=\"disabled\" [ngClass]=\"{ disable: disabled, caution: isCaution && styleType !== 'strong',\n                                'keep-background-on-focus': styleType === 'strong'}\">\n                            <mat-icon>\n                                <pep-icon name=\"number_plus\">\n                                </pep-icon>\n                            </mat-icon>\n                        </button>\n                        <mat-error *ngIf=\"messages?.length > 0\">\n                            <span class=\"qs-error body-xs\" *ngFor=\"let msg of messages\"> {{ msg.Key | translate }} :\n                                {{ msg.Value }} </span>\n                        </mat-error>\n                    </mat-form-field>\n                </ng-template>\n            </ng-container>\n\n            <ng-container *ngIf=\"type == 'qsForMatrix'\">\n                <ng-container *ngIf=\"readonly; then readonlyBlock; else editableQSBlock\"></ng-container>\n                <ng-template #readonlyBlock>\n                    <button [id]=\"key\" mat-button class=\"pep-button {{ styleType }} disable\" disabled=\"true\"\n                        [ngClass]=\"{caution: isCaution, md: rowSpan !== 1, xs: rowSpan === 1}\">\n                        X\n                    </button>\n                </ng-template>\n                <ng-template #editableQSBlock>\n                    <span *ngIf=\" xAlignment=='right'\" class=\" body-sm additional-value prefix\"\n                        matBadge=\"{{ additionalValue }}\" matBadgePosition=\"before\"\n                        matBadgeSize=\"rowSpan === 1 ? small : medium\" [@showHide]=\"getAdditionalValue\"></span>\n\n                    <mat-form-field appearance=\"outline\" (mouseleave)=\"!isInFocus ? onMatrixMouseleave($event) : null\">\n                        <input pepQsValidation [allowDecimal]=\"allowDecimal\" type=\"decimalNumber\" inputmode=\"decimal\"\n                            matInput #QSInput name=\"{{ key }}\" title=\"{{ formattedValue }}\" class=\"body-sm ellipsis\"\n                            autocomplete=\"off\" [id]=\"key\" [formControlName]=\"key\" [value]=\"displayValue\"\n                            (click)=\"onMatrixClick($event); $event.target.setSelectionRange(0, 999)\"\n                            (keydown)=\"onKeydown($event)\" (blur)=\"onMatrixBlur($event)\"\n                            (focus)=\"onMatrixMouseEnter($event); onFocus($event)\"\n                            (mouseenter)=\"onMatrixMouseEnter($event)\" />\n\n                        <mat-error *ngIf=\"messages?.length > 0\">\n                            <span class=\"qs-error body-xs\" *ngFor=\"let msg of messages\"> {{ msg.Key | translate }} :\n                                {{ msg.Value }} </span>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <span *ngIf=\"xAlignment != 'right'\" class=\"body-sm additional-value suffix\"\n                        matBadge=\"{{ additionalValue }}\" matBadgePosition=\"before\"\n                        matBadgeSize=\"rowSpan === 1 ? small : medium\" [@showHide]=\"getAdditionalValue\"></span>\n                </ng-template>\n            </ng-container>\n\n            <ng-container *ngIf=\"type == 'button'\">\n                <ng-container *ngIf=\"(value | pepToNumber) == 0; then regularBlock; else withBadgeBlock\">\n                </ng-container>\n                <ng-template #regularBlock>\n                    <button mat-button [disabled]=\"disabled\" class=\"pep-button {{ styleType }} \" [id]=\"key\"\n                        name=\"{{ key }}\"\n                        [ngClass]=\"{ disable: disabled, caution: isCaution, md: rowSpan !== 1, xs: rowSpan === 1}\"\n                        [title]=\"'QS.ORDER' | translate\" (click)=\"enterChildren($event)\">\n                        <span class=\"ellipsis\">\n                            {{ 'QS.ORDER' | translate }}\n                        </span>\n                    </button>\n                </ng-template>\n                <ng-template #withBadgeBlock>\n                    <button mat-button matBadge=\"{{ formattedValue }}\"\n                        matBadgePosition=\"{{xAlignment == 'right' ? 'before' : 'after'}}\"\n                        [matBadgeSize]=\"layoutType === 'card' && rowSpan === 1 ? 'small' : 'medium'\"\n                        class=\"pep-button {{ styleType }} \" [id]=\"key\" name=\"{{ key }}\" [ngClass]=\"{ disable: disabled, caution: isCaution, md: rowSpan !== 1, xs: rowSpan === 1,\n                            'right-alignment': xAlignment == 'right', 'left-alignment': xAlignment != 'right'}\"\n                        [title]=\"'QS.ORDER' | translate\" (click)=\"enterChildren($event)\" [disabled]=\"disabled\">\n                        <span class=\"ellipsis\">\n                            {{ 'QS.ORDER' | translate }}\n                        </span>\n                    </button>\n                </ng-template>\n            </ng-container>\n            <ng-container *ngIf=\"type == 'packageButton'\">\n                <button mat-button class=\"pep-button {{ styleType }} \" [id]=\"key\" name=\"{{ key }}\"\n                    [ngClass]=\"{ disable: disabled, caution: isCaution, md: rowSpan !== 1, xs: rowSpan === 1}\"\n                    [title]=\"'QS.ORDER' | translate\" (click)=\"enterPackage($event)\" [disabled]=\"disabled\">\n                    <span class=\"ellipsis\">\n                        {{ 'QS.ORDER' | translate }} &#40;{{ formattedValue }}&#41;\n                    </span>\n                </button>\n            </ng-container>\n        </div>\n    </ng-template>\n\n    <ng-container *ngIf=\"layoutType === 'form'\">\n        <ng-container *ngTemplateOutlet=\"pepTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-container *ngIf=\"layoutType === 'card'\">\n        <ng-container *ngTemplateOutlet=\"pepTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-container *ngIf=\"layoutType === 'table'\">\n        <ng-container *ngTemplateOutlet=\"pepTemplate\"></ng-container>\n    </ng-container>\n</ng-container>","styles":[":host{height:inherit;display:grid}.pep-quantity-selector-container,.pepperi-quantity-selector-container{display:flex;flex-flow:wrap;align-items:center;min-width:2rem;width:100%;height:inherit}.pep-quantity-selector-container input::-webkit-inner-spin-button,.pep-quantity-selector-container input::-webkit-outer-spin-button,.pepperi-quantity-selector-container input::-webkit-inner-spin-button,.pepperi-quantity-selector-container input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.pep-quantity-selector-container input[type=number],.pepperi-quantity-selector-container input[type=number]{-moz-appearance:textfield}.pep-quantity-selector-container .mat-input-element,.pepperi-quantity-selector-container .mat-input-element{padding:0 .25rem;text-align:center;font-weight:600;font-weight:var(--pep-font-weight-bold,600);width:100%}.pep-quantity-selector-container .mat-form-field .mat-form-field-wrapper .mat-form-field-subscript-wrapper,.pepperi-quantity-selector-container .mat-form-field .mat-form-field-wrapper .mat-form-field-subscript-wrapper{height:unset}.pep-quantity-selector-container .pep-button,.pep-quantity-selector-container .pepperi-button,.pepperi-quantity-selector-container .pep-button,.pepperi-quantity-selector-container .pepperi-button{width:100%}.pep-quantity-selector-container .pep-button.qs-action,.pep-quantity-selector-container .pepperi-button.qs-action,.pepperi-quantity-selector-container .pep-button.qs-action,.pepperi-quantity-selector-container .pepperi-button.qs-action{min-width:2rem;line-height:2rem;width:2rem!important;height:2rem!important}.pep-quantity-selector-container .pep-button.qs-action .mat-icon,.pep-quantity-selector-container .pepperi-button.qs-action .mat-icon,.pepperi-quantity-selector-container .pep-button.qs-action .mat-icon,.pepperi-quantity-selector-container .pepperi-button.qs-action .mat-icon{height:inherit;width:inherit}.pep-quantity-selector-container .qs-error,.pepperi-quantity-selector-container .qs-error{display:block}.pep-quantity-selector-container.hide-qs-actions .pep-button.qs-action,.pep-quantity-selector-container.hide-qs-actions .pepperi-button.qs-action,.pepperi-quantity-selector-container.hide-qs-actions .pep-button.qs-action,.pepperi-quantity-selector-container.hide-qs-actions .pepperi-button.qs-action{display:none}.pep-quantity-selector-container.matrix-qs .additional-value,.pepperi-quantity-selector-container.matrix-qs .additional-value{height:1.25rem;top:calc(.25rem * -1);top:calc(var(--pep-spacing-xs, .25rem) * -1);transform:unset!important;display:flex;align-self:flex-start;justify-content:flex-end}.pep-quantity-selector-container.matrix-qs .additional-value.prefix,.pepperi-quantity-selector-container.matrix-qs .additional-value.prefix{left:calc(.5rem * -1)!important;left:calc(var(--pep-spacing-sm, .5rem) * -1)!important}.pep-quantity-selector-container.matrix-qs .additional-value.suffix,.pepperi-quantity-selector-container.matrix-qs .additional-value.suffix{right:calc(.5rem * -1)!important;right:calc(var(--pep-spacing-sm, .5rem) * -1)!important}.pep-quantity-selector-container.matrix-qs .additional-value .mat-badge-content,.pepperi-quantity-selector-container.matrix-qs .additional-value .mat-badge-content{z-index:97;min-width:1.5rem;width:-webkit-fit-content!important;width:-moz-fit-content!important;width:fit-content!important;border-radius:.625rem;padding:0 .5rem;top:calc(.5rem * -1)!important;top:calc(var(--pep-spacing-sm, .5rem) * -1)!important;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;max-width:inherit}.pep-quantity-selector-container.matrix-qs .disable,.pepperi-quantity-selector-container.matrix-qs .disable{min-width:.5rem;padding:0 .25rem}.pep-quantity-selector-container.pep-table-quantity-selector .pep-button:not(.qs-action),.pep-quantity-selector-container.pep-table-quantity-selector .pepperi-button:not(.qs-action),.pep-quantity-selector-container.pepperi-table-quantity-selector .pep-button:not(.qs-action),.pep-quantity-selector-container.pepperi-table-quantity-selector .pepperi-button:not(.qs-action),.pepperi-quantity-selector-container.pep-table-quantity-selector .pep-button:not(.qs-action),.pepperi-quantity-selector-container.pep-table-quantity-selector .pepperi-button:not(.qs-action),.pepperi-quantity-selector-container.pepperi-table-quantity-selector .pep-button:not(.qs-action),.pepperi-quantity-selector-container.pepperi-table-quantity-selector .pepperi-button:not(.qs-action){height:2rem;line-height:2rem}.pep-quantity-selector-container.pep-table-quantity-selector .pep-button.qs-action,.pep-quantity-selector-container.pep-table-quantity-selector .pepperi-button.qs-action,.pep-quantity-selector-container.pepperi-table-quantity-selector .pep-button.qs-action,.pep-quantity-selector-container.pepperi-table-quantity-selector .pepperi-button.qs-action,.pepperi-quantity-selector-container.pep-table-quantity-selector .pep-button.qs-action,.pepperi-quantity-selector-container.pep-table-quantity-selector .pepperi-button.qs-action,.pepperi-quantity-selector-container.pepperi-table-quantity-selector .pep-button.qs-action,.pepperi-quantity-selector-container.pepperi-table-quantity-selector .pepperi-button.qs-action{min-width:1.5rem;line-height:1.5rem;width:1.5rem!important;height:1.5rem!important}"]}]}],"members":{"key":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":5}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":74,"character":5}}]}],"formattedValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":91,"character":5}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":107,"character":5}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":108,"character":5}}]}],"mandatory":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":109,"character":5}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":110,"character":5}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":111,"character":5}}]}],"textColor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":114,"character":5}}]}],"xAlignment":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":123,"character":5}}]}],"rowSpan":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":124,"character":5}}]}],"allowDecimal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":125,"character":5}}]}],"additionalValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":126,"character":5}}]}],"notificationInfo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":129,"character":5}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":168,"character":5}}]}],"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":189,"character":5}}]}],"showTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":190,"character":5}}]}],"layoutType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":191,"character":5}}]}],"isActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":192,"character":5}}]}],"styleType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":195,"character":5}}]}],"valueChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":200,"character":5}}]}],"elementClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":203,"character":5}}]}],"QSCont":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":206,"character":5},"arguments":["QSCont"]}]}],"QSInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":207,"character":5},"arguments":["QSInput"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":231,"character":20},{"__symbolic":"reference","module":"@pepperi-addons/ngx-lib","name":"PepCustomizationService","line":232,"character":38},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":233,"character":26},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":234,"character":25},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":235,"character":27},{"__symbolic":"reference","module":"@pepperi-addons/ngx-lib","name":"PepUtilitiesService","line":236,"character":34}]}],"setForm":[{"__symbolic":"method"}],"setFormattedValue":[{"__symbolic":"method"}],"updateFormFieldValue":[{"__symbolic":"method"}],"getDestroyer":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngAfterViewChecked":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"getParentByClass":[{"__symbolic":"method"}],"getSameElementInTheWantedRowByClassName":[{"__symbolic":"method"}],"setSameElementInTheWantedRow":[{"__symbolic":"method"}],"focusToTheSameElementInTheWantedRow":[{"__symbolic":"method"}],"cleanError":[{"__symbolic":"method"}],"onMatrixMouseEnter":[{"__symbolic":"method"}],"onMatrixMouseleave":[{"__symbolic":"method"}],"onMatrixClick":[{"__symbolic":"method"}],"onMatrixBlur":[{"__symbolic":"method"}],"onFocus":[{"__symbolic":"method"}],"isDifferentValue":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"onKeydown":[{"__symbolic":"method"}],"increment":[{"__symbolic":"method"}],"decrement":[{"__symbolic":"method"}],"enterChildren":[{"__symbolic":"method"}],"enterPackage":[{"__symbolic":"method"}],"setupQsButtons":[{"__symbolic":"method"}],"setQsView":[{"__symbolic":"method"}]},"statics":{"ENTER_CHILDREN":"[EnterChildren]","ENTER_PACKAGE":"[EnterPackage]","PLUS":"[+]","MINUS":"[-]"}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":2,"character":1},"arguments":[{"name":"pepQuantitySelectorNumber"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":10,"character":1},"arguments":[{"selector":"[pepQsValidation]"}]}],"members":{"allowDecimal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":19,"character":29},{"__symbolic":"reference","module":"@pepperi-addons/ngx-lib","name":"PepValidatorService","line":20,"character":34}]}],"ngOnInit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":27,"character":5},"arguments":["change",["$event"]]}]}],"onKeyDown":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":32,"character":5},"arguments":["keydown",["$event"]]}]}],"validateValue":[{"__symbolic":"method"}]}}},"origins":{"PepQuantitySelectorModule":"./quantity-selector.module","PepQuantitySelectorComponent":"./quantity-selector.component","ɵa":"./quantity-selector.pipes","ɵb":"./quantity-selector-validation.directive"},"importAs":"@pepperi-addons/ngx-lib/quantity-selector"}