{"version":3,"file":"pepperi-addons-ngx-lib-files-uploader.umd.js","sources":["../../../projects/ngx-lib/files-uploader/files-uploader.component.ts","../../../projects/ngx-lib/files-uploader/files-uploader.module.ts","../../../projects/ngx-lib/files-uploader/public-api.ts","../../../projects/ngx-lib/files-uploader/pepperi-addons-ngx-lib-files-uploader.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport {\n    Component,\n    OnInit,\n    Injectable,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    Optional,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { FormGroup } from '@angular/forms';\nimport {\n    PepFileService,\n    PepLayoutType,\n    PepCustomizationService,\n    PepHorizontalAlignment,\n    DEFAULT_HORIZONTAL_ALIGNMENT,\n    IPepFieldClickEvent,\n} from '@pepperi-addons/ngx-lib';\nimport {\n    PepDialogService,\n    PepDialogData,\n} from '@pepperi-addons/ngx-lib/dialog';\nimport { pepIconNoImage2 } from '@pepperi-addons/ngx-lib/icon';\n\nexport interface IPepFileChangeEvent {\n    acceptedExtensions?: string;\n    fileStr?: string;\n    fileName?: string;\n    fileExt?: string;\n}\n\n@Component({\n    selector: 'pep-files-uploader',\n    templateUrl: './files-uploader.component.html',\n    styleUrls: ['./files-uploader.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n@Injectable()\nexport class PepFilesUploaderComponent implements OnInit {\n    @Input() key = '';\n    @Input() src = '';\n    @Input() label = '';\n    @Input() mandatory = false;\n    @Input() disabled = false;\n    @Input() xAlignment: PepHorizontalAlignment = DEFAULT_HORIZONTAL_ALIGNMENT;\n\n    private _rowSpan = 1;\n    @Input()\n    set rowSpan(value) {\n        this._rowSpan = value;\n    }\n    get rowSpan(): number {\n        return this._rowSpan;\n    }\n\n    @Input() controlType = '';\n    @Input() sizeLimitMB = 5;\n\n    @Input() form: FormGroup;\n    @Input() standAlone = false;\n    @Input() acceptedExtensions = 'bmp,jpg,jpeg,png,gif,ico,svg,html,css';\n    @Input() layoutType: PepLayoutType = 'form';\n\n    @Output()\n    fileChange: EventEmitter<IPepFileChangeEvent> = new EventEmitter<IPepFileChangeEvent>();\n    @Output()\n    elementClick: EventEmitter<IPepFieldClickEvent> = new EventEmitter<IPepFieldClickEvent>();\n\n    @ViewChild('fileInput') fileInput: any;\n    @ViewChild('imagePreview') imagePreview: any;\n\n    @Input() fieldHeight = '';\n\n    // multiple = false;\n    uploader: FileUploader;\n    progress = 0;\n    // response: string;\n    intervalID: any = null;\n\n    constructor(\n        private dialogService: PepDialogService,\n        private customizationService: PepCustomizationService,\n        private fileService: PepFileService,\n        private translate: TranslateService\n    ) {\n        this.uploader = new FileUploader({ removeAfterUpload: true });\n\n        this.uploader.onAfterAddingFile = (item) => {\n            if (this.fileInput?.nativeElement) {\n                this.fileInput.nativeElement.value = '';\n            }\n            const reader = new FileReader();\n\n            reader.onload = (event: any) => {\n                const fileNameArray = item._file.name.split('.');\n                const fileName = fileNameArray[0];\n                const fileExt = fileNameArray[1]; // item._file.name.split('.').pop();\n                const target = event.target || event.srcElement;\n                const fileStr = target.result;\n                const errorMsg = this.isValidFile(\n                    fileStr,\n                    fileExt,\n                    this.acceptedExtensions,\n                    this.sizeLimitMB\n                );\n                if (errorMsg === '') {\n                    this.src = fileStr;\n                    // this.setIntervalX(25, 75);\n                    // this.setProgress(5);\n                    this.fileChange.emit({\n                        acceptedExtensions: this.acceptedExtensions,\n                        fileStr,\n                        fileName,\n                        fileExt,\n                    });\n                } else {\n                    const title = this.translate.instant(\n                        'MESSAGES.TITLE_NOTICE'\n                    );\n                    const data = new PepDialogData({\n                        title,\n                        content: errorMsg,\n                    });\n                    this.dialogService.openDefaultDialog(data);\n                }\n            };\n            reader.readAsDataURL(item._file);\n        };\n    }\n\n    ngOnInit(): void {\n        /*this.uploader.onCompleteAll = () => {\n            this.fileInput.nativeElement.value = '';\n        }*/\n    }\n\n    isValidFile(\n        fileStr,\n        fileExtension,\n        acceptedExtensions,\n        sizeLimitMB = 5\n    ): string {\n        const file: any = fileStr;\n        let fileSize = 0;\n        let content = '';\n        // check if got file as Base64\n        if (typeof fileStr === 'string' && fileStr.indexOf('data:') > -1) {\n            fileSize = this.getBase64FileSize(fileStr);\n        } else {\n            fileSize = file.size;\n        }\n        // check the size and the extension\n        const sizeOK: boolean =\n            fileSize !== -1 && file != null && fileSize < sizeLimitMB * 1048576;\n        const extensionOK =\n            acceptedExtensions === '' ||\n            acceptedExtensions.indexOf(fileExtension.toLowerCase()) !== -1;\n        if (!extensionOK) {\n            content = this.translate.instant(\n                'MESSAGES.ERROR_FAILD_TO_LOAD_EXTENSION',\n                {\n                    fileExtension:\n                        \"<label class='uppercase bold'>\" +\n                        fileExtension +\n                        '</label>',\n                }\n            );\n        } else if (!sizeOK) {\n            content = this.translate.instant(\n                'MESSAGES.ERROR_FAILD_TO_LOAD_SIZE',\n                {\n                    fileSize:\n                        \"<label class='uppercase bold'>\" +\n                        sizeLimitMB.toString() +\n                        '</label>',\n                }\n            );\n        }\n        return content;\n    }\n\n    getBase64FileSize(base64String: string): number {\n        let fileSize: number;\n\n        try {\n            base64String = base64String.substr(base64String.indexOf(',') + 1);\n            fileSize = atob(base64String).length;\n        } catch (e) {\n            fileSize = -1;\n        }\n\n        return fileSize; // return size in bytes;\n    }\n\n    // setIntervalX(delay, repetitions): void {\n    //     let x = 0;\n    //     this.intervalID = window.setInterval(() => {\n    //         // this.setProgress(this.progress + 5);\n    //         if (++x === repetitions || this.uploader.progress >= 100) {\n    //             window.clearInterval(this.intervalID);\n    //         }\n    //     }, delay);\n    // }\n\n    errorHandler(event): void {\n        event.target.src = this.fileService.getSvgAsImageSrc(\n            pepIconNoImage2.data\n        );\n        event.target.title = this.translate.instant('IMAGE.NO_IMAGE');\n    }\n\n    private setProgress(progress): void {\n        this.progress = progress;\n        this.uploader.progress = progress;\n    }\n\n    deleteFile(): void {\n        this.uploader.clearQueue();\n        window.clearInterval(this.intervalID);\n        this.setProgress(0);\n\n        const empltValue = '';\n        this.src = empltValue;\n\n        this.fileChange.emit(null);\n\n        // this.fileChange.emit({\n        //     acceptedExtensions: this.acceptedExtensions,\n        //     fileStr: null,\n        //     fileExt: null,\n        // });\n    }\n\n    onElementClicked(event): void {\n        this.elementClick.emit({\n            key: this.key,\n            controlType: this.controlType,\n            eventWhich: event.which,\n        });\n    }\n\n    onClick_ChooseFile(event): void {\n        if (this.fileInput?.nativeElement) {\n            this.fileInput.nativeElement.click();\n        }\n    }\n\n    onKeyPress_ChooseFile(event): void {\n        const e = event as KeyboardEvent;\n\n        if ([13, 32].indexOf(e.which) !== -1) {\n            if (this.fileInput?.nativeElement) {\n                this.fileInput.nativeElement.click();\n            }\n        }\n        e.preventDefault();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\nimport {\n    PepIconModule,\n    PepIconRegistry,\n    pepIconSystemBin,\n    pepIconSystemAttach,\n    pepIconSystemFileUploadCloud,\n    pepIconSystemProcessing,\n} from '@pepperi-addons/ngx-lib/icon';\nimport { PepDialogModule } from '@pepperi-addons/ngx-lib/dialog';\n\nimport { PepFilesUploaderComponent } from './files-uploader.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        // Material modules,\n        MatCommonModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        // External modules\n        FileUploadModule,\n        // ngx-lib modules\n        PepNgxLibModule,\n        PepIconModule,\n        PepDialogModule,\n    ],\n    exports: [PepFilesUploaderComponent],\n    declarations: [PepFilesUploaderComponent],\n})\nexport class PepFilesUploaderModule {\n    constructor(private pepIconRegistry: PepIconRegistry) {\n        this.pepIconRegistry.registerIcons([\n            pepIconSystemBin,\n            pepIconSystemAttach,\n            pepIconSystemFileUploadCloud,\n            pepIconSystemProcessing,\n        ]);\n    }\n}\n","/*\n * Public API Surface of ngx-lib/files-uploader\n */\nexport * from './files-uploader.module';\nexport * from './files-uploader.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["DEFAULT_HORIZONTAL_ALIGNMENT","EventEmitter","FileUploader","PepDialogData","pepIconNoImage2","Component","ChangeDetectionStrategy","Injectable","PepDialogService","PepCustomizationService","PepFileService","TranslateService","Input","Output","ViewChild","pepIconSystemBin","pepIconSystemAttach","pepIconSystemFileUploadCloud","pepIconSystemProcessing","NgModule","CommonModule","ReactiveFormsModule","MatCommonModule","MatButtonModule","MatFormFieldModule","MatInputModule","MatIconModule","FileUploadModule","PepNgxLibModule","PepIconModule","PepDialogModule","PepIconRegistry"],"mappings":"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"}