(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/forms'), require('@angular/flex-layout'), require('@pepperi-addons/ngx-lib')) :
    typeof define === 'function' && define.amd ? define('@pepperi-addons/ngx-lib/size-detector', ['exports', '@angular/core', '@angular/common', '@angular/forms', '@angular/flex-layout', '@pepperi-addons/ngx-lib'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['pepperi-addons'] = global['pepperi-addons'] || {}, global['pepperi-addons']['ngx-lib'] = global['pepperi-addons']['ngx-lib'] || {}, global['pepperi-addons']['ngx-lib']['size-detector'] = {}), global.ng.core, global.ng.common, global.ng.forms, global.ng.flexLayout, global['pepperi-addons']['ngx-lib']));
}(this, (function (exports, core, common, forms, flexLayout, ngxLib) { 'use strict';

    var PepSizeDetectorComponent = /** @class */ (function () {
        function PepSizeDetectorComponent(hostElement, layoutService) {
            var _this = this;
            this.hostElement = hostElement;
            this.layoutService = layoutService;
            this.showScreenSize = false;
            this._useAsWebComponent = false;
            this.sizeChange = new core.EventEmitter();
            this.prefix = 'is-';
            this.sizes = [
                {
                    id: ngxLib.PepScreenSizeType.XS,
                    name: 'xs',
                    css: "d-block d-sm-none",
                },
                {
                    id: ngxLib.PepScreenSizeType.SM,
                    name: 'sm',
                    css: "d-none d-sm-block d-md-none",
                },
                {
                    id: ngxLib.PepScreenSizeType.MD,
                    name: 'md',
                    css: "d-none d-md-block d-lg-none",
                },
                {
                    id: ngxLib.PepScreenSizeType.LG,
                    name: 'lg',
                    css: "d-none d-lg-block d-xl-none",
                },
                {
                    id: ngxLib.PepScreenSizeType.XL,
                    name: 'xl',
                    css: "d-none d-xl-block",
                },
            ];
            this.layoutService.onResize$.subscribe(function (size) {
                _this.currentSize = _this.sizes.find(function (s) { return s.id === size; });
                _this.sizeChange.emit(_this.currentSize);
            });
        }
        Object.defineProperty(PepSizeDetectorComponent.prototype, "useAsWebComponent", {
            get: function () {
                return this._useAsWebComponent;
            },
            set: function (value) {
                if (value) {
                    this.exportFunctionsOnHostElement();
                }
            },
            enumerable: false,
            configurable: true
        });
        PepSizeDetectorComponent.prototype.onResize = function (event) {
            this.detectScreenSize();
        };
        PepSizeDetectorComponent.prototype.ngAfterViewInit = function () {
            this.detectScreenSize();
        };
        PepSizeDetectorComponent.prototype.detectScreenSize = function () {
            var _this = this;
            this.currentSize = this.sizes.find(function (x) {
                var el = _this.hostElement.nativeElement.querySelector("." + _this.prefix + x.id);
                var isVisible = window.getComputedStyle(el).display !== 'none';
                return isVisible;
            });
            this.layoutService.onResize(this.currentSize.id);
        };
        PepSizeDetectorComponent.prototype.exportFunctionsOnHostElement = function () {
            // This is for web component usage for use those functions.
            this.hostElement.nativeElement.getCurrentSize = this.getCurrentSize.bind(this);
        };
        PepSizeDetectorComponent.prototype.getCurrentSize = function () {
            return this.currentSize;
        };
        return PepSizeDetectorComponent;
    }());
    PepSizeDetectorComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'pep-size-detector',
                    template: "<!-- Bootstrap -->\n<!-- <div *ngFor=\"let s of sizes\" class=\"{{s.css + ' ' + (prefix + s.id) }}\">{{s.name}}</div> -->\n\n<!-- Angular flex-layout -->\n<div *ngFor=\"let s of sizes\" fxShow.xs=\"{{s.name == 'xs'}}\" fxShow.sm=\"{{s.name == 'sm'}}\"\n  fxShow.md=\"{{s.name == 'md'}}\" fxShow.lg=\"{{s.name == 'lg'}}\" fxShow.xl=\"{{s.name == 'xl'}}\"\n  class=\"{{s.css + ' ' + (prefix + s.id) }}\">\n  <ng-container *ngIf=\"showScreenSize\"> The current screen size is - {{s.name}}</ng-container>\n</div>"
                },] }
    ];
    PepSizeDetectorComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: ngxLib.PepLayoutService }
    ]; };
    PepSizeDetectorComponent.propDecorators = {
        showScreenSize: [{ type: core.Input }],
        useAsWebComponent: [{ type: core.Input }],
        sizeChange: [{ type: core.Output }],
        onResize: [{ type: core.HostListener, args: ['window:resize', ['$event'],] }]
    };

    var PepSizeDetectorModule = /** @class */ (function () {
        function PepSizeDetectorModule() {
        }
        return PepSizeDetectorModule;
    }());
    PepSizeDetectorModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule,
                        forms.ReactiveFormsModule,
                        flexLayout.FlexLayoutModule,
                        // ngx-lib modules
                        ngxLib.PepNgxLibModule,
                    ],
                    exports: [PepSizeDetectorComponent],
                    declarations: [PepSizeDetectorComponent],
                },] }
    ];

    /*
     * Public API Surface of ngx-lib/size-detector
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.PepSizeDetectorComponent = PepSizeDetectorComponent;
    exports.PepSizeDetectorModule = PepSizeDetectorModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=pepperi-addons-ngx-lib-size-detector.umd.js.map
