(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material/core'), require('@angular/material/button'), require('@angular/material/form-field'), require('@angular/material/icon'), require('@pepperi-addons/ngx-lib/icon')) :
    typeof define === 'function' && define.amd ? define('@pepperi-addons/ngx-lib/textbox-icon', ['exports', '@angular/core', '@angular/common', '@angular/material/core', '@angular/material/button', '@angular/material/form-field', '@angular/material/icon', '@pepperi-addons/ngx-lib/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['pepperi-addons'] = global['pepperi-addons'] || {}, global['pepperi-addons']['ngx-lib'] = global['pepperi-addons']['ngx-lib'] || {}, global['pepperi-addons']['ngx-lib']['textbox-icon'] = {}), global.ng.core, global.ng.common, global.ng.material.core, global.ng.material.button, global.ng.material.formField, global.ng.material.icon, global['pepperi-addons']['ngx-lib'].icon));
}(this, (function (exports, core, common, core$1, button, formField, icon$1, icon) { 'use strict';

    var PepTextboxIconComponent = /** @class */ (function () {
        function PepTextboxIconComponent() {
            this.test = true;
            this.iconClick = new core.EventEmitter();
        }
        PepTextboxIconComponent.prototype.iconButtonClicked = function () {
            var currentValue = this.value;
            if (currentValue.toString().trim().length > 0) {
                switch (this.type) {
                    case 'email':
                        window.open('mailto:' + currentValue, 'email');
                        break;
                    case 'phone':
                        window.open('tel:' + currentValue, 'tel');
                        break;
                    case 'link':
                        window.open(currentValue);
                        break;
                    default:
                        break;
                }
            }
            this.iconClick.emit();
        };
        return PepTextboxIconComponent;
    }());
    PepTextboxIconComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'pep-textbox-icon',
                    template: "<mat-icon *ngIf=\"type === 'currency'\" class=\"pep-text-icon\">\n    <pep-icon name=\"number_coins\">\n    </pep-icon>\n</mat-icon>\n<mat-icon *ngIf=\"type === 'percentage'\" class=\"pep-text-icon\">\n    <pep-icon name=\"number_percent\">\n    </pep-icon>\n</mat-icon>\n<mat-icon *ngIf=\"type === 'int'\" class=\"pep-text-icon\">\n    <pep-icon name=\"number_number\">\n    </pep-icon>\n</mat-icon>\n<mat-icon *ngIf=\"type === 'real'\" class=\"pep-text-icon\">\n    <pep-icon name=\"number_decimal\">\n    </pep-icon>\n</mat-icon>\n<button *ngIf=\"type === 'phone'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\"\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\n    <mat-icon>\n        <pep-icon name=\"system_phone\">\n        </pep-icon>\n    </mat-icon>\n</button>\n<button *ngIf=\"type === 'email'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\"\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\n    <mat-icon>\n        <pep-icon name=\"system_email\">\n        </pep-icon>\n    </mat-icon>\n</button>\n<button *ngIf=\"type === 'link'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\"\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\n    <mat-icon>\n        <pep-icon name=\"system_link\">\n        </pep-icon>\n    </mat-icon>\n</button>\n<button *ngIf=\"type === 'textarea'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\">\n    <mat-icon>\n        <pep-icon name=\"system_full_screen\">\n        </pep-icon>\n    </mat-icon>\n</button>\n<button *ngIf=\"type === 'richhtmltextarea'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\">\n    <mat-icon>\n        <pep-icon name=\"{{ disabled ? 'system_full_screen' : 'system_edit'}}\">\n        </pep-icon>\n    </mat-icon>\n</button>\n\n<button *ngIf=\"!disabled && type === 'datetime'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\">\n    <mat-icon>\n        <pep-icon name=\"time_datetime\">\n        </pep-icon>\n    </mat-icon>\n</button>\n\n<button *ngIf=\"!disabled && type === 'date'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\">\n    <mat-icon>\n        <pep-icon name=\"time_cal\">\n        </pep-icon>\n    </mat-icon>\n</button>\n\n<!-- <span class=\"pep-text-icon\" *ngIf=\"type === 'percentage'\">%</span> -->\n<!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n<!-- <mat-icon matPrefix>sentiment_very_satisfied</mat-icon> -->\n<!-- <mat-hint>Hint</mat-hint> -->",
                    styles: [":host{display:flex}"]
                },] }
    ];
    PepTextboxIconComponent.propDecorators = {
        value: [{ type: core.Input }],
        label: [{ type: core.Input }],
        type: [{ type: core.Input }],
        disabled: [{ type: core.Input }],
        iconClick: [{ type: core.Output }]
    };

    var PepTextboxIconModule = /** @class */ (function () {
        function PepTextboxIconModule(pepIconRegistry) {
            this.pepIconRegistry = pepIconRegistry;
            this.pepIconRegistry.registerIcons([
                icon.pepIconNumberCoins,
                icon.pepIconNumberPercent,
                icon.pepIconNumberNumber,
                icon.pepIconNumberDecimal,
                icon.pepIconSystemPhone,
                icon.pepIconSystemEmail,
                icon.pepIconSystemLink,
                icon.pepIconSystemFullScreen,
                icon.pepIconSystemEdit,
                icon.pepIconTimeDatetime,
                icon.pepIconTimeCal,
            ]);
        }
        return PepTextboxIconModule;
    }());
    PepTextboxIconModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule,
                        // Material modules,
                        core$1.MatCommonModule,
                        button.MatButtonModule,
                        formField.MatFormFieldModule,
                        icon$1.MatIconModule,
                        // ngx-lib modules
                        icon.PepIconModule,
                    ],
                    exports: [PepTextboxIconComponent],
                    declarations: [PepTextboxIconComponent],
                },] }
    ];
    PepTextboxIconModule.ctorParameters = function () { return [
        { type: icon.PepIconRegistry }
    ]; };

    /*
     * Public API Surface of ngx-lib/textbox-icon
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.PepTextboxIconComponent = PepTextboxIconComponent;
    exports.PepTextboxIconModule = PepTextboxIconModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=pepperi-addons-ngx-lib-textbox-icon.umd.js.map
