{"version":3,"file":"pepperi-addons-ngx-lib-button.umd.js","sources":["../../../projects/ngx-lib/button/button.model.ts","../../../projects/ngx-lib/button/button.component.ts","../../../projects/ngx-lib/button/button.module.ts","../../../projects/ngx-lib/button/public-api.ts","../../../projects/ngx-lib/button/pepperi-addons-ngx-lib-button.ts"],"sourcesContent":["export class PepButton {\n    key: string;\n    value?: string;\n    classNames?: string;\n    disabled?: boolean;\n    iconName?: string;\n    iconPosition?: 'start' | 'end';\n    callback?: (action: IPepButtonClickEvent) => void;\n\n    constructor(data: Partial<PepButton>) {\n        Object.assign(this, data);\n    }\n}\n\nexport interface IPepButtonClickEvent {\n    source: PepButton;\n    event?: Event;\n}\n","import {\n    Component,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ElementRef,\n} from '@angular/core';\nimport {\n    PepStyleType,\n    PepStyleStateType,\n    PepSizeType,\n} from '@pepperi-addons/ngx-lib';\nimport { PepIconType } from '@pepperi-addons/ngx-lib/icon';\nimport { PepButton, IPepButtonClickEvent } from './button.model';\n\n/**\n * This is a button component that support pepperi theme\n * style & state & sizes\n *\n * @export\n * @class PepButtonComponent\n * @implements {OnDestroy}\n */\n@Component({\n    selector: 'pep-button',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.scss'],\n})\nexport class PepButtonComponent implements OnDestroy {\n    /**\n     * The button key\n     *\n     * @type {string}\n     * @memberof PepButtonComponent\n     */\n    @Input() key: string;\n\n    /**\n     * The text on the button.\n     *\n     * @type {string}\n     * @memberof PepButtonComponent\n     */\n    @Input() value: string;\n\n    /**\n     * The style of the button.\n     *\n     * @type {PepStyleType}\n     * @memberof PepButtonComponent\n     */\n    @Input() styleType: PepStyleType = 'weak';\n\n    /**\n     * The style state of the button.\n     *\n     * @type {PepStyleStateType}\n     * @memberof PepButtonComponent\n     */\n    @Input() styleStateType: PepStyleStateType = 'system';\n\n    /**\n     * The size of the button.\n     *\n     * @type {PepSizeType}\n     * @memberof PepButtonComponent\n     */\n    @Input() sizeType: PepSizeType = 'md';\n\n    /**\n     * Class names that should be on the button element tag like classNames=\"class1 class2\"\n     *\n     * @memberof PepButtonComponent\n     */\n    @Input() classNames = '';\n\n    /**\n     * If the button is disable or not.\n     *\n     * @type {boolean}\n     * @memberof PepButtonComponent\n     */\n    @Input() disabled = false;\n\n    /**\n     * The icon name to show on the button. look in (@link icon -> All icons)\n     *\n     * @type {PepIconType} See {@link PepIconType}\n     * @memberof PepButtonComponent\n     */\n    @Input() iconName: PepIconType;\n\n    /**\n     * The icon position.\n     *\n     * @type {('start' | 'end')}\n     * @memberof PepButtonComponent\n     */\n    @Input() iconPosition: 'start' | 'end' = 'end';\n\n    private _visible = true;\n    /**\n     * If the button is visible or not.\n     *\n     * @memberof PepButtonComponent\n     */\n    @Input()\n    set visible(visible: boolean) {\n        if (visible !== undefined) {\n            this._visible = !!visible;\n            if (visible) {\n                this.renderer.removeClass(\n                    this.element.nativeElement,\n                    'hidden-element'\n                );\n            } else {\n                this.renderer.addClass(\n                    this.element.nativeElement,\n                    'hidden-element'\n                );\n            }\n        }\n    }\n    get visible(): boolean {\n        return this._visible;\n    }\n\n    /**\n     * The button click event.\n     *\n     * @type {EventEmitter<IPepButtonClickEvent>}\n     * @memberof PepButtonComponent\n     */\n    @Output()\n    buttonClick: EventEmitter<IPepButtonClickEvent> = new EventEmitter<IPepButtonClickEvent>();\n\n    constructor(private renderer: Renderer2, private element: ElementRef) { }\n\n    ngOnDestroy(): void {\n        // if (this.buttonClick) {\n        //     this.buttonClick.unsubscribe();\n        // }\n    }\n\n    /**\n     * The button click\n     */\n    onButtonClicked(event: Event): void {\n        const button = new PepButton({\n            key: this.key,\n            value: this.value,\n        });\n\n        const buttonClick = {\n            source: button,\n            event,\n        };\n\n        this.buttonClick.emit(buttonClick);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { PepIconModule } from '@pepperi-addons/ngx-lib/icon';\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\n\nimport { PepButtonComponent } from './button.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        // Material modules\n        MatCommonModule,\n        MatButtonModule,\n        MatIconModule,\n        // ngx-lib modules\n        PepNgxLibModule,\n        PepIconModule,\n    ],\n    exports: [PepButtonComponent],\n    declarations: [PepButtonComponent],\n})\nexport class PepButtonModule {}\n","/*\n * Public API Surface of ngx-lib/button\n */\nexport * from './button.module';\nexport * from './button.component';\nexport * from './button.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","Component","Renderer2","ElementRef","Input","Output","NgModule","CommonModule","MatCommonModule","MatButtonModule","MatIconModule","PepNgxLibModule","PepIconModule"],"mappings":";;;;;;;QASI,mBAAY,IAAwB;YAChC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7B;wBACJ;KAAA;;ICKD;;;;;;;;;QAyHI,4BAAoB,QAAmB,EAAU,OAAmB;YAAhD,aAAQ,GAAR,QAAQ,CAAW;YAAU,YAAO,GAAP,OAAO,CAAY;;;;;;;YArF3D,cAAS,GAAiB,MAAM,CAAC;;;;;;;YAQjC,mBAAc,GAAsB,QAAQ,CAAC;;;;;;;YAQ7C,aAAQ,GAAgB,IAAI,CAAC;;;;;;YAO7B,eAAU,GAAG,EAAE,CAAC;;;;;;;YAQhB,aAAQ,GAAG,KAAK,CAAC;;;;;;;YAgBjB,iBAAY,GAAoB,KAAK,CAAC;YAEvC,aAAQ,GAAG,IAAI,CAAC;;;;;;;YAkCxB,gBAAW,GAAuC,IAAIA,iBAAY,EAAwB,CAAC;SAElB;QA9BzE,sBACI,uCAAO;iBAgBX;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;;;;iBAnBD,UACY,OAAgB;gBACxB,IAAI,OAAO,KAAK,SAAS,EAAE;oBACvB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC;oBAC1B,IAAI,OAAO,EAAE;wBACT,IAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,gBAAgB,CACnB,CAAC;qBACL;yBAAM;wBACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAClB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,gBAAgB,CACnB,CAAC;qBACL;iBACJ;aACJ;;;WAAA;QAgBD,wCAAW,GAAX;;;;SAIC;;;;QAKD,4CAAe,GAAf,UAAgB,KAAY;YACxB,IAAM,MAAM,GAAG,IAAI,SAAS,CAAC;gBACzB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC,CAAC;YAEH,IAAM,WAAW,GAAG;gBAChB,MAAM,EAAE,MAAM;gBACd,KAAK,OAAA;aACR,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACtC;;;;gBAxIJC,cAAS,SAAC;oBACP,QAAQ,EAAE,YAAY;oBACtB,o9BAAsC;;iBAEzC;;;gBAvBGC,cAAS;gBACTC,eAAU;;;sBA8BTC,UAAK;wBAQLA,UAAK;4BAQLA,UAAK;iCAQLA,UAAK;2BAQLA,UAAK;6BAOLA,UAAK;2BAQLA,UAAK;2BAQLA,UAAK;+BAQLA,UAAK;0BAQLA,UAAK;8BA2BLC,WAAM;;;;QC9GX;;;;;gBAdCC,aAAQ,SAAC;oBACN,OAAO,EAAE;wBACLC,mBAAY;;wBAEZC,sBAAe;wBACfC,sBAAe;wBACfC,kBAAa;;wBAEbC,sBAAe;wBACfC,oBAAa;qBAChB;oBACD,OAAO,EAAE,CAAC,kBAAkB,CAAC;oBAC7B,YAAY,EAAE,CAAC,kBAAkB,CAAC;iBACrC;;;ICxBD;;;;ICAA;;;;;;;;;;;;;;"}