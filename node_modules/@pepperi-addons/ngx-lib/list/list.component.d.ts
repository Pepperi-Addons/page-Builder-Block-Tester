import { EventEmitter, OnInit, Renderer2, ElementRef, ChangeDetectorRef, OnDestroy, OnChanges, NgZone } from '@angular/core';
import { PepLayoutService, PepScreenSizeType, PepSessionService, UIControl, ObjectsDataRow } from '@pepperi-addons/ngx-lib';
import { IPepFormFieldValueChangeEvent, IPepFormFieldClickEvent } from '@pepperi-addons/ngx-lib/form';
import { IPageInfo } from './virtual-scroller';
import { IPepListLoadItemsEvent, IPepListSortingChangeEvent, IPepListItemClickEvent, PepListSelectionType, PepListViewType, PepSelectionData, PepListPagerType, IPepListLoadPageEvent, IPepListStartIndexChangeEvent, PepListCardSizeType } from './list.model';
import { IPepListPagerChangeEvent } from './list-pager.component';
export declare class PepListComponent implements OnInit, OnChanges, OnDestroy {
    private hostElement;
    private layoutService;
    private sessionService;
    private cd;
    private renderer;
    private zone;
    static TOP_ITEMS_DEFAULT: number;
    static TOP_ITEMS_TABLE: number;
    static TOP_ITEMS_THUMBNAILS: number;
    static TOP_ITEMS_ARRAY: number;
    static SELECTED_ITEMS_STATE_KEY: string;
    static UN_SELECTED_ITEMS_STATE_KEY: string;
    static ALL_SELECTED_STATE_KEY: string;
    static SORT_BY_STATE_KEY: string;
    static ASCENDING_STATE_KEY: string;
    static MINIMUM_COLUMN_WIDTH: number;
    noDataFoundMsg: string;
    selectionTypeForActions: PepListSelectionType;
    showCardSelection: boolean;
    hideAllSelectionInMulti: boolean;
    cardSize: PepListCardSizeType;
    private _viewType;
    set viewType(value: PepListViewType);
    get viewType(): PepListViewType;
    firstFieldAsLink: boolean;
    supportSorting: boolean;
    supportResizing: boolean;
    private _parentScroll;
    set parentScroll(value: Element | Window);
    get parentScroll(): Element | Window;
    disabled: boolean;
    private _lockEvents;
    set lockEvents(value: boolean);
    get lockEvents(): boolean;
    lockItemInnerEvents: boolean;
    printMode: boolean;
    isReport: boolean;
    totalsRow: any[];
    pagerType: PepListPagerType;
    pageSize: number;
    pageIndex: number;
    scrollAnimationTime: number;
    scrollDebounceTime: number;
    scrollThrottlingTime: number;
    private _useAsWebComponent;
    set useAsWebComponent(value: boolean);
    get useAsWebComponent(): boolean;
    itemClick: EventEmitter<IPepListItemClickEvent>;
    fieldClick: EventEmitter<IPepFormFieldClickEvent>;
    valueChange: EventEmitter<IPepFormFieldValueChangeEvent>;
    sortingChange: EventEmitter<IPepListSortingChangeEvent>;
    selectedItemsChange: EventEmitter<number>;
    selectedItemChange: EventEmitter<any>;
    selectAllClick: EventEmitter<any>;
    listLoad: EventEmitter<void>;
    loadItems: EventEmitter<IPepListLoadItemsEvent>;
    loadPage: EventEmitter<IPepListLoadPageEvent>;
    startIndexChange: EventEmitter<IPepListStartIndexChangeEvent>;
    private virtualScroller;
    selectAllCB: any;
    private _layout;
    get layout(): UIControl;
    totalRows: number;
    isTable: boolean;
    private hasColumnWidthOfTypePercentage;
    private _items;
    get items(): Array<ObjectsDataRow>;
    private itemsCounter;
    currentPageItems: Array<ObjectsDataRow>;
    SEPARATOR: string;
    isAllSelected: boolean;
    selectedItems: Map<string, string>;
    unSelectedItems: Map<string, string>;
    private currentTween;
    selectedItemId: string;
    hoveredItemId: string;
    private containerWidth;
    private tableScrollWidth;
    private _loadingItemsFromApi;
    get loadingItemsFromApi(): boolean;
    screenSize: PepScreenSizeType;
    deviceHasMouse: boolean;
    pressedColumn: string;
    startX: number;
    startWidth: number;
    tableStartWidth: number;
    isAsc: boolean;
    sortBy: string;
    isUserSelected: boolean;
    checkForChanges: any;
    calculatedObjectHeight: string;
    constructor(hostElement: ElementRef, layoutService: PepLayoutService, sessionService: PepSessionService, cd: ChangeDetectorRef, renderer: Renderer2, zone: NgZone);
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    private getScrollingElement;
    private scrollToTop;
    private setContainerWidth;
    private saveSortingToSession;
    private getTopItems;
    private toggleLoadingItemsFropApi;
    private updateCurrentPageItems;
    private setSelectionItems;
    private getUniqItemId;
    private setLayout;
    private calcColumnsWidth;
    private initResizeData;
    private getParent;
    private cleanItems;
    private initVariablesFromSession;
    private getIsAllSelected;
    private getNumberOfStartItems;
    private setItemClicked;
    private exportFunctionsOnHostElement;
    getIsAllSelectedForActions(): boolean;
    setIsAllSelected(isChecked: boolean): void;
    selectAllItemsForActions(e: any): void;
    raiseStartIndexChange(startIndex?: number): void;
    getIsItemSelected(item: ObjectsDataRow): boolean;
    selectItemForActions(e: any, itemId: string, isSelectableForActions: boolean, itemType?: string): void;
    itemClicked(e: any, item: ObjectsDataRow): void;
    onTableRowMouseEnter(event: any, itemId: string, itemType: string): void;
    onTableRowMouseLeave(event: any, itemId: string, itemType: string): void;
    onCardMouseEnter(event: any, itemId: string, itemType: string): void;
    onCardMouseLeave(event: any, itemId: string, itemType: string): void;
    clear(): void;
    setSelectedIds(selectedIds: string[], items?: any): void;
    setSelectionDataInSession(): void;
    initListData(layout: UIControl, totalRows: number, items: ObjectsDataRow[]): void;
    updateItems(items: ObjectsDataRow[], event?: IPepListLoadItemsEvent): void;
    updatePage(items: ObjectsDataRow[], event: IPepListLoadPageEvent): void;
    updateItem(data: ObjectsDataRow): void;
    scrollToIndex(index: number, alignToBeginning?: boolean, additionalOffset?: number, animationMilliseconds?: number, animationCompletedCallback?: () => void): void;
    updateItemProperties(itemToUpdate: ObjectsDataRow, data: ObjectsDataRow): void;
    getSelectedItemsData(isForEdit?: boolean): PepSelectionData;
    getIsItemEditable(uid: string): boolean;
    getItemDataByID(uid: string): ObjectsDataRow;
    refresh(): void;
    onWinResize(e: any): void;
    onListResizeStart(event: any, columnKey: any): void;
    onListResize(event: any): void;
    onListResizeEnd(event: any): void;
    onListSortingChange(sortBy: string, isAsc: boolean, event?: any): void;
    onListHeaderMouseEnter(event: any): void;
    onListHeaderMouseLeave(event: any): void;
    onPagerChange(event: IPepListPagerChangeEvent): void;
    onVirtualScrollerChange(event: IPageInfo): void;
    onListLoad(): void;
    onChildRectChange(event: ClientRect): void;
    onValueChanged(valueChange: IPepFormFieldValueChangeEvent): void;
    onCustomizeFieldClick(customizeFieldClickedData: IPepFormFieldClickEvent): void;
}
