import { EventEmitter, OnInit, Renderer2, ElementRef, ChangeDetectorRef, OnDestroy, OnChanges } from '@angular/core';
import { PepLayoutService, UIControl, ObjectsDataRow } from '@pepperi-addons/ngx-lib';
import { IPepFormFieldClickEvent, IPepFormFieldValueChangeEvent } from './form.component';
export declare type PepListViewType = 'cards' | 'lines' | 'table';
export declare class PepInternalListComponent implements OnInit, OnChanges, OnDestroy {
    private element;
    private layoutService;
    private cd;
    private renderer;
    noDataFoundMsg: string;
    hideAllSelectionInMulti: boolean;
    top: number;
    objectId: string;
    parentId: string;
    searchCode: string;
    supportResizing: boolean;
    parentScroll: Element | Window;
    disabled: boolean;
    disableEvents: boolean;
    disableSelectionItems: boolean;
    totalsRow: any[];
    fieldClick: EventEmitter<any>;
    valueChange: EventEmitter<IPepFormFieldValueChangeEvent>;
    noVirtualScrollCont: ElementRef;
    tableHeader: ElementRef;
    selectAllCB: any;
    uiControl: UIControl;
    totalRows: number;
    itemClass: string;
    isTable: boolean;
    private hasColumnWidthOfTypePercentage;
    private _items;
    get items(): Array<ObjectsDataRow>;
    private itemsCounter;
    showItems: boolean;
    viewType: PepListViewType;
    scrollItems: Array<ObjectsDataRow>;
    SEPARATOR: string;
    nativeWindow: any;
    selectedItemId: string;
    hoveredItemId: string;
    private lockEvents;
    private containerWidth;
    deviceHasMouse: boolean;
    pressedColumn: string;
    startX: number;
    startWidth: number;
    tableStartWidth: number;
    isUserSelected: boolean;
    checkForChanges: any;
    useVirtualScroll: boolean;
    calculatedObjectHeight: string;
    constructor(element: ElementRef, layoutService: PepLayoutService, cd: ChangeDetectorRef, renderer: Renderer2);
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    setContainerWidth(): void;
    clear(): void;
    private toggleItems;
    private updateScrollItems;
    getUniqItemId(itemId: string, itemType?: string): string;
    setLayout(): void;
    private calcColumnsWidth;
    private initResizeData;
    onListResizeStart(event: any, columnKey: any): void;
    onListResize(event: any): void;
    getParent(el: any, parentSelector: any): any;
    onListResizeEnd(event: any): void;
    onListHeaderMouseEnter(event: any): void;
    onListHeaderMouseLeave(event: any): void;
    onListChange(event: any): void;
    getParentContainer(): Element | Window;
    onValueChanged(valueChange: IPepFormFieldValueChangeEvent): void;
    onCustomizeFieldClick(customizeFieldClickedData: IPepFormFieldClickEvent): void;
    getIsDisabled(item: ObjectsDataRow): boolean;
    getIsItemSelected(itemId: string, itemType?: string): boolean;
    private setItemClicked;
    itemClicked(e: any, item: ObjectsDataRow): void;
    onTableRowMouseEnter(event: any, itemId: string, itemType: string): void;
    onTableRowMouseLeave(event: any, itemId: string, itemType: string): void;
    onCardMouseEnter(event: any, itemId: string, itemType: string): void;
    onCardMouseLeave(event: any, itemId: string, itemType: string): void;
    winResize(e: any): void;
    trackByFunc(index: number, item: ObjectsDataRow): any;
    cleanItems(): void;
    getUIControl(): UIControl;
    initListData(uiControl: UIControl, totalRows: number, items: ObjectsDataRow[], viewType?: PepListViewType, itemClass?: string): void;
    private updateItems;
    updateItem(data: any): void;
    getIsItemEditable(uid: string): boolean;
    getItemDataByID(uid: string): ObjectsDataRow;
}
