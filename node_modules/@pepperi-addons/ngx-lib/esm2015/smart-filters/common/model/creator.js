import { PepSmartFilterBooleanField, PepSmartFilterDateField, PepSmartFilterMultiSelectField, PepSmartFilterIntField, PepSmartFilterDateTimeField, PepSmartFilterPercentageField, PepSmartFilterCurrencyField, PepSmartFilterRealField, } from './field';
function createBooleanSmartFilterField(data) {
    return new PepSmartFilterBooleanField(data);
}
function createDateSmartFilterField(data) {
    return new PepSmartFilterDateField(data);
}
function createDateTimeSmartFilterField(data) {
    return new PepSmartFilterDateTimeField(data);
}
function createMultiSelectSmartFilterField(data) {
    return new PepSmartFilterMultiSelectField(data);
}
function createIntSmartFilterField(data) {
    return new PepSmartFilterIntField(data);
}
function createRealSmartFilterField(data) {
    return new PepSmartFilterRealField(data);
}
function createCurrencySmartFilterField(data) {
    return new PepSmartFilterCurrencyField(data);
}
function createPercentageSmartFilterField(data) {
    return new PepSmartFilterPercentageField(data);
}
export function createSmartFilterField(data, type) {
    let field;
    switch (type) {
        case 'boolean':
            field = createBooleanSmartFilterField(data);
            break;
        case 'date':
            field = createDateSmartFilterField(data);
            break;
        case 'date-time':
            field = createDateTimeSmartFilterField(data);
            break;
        case 'multi-select':
            field = createMultiSelectSmartFilterField(data);
            break;
        case 'int':
            field = createIntSmartFilterField(data);
            break;
        case 'real':
            field = createRealSmartFilterField(data);
            break;
        case 'currency':
            field = createCurrencySmartFilterField(data);
            break;
        case 'percentage':
            field = createPercentageSmartFilterField(data);
            break;
        default:
            field = createMultiSelectSmartFilterField(data);
            break;
    }
    return field;
}
export function createSmartFilter(fieldId, operator, first, second, operatorUnit) {
    return {
        fieldId: fieldId,
        operator: operator,
        operatorUnit: operatorUnit,
        value: {
            first: first,
            second: second,
        },
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1saWIvc21hcnQtZmlsdGVycy9jb21tb24vbW9kZWwvY3JlYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBR0gsMEJBQTBCLEVBQzFCLHVCQUF1QixFQUN2Qiw4QkFBOEIsRUFDOUIsc0JBQXNCLEVBQ3RCLDJCQUEyQixFQUMzQiw2QkFBNkIsRUFDN0IsMkJBQTJCLEVBQzNCLHVCQUF1QixHQUMxQixNQUFNLFNBQVMsQ0FBQztBQUtqQixTQUFTLDZCQUE2QixDQUFDLElBQTBCO0lBQzdELE9BQU8sSUFBSSwwQkFBMEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxDQUFDO0FBRUQsU0FBUywwQkFBMEIsQ0FBQyxJQUEwQjtJQUMxRCxPQUFPLElBQUksdUJBQXVCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUVELFNBQVMsOEJBQThCLENBQUMsSUFBMEI7SUFDOUQsT0FBTyxJQUFJLDJCQUEyQixDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFFRCxTQUFTLGlDQUFpQyxDQUFDLElBQTBCO0lBQ2pFLE9BQU8sSUFBSSw4QkFBOEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNwRCxDQUFDO0FBRUQsU0FBUyx5QkFBeUIsQ0FBQyxJQUEwQjtJQUN6RCxPQUFPLElBQUksc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDNUMsQ0FBQztBQUVELFNBQVMsMEJBQTBCLENBQUMsSUFBMEI7SUFDMUQsT0FBTyxJQUFJLHVCQUF1QixDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUFFRCxTQUFTLDhCQUE4QixDQUFDLElBQTBCO0lBQzlELE9BQU8sSUFBSSwyQkFBMkIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqRCxDQUFDO0FBRUQsU0FBUyxnQ0FBZ0MsQ0FBQyxJQUEwQjtJQUNoRSxPQUFPLElBQUksNkJBQTZCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUVELE1BQU0sVUFBVSxzQkFBc0IsQ0FDbEMsSUFBMEIsRUFDMUIsSUFBd0I7SUFFeEIsSUFBSSxLQUE4QixDQUFDO0lBRW5DLFFBQVEsSUFBSSxFQUFFO1FBQ1YsS0FBSyxTQUFTO1lBQ1YsS0FBSyxHQUFHLDZCQUE2QixDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzVDLE1BQU07UUFDVixLQUFLLE1BQU07WUFDUCxLQUFLLEdBQUcsMEJBQTBCLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekMsTUFBTTtRQUNWLEtBQUssV0FBVztZQUNaLEtBQUssR0FBRyw4QkFBOEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3QyxNQUFNO1FBQ1YsS0FBSyxjQUFjO1lBQ2YsS0FBSyxHQUFHLGlDQUFpQyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hELE1BQU07UUFDVixLQUFLLEtBQUs7WUFDTixLQUFLLEdBQUcseUJBQXlCLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDeEMsTUFBTTtRQUNWLEtBQUssTUFBTTtZQUNQLEtBQUssR0FBRywwQkFBMEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QyxNQUFNO1FBQ1YsS0FBSyxVQUFVO1lBQ1gsS0FBSyxHQUFHLDhCQUE4QixDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzdDLE1BQU07UUFDVixLQUFLLFlBQVk7WUFDYixLQUFLLEdBQUcsZ0NBQWdDLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDL0MsTUFBTTtRQUVWO1lBQ0ksS0FBSyxHQUFHLGlDQUFpQyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hELE1BQU07S0FDYjtJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2pCLENBQUM7QUFFRCxNQUFNLFVBQVUsaUJBQWlCLENBQzdCLE9BQWUsRUFDZixRQUFpQyxFQUNqQyxLQUFVLEVBQ1YsTUFBWSxFQUNaLFlBQTBDO0lBRTFDLE9BQU87UUFDSCxPQUFPLEVBQUUsT0FBTztRQUNoQixRQUFRLEVBQUUsUUFBUTtRQUNsQixZQUFZLEVBQUUsWUFBWTtRQUMxQixLQUFLLEVBQUU7WUFDSCxLQUFLLEVBQUUsS0FBSztZQUNaLE1BQU0sRUFBRSxNQUFNO1NBQ2pCO0tBQ0osQ0FBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIElQZXBTbWFydEZpbHRlckZpZWxkLFxuICAgIFBlcFNtYXJ0RmlsdGVyQmFzZUZpZWxkLFxuICAgIFBlcFNtYXJ0RmlsdGVyQm9vbGVhbkZpZWxkLFxuICAgIFBlcFNtYXJ0RmlsdGVyRGF0ZUZpZWxkLFxuICAgIFBlcFNtYXJ0RmlsdGVyTXVsdGlTZWxlY3RGaWVsZCxcbiAgICBQZXBTbWFydEZpbHRlckludEZpZWxkLFxuICAgIFBlcFNtYXJ0RmlsdGVyRGF0ZVRpbWVGaWVsZCxcbiAgICBQZXBTbWFydEZpbHRlclBlcmNlbnRhZ2VGaWVsZCxcbiAgICBQZXBTbWFydEZpbHRlckN1cnJlbmN5RmllbGQsXG4gICAgUGVwU21hcnRGaWx0ZXJSZWFsRmllbGQsXG59IGZyb20gJy4vZmllbGQnO1xuaW1wb3J0IHsgSVBlcFNtYXJ0RmlsdGVyRGF0YSB9IGZyb20gJy4vZmlsdGVyJztcbmltcG9ydCB7IElQZXBTbWFydEZpbHRlck9wZXJhdG9yLCBJUGVwU21hcnRGaWx0ZXJPcGVyYXRvclVuaXQgfSBmcm9tICcuL29wZXJhdG9yJztcbmltcG9ydCB7IFBlcFNtYXJ0RmlsdGVyVHlwZSB9IGZyb20gJy4vdHlwZSc7XG5cbmZ1bmN0aW9uIGNyZWF0ZUJvb2xlYW5TbWFydEZpbHRlckZpZWxkKGRhdGE6IElQZXBTbWFydEZpbHRlckZpZWxkKSB7XG4gICAgcmV0dXJuIG5ldyBQZXBTbWFydEZpbHRlckJvb2xlYW5GaWVsZChkYXRhKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRGF0ZVNtYXJ0RmlsdGVyRmllbGQoZGF0YTogSVBlcFNtYXJ0RmlsdGVyRmllbGQpIHtcbiAgICByZXR1cm4gbmV3IFBlcFNtYXJ0RmlsdGVyRGF0ZUZpZWxkKGRhdGEpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVEYXRlVGltZVNtYXJ0RmlsdGVyRmllbGQoZGF0YTogSVBlcFNtYXJ0RmlsdGVyRmllbGQpIHtcbiAgICByZXR1cm4gbmV3IFBlcFNtYXJ0RmlsdGVyRGF0ZVRpbWVGaWVsZChkYXRhKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTXVsdGlTZWxlY3RTbWFydEZpbHRlckZpZWxkKGRhdGE6IElQZXBTbWFydEZpbHRlckZpZWxkKSB7XG4gICAgcmV0dXJuIG5ldyBQZXBTbWFydEZpbHRlck11bHRpU2VsZWN0RmllbGQoZGF0YSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUludFNtYXJ0RmlsdGVyRmllbGQoZGF0YTogSVBlcFNtYXJ0RmlsdGVyRmllbGQpIHtcbiAgICByZXR1cm4gbmV3IFBlcFNtYXJ0RmlsdGVySW50RmllbGQoZGF0YSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWxTbWFydEZpbHRlckZpZWxkKGRhdGE6IElQZXBTbWFydEZpbHRlckZpZWxkKSB7XG4gICAgcmV0dXJuIG5ldyBQZXBTbWFydEZpbHRlclJlYWxGaWVsZChkYXRhKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ3VycmVuY3lTbWFydEZpbHRlckZpZWxkKGRhdGE6IElQZXBTbWFydEZpbHRlckZpZWxkKSB7XG4gICAgcmV0dXJuIG5ldyBQZXBTbWFydEZpbHRlckN1cnJlbmN5RmllbGQoZGF0YSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVBlcmNlbnRhZ2VTbWFydEZpbHRlckZpZWxkKGRhdGE6IElQZXBTbWFydEZpbHRlckZpZWxkKSB7XG4gICAgcmV0dXJuIG5ldyBQZXBTbWFydEZpbHRlclBlcmNlbnRhZ2VGaWVsZChkYXRhKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNtYXJ0RmlsdGVyRmllbGQoXG4gICAgZGF0YTogSVBlcFNtYXJ0RmlsdGVyRmllbGQsXG4gICAgdHlwZTogUGVwU21hcnRGaWx0ZXJUeXBlXG4pOiBQZXBTbWFydEZpbHRlckJhc2VGaWVsZCB7XG4gICAgbGV0IGZpZWxkOiBQZXBTbWFydEZpbHRlckJhc2VGaWVsZDtcblxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgICAgICAgIGZpZWxkID0gY3JlYXRlQm9vbGVhblNtYXJ0RmlsdGVyRmllbGQoZGF0YSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnZGF0ZSc6XG4gICAgICAgICAgICBmaWVsZCA9IGNyZWF0ZURhdGVTbWFydEZpbHRlckZpZWxkKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2RhdGUtdGltZSc6XG4gICAgICAgICAgICBmaWVsZCA9IGNyZWF0ZURhdGVUaW1lU21hcnRGaWx0ZXJGaWVsZChkYXRhKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdtdWx0aS1zZWxlY3QnOlxuICAgICAgICAgICAgZmllbGQgPSBjcmVhdGVNdWx0aVNlbGVjdFNtYXJ0RmlsdGVyRmllbGQoZGF0YSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnaW50JzpcbiAgICAgICAgICAgIGZpZWxkID0gY3JlYXRlSW50U21hcnRGaWx0ZXJGaWVsZChkYXRhKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdyZWFsJzpcbiAgICAgICAgICAgIGZpZWxkID0gY3JlYXRlUmVhbFNtYXJ0RmlsdGVyRmllbGQoZGF0YSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnY3VycmVuY3knOlxuICAgICAgICAgICAgZmllbGQgPSBjcmVhdGVDdXJyZW5jeVNtYXJ0RmlsdGVyRmllbGQoZGF0YSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncGVyY2VudGFnZSc6XG4gICAgICAgICAgICBmaWVsZCA9IGNyZWF0ZVBlcmNlbnRhZ2VTbWFydEZpbHRlckZpZWxkKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGZpZWxkID0gY3JlYXRlTXVsdGlTZWxlY3RTbWFydEZpbHRlckZpZWxkKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpZWxkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU21hcnRGaWx0ZXIoXG4gICAgZmllbGRJZDogc3RyaW5nLFxuICAgIG9wZXJhdG9yOiBJUGVwU21hcnRGaWx0ZXJPcGVyYXRvcixcbiAgICBmaXJzdDogYW55LFxuICAgIHNlY29uZD86IGFueSxcbiAgICBvcGVyYXRvclVuaXQ/OiBJUGVwU21hcnRGaWx0ZXJPcGVyYXRvclVuaXRcbik6IElQZXBTbWFydEZpbHRlckRhdGEge1xuICAgIHJldHVybiB7XG4gICAgICAgIGZpZWxkSWQ6IGZpZWxkSWQsXG4gICAgICAgIG9wZXJhdG9yOiBvcGVyYXRvcixcbiAgICAgICAgb3BlcmF0b3JVbml0OiBvcGVyYXRvclVuaXQsXG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICBmaXJzdDogZmlyc3QsXG4gICAgICAgICAgICBzZWNvbmQ6IHNlY29uZCxcbiAgICAgICAgfSxcbiAgICB9O1xufSJdfQ==