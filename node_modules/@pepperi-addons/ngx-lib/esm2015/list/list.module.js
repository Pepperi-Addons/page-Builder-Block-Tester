import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatCommonModule } from '@angular/material/core';
import { MatButtonModule } from '@angular/material/button';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatRadioModule } from '@angular/material/radio';
import { MatIconModule } from '@angular/material/icon';
import { MatMenuModule } from '@angular/material/menu';
import { PepNgxLibModule } from '@pepperi-addons/ngx-lib';
import { PepBreadCrumbsModule } from '@pepperi-addons/ngx-lib/bread-crumbs';
import { PepButtonModule } from '@pepperi-addons/ngx-lib/button';
import { PepCarouselModule } from '@pepperi-addons/ngx-lib/carousel';
import { PepIconModule, PepIconRegistry, pepIconArrowDown, pepIconArrowEither, pepIconArrowUp, pepIconSystemMust, pepIconArrowRight, pepIconArrowRightAlt, pepIconArrowLeft, pepIconArrowLeftAlt, } from '@pepperi-addons/ngx-lib/icon';
import { PepFormModule } from '@pepperi-addons/ngx-lib/form';
import { PepMenuModule } from '@pepperi-addons/ngx-lib/menu';
import { PepTextboxModule } from '@pepperi-addons/ngx-lib/textbox';
// import { PepListOldComponent } from './list_old.component';
import { PepListComponent } from './list.component';
import { PepListActionsComponent } from './list-actions.component';
import { PepListCarouselComponent } from './list-carousel.component';
import { PepListChooserComponent } from './list-chooser.component';
import { PepListPagerComponent } from './list-pager.component';
import { PepListSortingComponent } from './list-sorting.component';
import { PepListTotalComponent } from './list-total.component';
import { PepListViewsComponent } from './list-views.component';
const listComponents = [
    // PepListOldComponent,
    PepListComponent,
    PepListActionsComponent,
    PepListCarouselComponent,
    PepListChooserComponent,
    PepListPagerComponent,
    PepListSortingComponent,
    PepListTotalComponent,
    PepListViewsComponent,
];
import { IsItemDisabledPipe, IsItemSelectedPipe } from './list.pipes';
const listPipes = [
    IsItemSelectedPipe,
    IsItemDisabledPipe
];
import { VirtualScrollerModule } from './virtual-scroller';
// import { PepVirtualScrollComponent } from './virtual-scroll.component';
export class PepListModule {
    constructor(pepIconRegistry) {
        this.pepIconRegistry = pepIconRegistry;
        this.pepIconRegistry.registerIcons([
            pepIconArrowDown,
            pepIconArrowEither,
            pepIconArrowUp,
            pepIconSystemMust,
            pepIconArrowRight,
            pepIconArrowRightAlt,
            pepIconArrowLeft,
            pepIconArrowLeftAlt,
        ]);
    }
}
PepListModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    // Material modules,
                    MatCommonModule,
                    MatButtonModule,
                    MatCheckboxModule,
                    MatRadioModule,
                    MatIconModule,
                    MatMenuModule,
                    // ngx-lib modules
                    PepNgxLibModule,
                    PepBreadCrumbsModule,
                    PepButtonModule,
                    PepCarouselModule,
                    PepIconModule,
                    PepFormModule,
                    PepMenuModule,
                    PepTextboxModule,
                    VirtualScrollerModule
                ],
                exports: [listComponents],
                declarations: [listComponents, listPipes],
            },] }
];
PepListModule.ctorParameters = () => [
    { type: PepIconRegistry }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbGliL2xpc3QvbGlzdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3JFLE9BQU8sRUFDSCxhQUFhLEVBQ2IsZUFBZSxFQUNmLGdCQUFnQixFQUNoQixrQkFBa0IsRUFDbEIsY0FBYyxFQUNkLGlCQUFpQixFQUNqQixpQkFBaUIsRUFDakIsb0JBQW9CLEVBQ3BCLGdCQUFnQixFQUNoQixtQkFBbUIsR0FDdEIsTUFBTSw4QkFBOEIsQ0FBQztBQUN0QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzdELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRW5FLDhEQUE4RDtBQUM5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUUvRCxNQUFNLGNBQWMsR0FBRztJQUNuQix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2Qix3QkFBd0I7SUFDeEIsdUJBQXVCO0lBQ3ZCLHFCQUFxQjtJQUNyQix1QkFBdUI7SUFDdkIscUJBQXFCO0lBQ3JCLHFCQUFxQjtDQUN4QixDQUFDO0FBRUYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGtCQUFrQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXRFLE1BQU0sU0FBUyxHQUFHO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtDQUNyQixDQUFDO0FBRUYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDM0QsMEVBQTBFO0FBeUIxRSxNQUFNLE9BQU8sYUFBYTtJQUN0QixZQUFvQixlQUFnQztRQUFoQyxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFDaEQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUM7WUFDL0IsZ0JBQWdCO1lBQ2hCLGtCQUFrQjtZQUNsQixjQUFjO1lBQ2QsaUJBQWlCO1lBQ2pCLGlCQUFpQjtZQUNqQixvQkFBb0I7WUFDcEIsZ0JBQWdCO1lBQ2hCLG1CQUFtQjtTQUN0QixDQUFDLENBQUM7SUFDUCxDQUFDOzs7WUFwQ0osUUFBUSxTQUFDO2dCQUNOLE9BQU8sRUFBRTtvQkFDTCxZQUFZO29CQUNaLG9CQUFvQjtvQkFDcEIsZUFBZTtvQkFDZixlQUFlO29CQUNmLGlCQUFpQjtvQkFDakIsY0FBYztvQkFDZCxhQUFhO29CQUNiLGFBQWE7b0JBQ2Isa0JBQWtCO29CQUNsQixlQUFlO29CQUNmLG9CQUFvQjtvQkFDcEIsZUFBZTtvQkFDZixpQkFBaUI7b0JBQ2pCLGFBQWE7b0JBQ2IsYUFBYTtvQkFDYixhQUFhO29CQUNiLGdCQUFnQjtvQkFDaEIscUJBQXFCO2lCQUN4QjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxjQUFjLENBQUM7Z0JBQ3pCLFlBQVksRUFBRSxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUM7YUFDNUM7OztZQXBFRyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IE1hdENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuaW1wb3J0IHsgTWF0QnV0dG9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uJztcbmltcG9ydCB7IE1hdENoZWNrYm94TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2hlY2tib3gnO1xuaW1wb3J0IHsgTWF0UmFkaW9Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9yYWRpbyc7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5pbXBvcnQgeyBNYXRNZW51TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvbWVudSc7XG5cbmltcG9ydCB7IFBlcE5neExpYk1vZHVsZSB9IGZyb20gJ0BwZXBwZXJpLWFkZG9ucy9uZ3gtbGliJztcbmltcG9ydCB7IFBlcEJyZWFkQ3J1bWJzTW9kdWxlIH0gZnJvbSAnQHBlcHBlcmktYWRkb25zL25neC1saWIvYnJlYWQtY3J1bWJzJztcbmltcG9ydCB7IFBlcEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0BwZXBwZXJpLWFkZG9ucy9uZ3gtbGliL2J1dHRvbic7XG5pbXBvcnQgeyBQZXBDYXJvdXNlbE1vZHVsZSB9IGZyb20gJ0BwZXBwZXJpLWFkZG9ucy9uZ3gtbGliL2Nhcm91c2VsJztcbmltcG9ydCB7XG4gICAgUGVwSWNvbk1vZHVsZSxcbiAgICBQZXBJY29uUmVnaXN0cnksXG4gICAgcGVwSWNvbkFycm93RG93bixcbiAgICBwZXBJY29uQXJyb3dFaXRoZXIsXG4gICAgcGVwSWNvbkFycm93VXAsXG4gICAgcGVwSWNvblN5c3RlbU11c3QsXG4gICAgcGVwSWNvbkFycm93UmlnaHQsXG4gICAgcGVwSWNvbkFycm93UmlnaHRBbHQsXG4gICAgcGVwSWNvbkFycm93TGVmdCxcbiAgICBwZXBJY29uQXJyb3dMZWZ0QWx0LFxufSBmcm9tICdAcGVwcGVyaS1hZGRvbnMvbmd4LWxpYi9pY29uJztcbmltcG9ydCB7IFBlcEZvcm1Nb2R1bGUgfSBmcm9tICdAcGVwcGVyaS1hZGRvbnMvbmd4LWxpYi9mb3JtJztcbmltcG9ydCB7IFBlcE1lbnVNb2R1bGUgfSBmcm9tICdAcGVwcGVyaS1hZGRvbnMvbmd4LWxpYi9tZW51JztcbmltcG9ydCB7IFBlcFRleHRib3hNb2R1bGUgfSBmcm9tICdAcGVwcGVyaS1hZGRvbnMvbmd4LWxpYi90ZXh0Ym94JztcblxuLy8gaW1wb3J0IHsgUGVwTGlzdE9sZENvbXBvbmVudCB9IGZyb20gJy4vbGlzdF9vbGQuY29tcG9uZW50JztcbmltcG9ydCB7IFBlcExpc3RDb21wb25lbnQgfSBmcm9tICcuL2xpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFBlcExpc3RBY3Rpb25zQ29tcG9uZW50IH0gZnJvbSAnLi9saXN0LWFjdGlvbnMuY29tcG9uZW50JztcbmltcG9ydCB7IFBlcExpc3RDYXJvdXNlbENvbXBvbmVudCB9IGZyb20gJy4vbGlzdC1jYXJvdXNlbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGVwTGlzdENob29zZXJDb21wb25lbnQgfSBmcm9tICcuL2xpc3QtY2hvb3Nlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGVwTGlzdFBhZ2VyQ29tcG9uZW50IH0gZnJvbSAnLi9saXN0LXBhZ2VyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQZXBMaXN0U29ydGluZ0NvbXBvbmVudCB9IGZyb20gJy4vbGlzdC1zb3J0aW5nLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQZXBMaXN0VG90YWxDb21wb25lbnQgfSBmcm9tICcuL2xpc3QtdG90YWwuY29tcG9uZW50JztcbmltcG9ydCB7IFBlcExpc3RWaWV3c0NvbXBvbmVudCB9IGZyb20gJy4vbGlzdC12aWV3cy5jb21wb25lbnQnO1xuXG5jb25zdCBsaXN0Q29tcG9uZW50cyA9IFtcbiAgICAvLyBQZXBMaXN0T2xkQ29tcG9uZW50LFxuICAgIFBlcExpc3RDb21wb25lbnQsXG4gICAgUGVwTGlzdEFjdGlvbnNDb21wb25lbnQsXG4gICAgUGVwTGlzdENhcm91c2VsQ29tcG9uZW50LFxuICAgIFBlcExpc3RDaG9vc2VyQ29tcG9uZW50LFxuICAgIFBlcExpc3RQYWdlckNvbXBvbmVudCxcbiAgICBQZXBMaXN0U29ydGluZ0NvbXBvbmVudCxcbiAgICBQZXBMaXN0VG90YWxDb21wb25lbnQsXG4gICAgUGVwTGlzdFZpZXdzQ29tcG9uZW50LFxuXTtcblxuaW1wb3J0IHsgSXNJdGVtRGlzYWJsZWRQaXBlLCBJc0l0ZW1TZWxlY3RlZFBpcGUgfSBmcm9tICcuL2xpc3QucGlwZXMnO1xuXG5jb25zdCBsaXN0UGlwZXMgPSBbXG4gICAgSXNJdGVtU2VsZWN0ZWRQaXBlLFxuICAgIElzSXRlbURpc2FibGVkUGlwZVxuXTtcblxuaW1wb3J0IHsgVmlydHVhbFNjcm9sbGVyTW9kdWxlIH0gZnJvbSAnLi92aXJ0dWFsLXNjcm9sbGVyJztcbi8vIGltcG9ydCB7IFBlcFZpcnR1YWxTY3JvbGxDb21wb25lbnQgfSBmcm9tICcuL3ZpcnR1YWwtc2Nyb2xsLmNvbXBvbmVudCc7XG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICAvLyBNYXRlcmlhbCBtb2R1bGVzLFxuICAgICAgICBNYXRDb21tb25Nb2R1bGUsXG4gICAgICAgIE1hdEJ1dHRvbk1vZHVsZSxcbiAgICAgICAgTWF0Q2hlY2tib3hNb2R1bGUsXG4gICAgICAgIE1hdFJhZGlvTW9kdWxlLFxuICAgICAgICBNYXRJY29uTW9kdWxlLFxuICAgICAgICBNYXRNZW51TW9kdWxlLFxuICAgICAgICAvLyBuZ3gtbGliIG1vZHVsZXNcbiAgICAgICAgUGVwTmd4TGliTW9kdWxlLFxuICAgICAgICBQZXBCcmVhZENydW1ic01vZHVsZSxcbiAgICAgICAgUGVwQnV0dG9uTW9kdWxlLFxuICAgICAgICBQZXBDYXJvdXNlbE1vZHVsZSxcbiAgICAgICAgUGVwSWNvbk1vZHVsZSxcbiAgICAgICAgUGVwRm9ybU1vZHVsZSxcbiAgICAgICAgUGVwTWVudU1vZHVsZSxcbiAgICAgICAgUGVwVGV4dGJveE1vZHVsZSxcbiAgICAgICAgVmlydHVhbFNjcm9sbGVyTW9kdWxlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbbGlzdENvbXBvbmVudHNdLFxuICAgIGRlY2xhcmF0aW9uczogW2xpc3RDb21wb25lbnRzLCBsaXN0UGlwZXNdLFxufSlcbmV4cG9ydCBjbGFzcyBQZXBMaXN0TW9kdWxlIHtcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBlcEljb25SZWdpc3RyeTogUGVwSWNvblJlZ2lzdHJ5KSB7XG4gICAgICAgIHRoaXMucGVwSWNvblJlZ2lzdHJ5LnJlZ2lzdGVySWNvbnMoW1xuICAgICAgICAgICAgcGVwSWNvbkFycm93RG93bixcbiAgICAgICAgICAgIHBlcEljb25BcnJvd0VpdGhlcixcbiAgICAgICAgICAgIHBlcEljb25BcnJvd1VwLFxuICAgICAgICAgICAgcGVwSWNvblN5c3RlbU11c3QsXG4gICAgICAgICAgICBwZXBJY29uQXJyb3dSaWdodCxcbiAgICAgICAgICAgIHBlcEljb25BcnJvd1JpZ2h0QWx0LFxuICAgICAgICAgICAgcGVwSWNvbkFycm93TGVmdCxcbiAgICAgICAgICAgIHBlcEljb25BcnJvd0xlZnRBbHQsXG4gICAgICAgIF0pO1xuICAgIH1cbn1cbiJdfQ==