import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class PepPortalService {
    constructor() {
        this.targets = new Map();
    }
    addTarget(targetName, viewContainer) {
        this.targets.set(targetName, viewContainer);
    }
    attach(targetName, template) {
        const target = this.getTarget(targetName);
        if (target) {
            target.createEmbeddedView(template);
        }
    }
    clear(targetName) {
        const target = this.getTarget(targetName);
        if (target) {
            target.clear();
        }
    }
    getTarget(targetName) {
        return this.targets.has(targetName)
            ? this.targets.get(targetName)
            : null;
    }
}
PepPortalService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PepPortalService_Factory() { return new PepPortalService(); }, token: PepPortalService, providedIn: "root" });
PepPortalService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
PepPortalService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9ydGFsLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbGliL3NyYy9jb3JlL3BvcnRhbC9wb3J0YWwuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFpQyxNQUFNLGVBQWUsQ0FBQzs7QUFLMUUsTUFBTSxPQUFPLGdCQUFnQjtJQUd6QjtRQUNJLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxHQUFHLEVBQTRCLENBQUM7SUFDdkQsQ0FBQztJQUVELFNBQVMsQ0FBQyxVQUFrQixFQUFFLGFBQStCO1FBQ3pELElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQWtCLEVBQUUsUUFBMEI7UUFDakQsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUUxQyxJQUFJLE1BQU0sRUFBRTtZQUNSLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN2QztJQUNMLENBQUM7SUFFRCxLQUFLLENBQUMsVUFBa0I7UUFDcEIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUUxQyxJQUFJLE1BQU0sRUFBRTtZQUNSLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUNsQjtJQUNMLENBQUM7SUFFTyxTQUFTLENBQUMsVUFBa0I7UUFDaEMsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUM7WUFDL0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQztZQUM5QixDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ2YsQ0FBQzs7OztZQWxDSixVQUFVLFNBQUM7Z0JBQ1IsVUFBVSxFQUFFLE1BQU07YUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBQZXBQb3J0YWxTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHRhcmdldHM6IE1hcDxzdHJpbmcsIFZpZXdDb250YWluZXJSZWY+O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudGFyZ2V0cyA9IG5ldyBNYXA8c3RyaW5nLCBWaWV3Q29udGFpbmVyUmVmPigpO1xuICAgIH1cblxuICAgIGFkZFRhcmdldCh0YXJnZXROYW1lOiBzdHJpbmcsIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYpOiB2b2lkIHtcbiAgICAgICAgdGhpcy50YXJnZXRzLnNldCh0YXJnZXROYW1lLCB2aWV3Q29udGFpbmVyKTtcbiAgICB9XG5cbiAgICBhdHRhY2godGFyZ2V0TmFtZTogc3RyaW5nLCB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pik6IHZvaWQge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSB0aGlzLmdldFRhcmdldCh0YXJnZXROYW1lKTtcblxuICAgICAgICBpZiAodGFyZ2V0KSB7XG4gICAgICAgICAgICB0YXJnZXQuY3JlYXRlRW1iZWRkZWRWaWV3KHRlbXBsYXRlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsZWFyKHRhcmdldE5hbWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSB0aGlzLmdldFRhcmdldCh0YXJnZXROYW1lKTtcblxuICAgICAgICBpZiAodGFyZ2V0KSB7XG4gICAgICAgICAgICB0YXJnZXQuY2xlYXIoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0VGFyZ2V0KHRhcmdldE5hbWU6IHN0cmluZyk6IFZpZXdDb250YWluZXJSZWYge1xuICAgICAgICByZXR1cm4gdGhpcy50YXJnZXRzLmhhcyh0YXJnZXROYW1lKVxuICAgICAgICAgICAgPyB0aGlzLnRhcmdldHMuZ2V0KHRhcmdldE5hbWUpXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgfVxufVxuIl19