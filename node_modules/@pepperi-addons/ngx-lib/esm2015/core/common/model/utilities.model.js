export class PepGuid {
    static pad4(num) {
        let ret = num.toString(16);
        while (ret.length < 4) {
            ret = '0' + ret;
        }
        return ret;
    }
    static random4() {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    }
    static newGuid() {
        // This is not build for -prod
        // return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {
        //     const r = Math.random() * 16 | 0;
        //     const v = c === 'x' ? r : (r & 0x3 | 0x8);
        //     return v.toString(16);
        // });
        // If we have a cryptographically secure PRNG, use that
        if (typeof window !== 'undefined' &&
            typeof window.crypto !== 'undefined' &&
            typeof window.crypto.getRandomValues !== 'undefined') {
            const buf = new Uint16Array(8);
            window.crypto.getRandomValues(buf);
            return (this.pad4(buf[0]) +
                this.pad4(buf[1]) +
                '-' +
                this.pad4(buf[2]) +
                '-' +
                this.pad4(buf[3]) +
                '-' +
                this.pad4(buf[4]) +
                '-' +
                this.pad4(buf[5]) +
                this.pad4(buf[6]) +
                this.pad4(buf[7]));
        }
        else {
            // Otherwise, just use Math.random
            return (this.random4() +
                this.random4() +
                '-' +
                this.random4() +
                '-' +
                this.random4() +
                '-' +
                this.random4() +
                '-' +
                this.random4() +
                this.random4() +
                this.random4());
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbGl0aWVzLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWxpYi9zcmMvY29yZS9jb21tb24vbW9kZWwvdXRpbGl0aWVzLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxPQUFPO0lBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFXO1FBQzNCLElBQUksR0FBRyxHQUFXLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbkMsT0FBTyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNuQixHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQztTQUNuQjtRQUNELE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQztJQUVPLE1BQU0sQ0FBQyxPQUFPO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUM7YUFDM0MsUUFBUSxDQUFDLEVBQUUsQ0FBQzthQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU87UUFDakIsOEJBQThCO1FBQzlCLDBFQUEwRTtRQUMxRSx3Q0FBd0M7UUFDeEMsaURBQWlEO1FBQ2pELDZCQUE2QjtRQUM3QixNQUFNO1FBRU4sdURBQXVEO1FBQ3ZELElBQ0ksT0FBTyxNQUFNLEtBQUssV0FBVztZQUM3QixPQUFPLE1BQU0sQ0FBQyxNQUFNLEtBQUssV0FBVztZQUNwQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsZUFBZSxLQUFLLFdBQVcsRUFDdEQ7WUFDRSxNQUFNLEdBQUcsR0FBZ0IsSUFBSSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDbkMsT0FBTyxDQUNILElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakIsR0FBRztnQkFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakIsR0FBRztnQkFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakIsR0FBRztnQkFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakIsR0FBRztnQkFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQ3BCLENBQUM7U0FDTDthQUFNO1lBQ0gsa0NBQWtDO1lBQ2xDLE9BQU8sQ0FDSCxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNkLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ2QsR0FBRztnQkFDSCxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNkLEdBQUc7Z0JBQ0gsSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDZCxHQUFHO2dCQUNILElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ2QsR0FBRztnQkFDSCxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNkLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ2QsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUNqQixDQUFDO1NBQ0w7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUGVwR3VpZCB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgcGFkNChudW06IG51bWJlcik6IHN0cmluZyB7XG4gICAgICAgIGxldCByZXQ6IHN0cmluZyA9IG51bS50b1N0cmluZygxNik7XG4gICAgICAgIHdoaWxlIChyZXQubGVuZ3RoIDwgNCkge1xuICAgICAgICAgICAgcmV0ID0gJzAnICsgcmV0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgcmFuZG9tNCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcigoMSArIE1hdGgucmFuZG9tKCkpICogMHgxMDAwMClcbiAgICAgICAgICAgIC50b1N0cmluZygxNilcbiAgICAgICAgICAgIC5zdWJzdHJpbmcoMSk7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBuZXdHdWlkKCk6IHN0cmluZyB7XG4gICAgICAgIC8vIFRoaXMgaXMgbm90IGJ1aWxkIGZvciAtcHJvZFxuICAgICAgICAvLyByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCAoYykgPT4ge1xuICAgICAgICAvLyAgICAgY29uc3QgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDA7XG4gICAgICAgIC8vICAgICBjb25zdCB2ID0gYyA9PT0gJ3gnID8gciA6IChyICYgMHgzIHwgMHg4KTtcbiAgICAgICAgLy8gICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcbiAgICAgICAgLy8gfSk7XG5cbiAgICAgICAgLy8gSWYgd2UgaGF2ZSBhIGNyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZSBQUk5HLCB1c2UgdGhhdFxuICAgICAgICBpZiAoXG4gICAgICAgICAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAgICAgdHlwZW9mIHdpbmRvdy5jcnlwdG8gIT09ICd1bmRlZmluZWQnICYmXG4gICAgICAgICAgICB0eXBlb2Ygd2luZG93LmNyeXB0by5nZXRSYW5kb21WYWx1ZXMgIT09ICd1bmRlZmluZWQnXG4gICAgICAgICkge1xuICAgICAgICAgICAgY29uc3QgYnVmOiBVaW50MTZBcnJheSA9IG5ldyBVaW50MTZBcnJheSg4KTtcbiAgICAgICAgICAgIHdpbmRvdy5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGJ1Zik7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIHRoaXMucGFkNChidWZbMF0pICtcbiAgICAgICAgICAgICAgICB0aGlzLnBhZDQoYnVmWzFdKSArXG4gICAgICAgICAgICAgICAgJy0nICtcbiAgICAgICAgICAgICAgICB0aGlzLnBhZDQoYnVmWzJdKSArXG4gICAgICAgICAgICAgICAgJy0nICtcbiAgICAgICAgICAgICAgICB0aGlzLnBhZDQoYnVmWzNdKSArXG4gICAgICAgICAgICAgICAgJy0nICtcbiAgICAgICAgICAgICAgICB0aGlzLnBhZDQoYnVmWzRdKSArXG4gICAgICAgICAgICAgICAgJy0nICtcbiAgICAgICAgICAgICAgICB0aGlzLnBhZDQoYnVmWzVdKSArXG4gICAgICAgICAgICAgICAgdGhpcy5wYWQ0KGJ1Zls2XSkgK1xuICAgICAgICAgICAgICAgIHRoaXMucGFkNChidWZbN10pXG4gICAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gT3RoZXJ3aXNlLCBqdXN0IHVzZSBNYXRoLnJhbmRvbVxuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICB0aGlzLnJhbmRvbTQoKSArXG4gICAgICAgICAgICAgICAgdGhpcy5yYW5kb200KCkgK1xuICAgICAgICAgICAgICAgICctJyArXG4gICAgICAgICAgICAgICAgdGhpcy5yYW5kb200KCkgK1xuICAgICAgICAgICAgICAgICctJyArXG4gICAgICAgICAgICAgICAgdGhpcy5yYW5kb200KCkgK1xuICAgICAgICAgICAgICAgICctJyArXG4gICAgICAgICAgICAgICAgdGhpcy5yYW5kb200KCkgK1xuICAgICAgICAgICAgICAgICctJyArXG4gICAgICAgICAgICAgICAgdGhpcy5yYW5kb200KCkgK1xuICAgICAgICAgICAgICAgIHRoaXMucmFuZG9tNCgpICtcbiAgICAgICAgICAgICAgICB0aGlzLnJhbmRvbTQoKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==