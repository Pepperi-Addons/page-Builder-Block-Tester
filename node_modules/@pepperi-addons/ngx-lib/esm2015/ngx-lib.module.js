import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { ReactiveFormsModule } from '@angular/forms';
import { httpInterceptorProviders } from './core/http/interceptors/index';
import { PepClipboardDirective } from './core/clipboard/clipboard.directive';
const clipboardList = [PepClipboardDirective];
import { PepRtlClassDirective, PepRtlDirectionDirective, } from './core/layout/rtl.directive';
const layoutList = [PepRtlClassDirective, PepRtlDirectionDirective];
import { PepCapitalizePipe, PepEncodePipe, PepEscapePipe, PepReplaceLineBreaksPipe, PepDateFormatterPipe, PepDateStringFormatterPipe, PepSafeHtmlPipe, PepSafePipe, PepSplitUppercasePipe, PepToNumberPipe, } from './core/common/pipes/common-pipes';
const pipeList = [
    PepCapitalizePipe,
    PepEncodePipe,
    PepEscapePipe,
    PepReplaceLineBreaksPipe,
    PepDateFormatterPipe,
    PepDateStringFormatterPipe,
    PepSafeHtmlPipe,
    PepSafePipe,
    PepSplitUppercasePipe,
    PepToNumberPipe,
];
import { PepInputAutoWidthDirective } from './core/common/directives/auto-width.directive';
import { PepButtonBlurDirective } from './core/common/directives/button-blur.directive';
import { PepButtonLoaderDirective } from './core/common/directives/button-loader.directive';
import { PepMenuBlurDirective } from './core/common/directives/menu-blur.directive';
import { PepDataQaDirective } from './core/common/directives/data-qa.directive';
// import { PreventDoubleClickDirective } from './core/common/directives/debounce-click.directive';
import { PepPreventMultiClickDirective } from './core/common/directives/prevent-multi-click.directive';
import { PepPrintDirective } from './core/common/directives/print.directive';
const utilitiesList = [
    PepInputAutoWidthDirective,
    PepButtonBlurDirective,
    PepButtonLoaderDirective,
    PepMenuBlurDirective,
    PepDataQaDirective,
    // PreventDoubleClickDirective,
    PepPreventMultiClickDirective,
    PepPrintDirective,
];
import { PepAttachDirective } from './core/portal/attach.directive';
import { PepTargetDirective } from './core/portal/target.directive';
const portalList = [PepAttachDirective, PepTargetDirective];
import { TranslateModule } from '@ngx-translate/core';
export class PepNgxLibModule {
}
PepNgxLibModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    pipeList,
                    utilitiesList,
                    clipboardList,
                    layoutList,
                    portalList,
                ],
                providers: [
                    httpInterceptorProviders,
                    // TranslateService
                ],
                imports: [CommonModule, HttpClientModule, ReactiveFormsModule],
                exports: [
                    pipeList,
                    utilitiesList,
                    clipboardList,
                    layoutList,
                    portalList,
                    TranslateModule,
                ],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWxpYi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbGliL3NyYy9uZ3gtbGliLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxzQkFBc0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdyRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUxRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM3RSxNQUFNLGFBQWEsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFFOUMsT0FBTyxFQUNILG9CQUFvQixFQUNwQix3QkFBd0IsR0FDM0IsTUFBTSw2QkFBNkIsQ0FBQztBQUNyQyxNQUFNLFVBQVUsR0FBRyxDQUFDLG9CQUFvQixFQUFFLHdCQUF3QixDQUFDLENBQUM7QUFFcEUsT0FBTyxFQUNILGlCQUFpQixFQUNqQixhQUFhLEVBQ2IsYUFBYSxFQUNiLHdCQUF3QixFQUN4QixvQkFBb0IsRUFDcEIsMEJBQTBCLEVBQzFCLGVBQWUsRUFDZixXQUFXLEVBQ1gscUJBQXFCLEVBQ3JCLGVBQWUsR0FDbEIsTUFBTSxrQ0FBa0MsQ0FBQztBQUMxQyxNQUFNLFFBQVEsR0FBRztJQUNiLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsYUFBYTtJQUNiLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsMEJBQTBCO0lBQzFCLGVBQWU7SUFDZixXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLGVBQWU7Q0FDbEIsQ0FBQztBQUVGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQzNGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3hGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQzVGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ2hGLG1HQUFtRztBQUNuRyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUN2RyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUU3RSxNQUFNLGFBQWEsR0FBRztJQUNsQiwwQkFBMEI7SUFDMUIsc0JBQXNCO0lBQ3RCLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLCtCQUErQjtJQUMvQiw2QkFBNkI7SUFDN0IsaUJBQWlCO0NBQ3BCLENBQUM7QUFFRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVwRSxNQUFNLFVBQVUsR0FBRyxDQUFDLGtCQUFrQixFQUFFLGtCQUFrQixDQUFDLENBQUM7QUFFNUQsT0FBTyxFQUFFLGVBQWUsRUFBb0IsTUFBTSxxQkFBcUIsQ0FBQztBQXdCeEUsTUFBTSxPQUFPLGVBQWU7OztZQXRCM0IsUUFBUSxTQUFDO2dCQUNOLFlBQVksRUFBRTtvQkFDVixRQUFRO29CQUNSLGFBQWE7b0JBQ2IsYUFBYTtvQkFDYixVQUFVO29CQUNWLFVBQVU7aUJBQ2I7Z0JBQ0QsU0FBUyxFQUFFO29CQUNQLHdCQUF3QjtvQkFDeEIsbUJBQW1CO2lCQUN0QjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsbUJBQW1CLENBQUM7Z0JBQzlELE9BQU8sRUFBRTtvQkFDTCxRQUFRO29CQUNSLGFBQWE7b0JBQ2IsYUFBYTtvQkFDYixVQUFVO29CQUNWLFVBQVU7b0JBQ1YsZUFBZTtpQkFDbEI7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSwgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IGh0dHBJbnRlcmNlcHRvclByb3ZpZGVycyB9IGZyb20gJy4vY29yZS9odHRwL2ludGVyY2VwdG9ycy9pbmRleCc7XG5cbmltcG9ydCB7IFBlcENsaXBib2FyZERpcmVjdGl2ZSB9IGZyb20gJy4vY29yZS9jbGlwYm9hcmQvY2xpcGJvYXJkLmRpcmVjdGl2ZSc7XG5jb25zdCBjbGlwYm9hcmRMaXN0ID0gW1BlcENsaXBib2FyZERpcmVjdGl2ZV07XG5cbmltcG9ydCB7XG4gICAgUGVwUnRsQ2xhc3NEaXJlY3RpdmUsXG4gICAgUGVwUnRsRGlyZWN0aW9uRGlyZWN0aXZlLFxufSBmcm9tICcuL2NvcmUvbGF5b3V0L3J0bC5kaXJlY3RpdmUnO1xuY29uc3QgbGF5b3V0TGlzdCA9IFtQZXBSdGxDbGFzc0RpcmVjdGl2ZSwgUGVwUnRsRGlyZWN0aW9uRGlyZWN0aXZlXTtcblxuaW1wb3J0IHtcbiAgICBQZXBDYXBpdGFsaXplUGlwZSxcbiAgICBQZXBFbmNvZGVQaXBlLFxuICAgIFBlcEVzY2FwZVBpcGUsXG4gICAgUGVwUmVwbGFjZUxpbmVCcmVha3NQaXBlLFxuICAgIFBlcERhdGVGb3JtYXR0ZXJQaXBlLFxuICAgIFBlcERhdGVTdHJpbmdGb3JtYXR0ZXJQaXBlLFxuICAgIFBlcFNhZmVIdG1sUGlwZSxcbiAgICBQZXBTYWZlUGlwZSxcbiAgICBQZXBTcGxpdFVwcGVyY2FzZVBpcGUsXG4gICAgUGVwVG9OdW1iZXJQaXBlLFxufSBmcm9tICcuL2NvcmUvY29tbW9uL3BpcGVzL2NvbW1vbi1waXBlcyc7XG5jb25zdCBwaXBlTGlzdCA9IFtcbiAgICBQZXBDYXBpdGFsaXplUGlwZSxcbiAgICBQZXBFbmNvZGVQaXBlLFxuICAgIFBlcEVzY2FwZVBpcGUsXG4gICAgUGVwUmVwbGFjZUxpbmVCcmVha3NQaXBlLFxuICAgIFBlcERhdGVGb3JtYXR0ZXJQaXBlLFxuICAgIFBlcERhdGVTdHJpbmdGb3JtYXR0ZXJQaXBlLFxuICAgIFBlcFNhZmVIdG1sUGlwZSxcbiAgICBQZXBTYWZlUGlwZSxcbiAgICBQZXBTcGxpdFVwcGVyY2FzZVBpcGUsXG4gICAgUGVwVG9OdW1iZXJQaXBlLFxuXTtcblxuaW1wb3J0IHsgUGVwSW5wdXRBdXRvV2lkdGhEaXJlY3RpdmUgfSBmcm9tICcuL2NvcmUvY29tbW9uL2RpcmVjdGl2ZXMvYXV0by13aWR0aC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUGVwQnV0dG9uQmx1ckRpcmVjdGl2ZSB9IGZyb20gJy4vY29yZS9jb21tb24vZGlyZWN0aXZlcy9idXR0b24tYmx1ci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUGVwQnV0dG9uTG9hZGVyRGlyZWN0aXZlIH0gZnJvbSAnLi9jb3JlL2NvbW1vbi9kaXJlY3RpdmVzL2J1dHRvbi1sb2FkZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IFBlcE1lbnVCbHVyRGlyZWN0aXZlIH0gZnJvbSAnLi9jb3JlL2NvbW1vbi9kaXJlY3RpdmVzL21lbnUtYmx1ci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUGVwRGF0YVFhRGlyZWN0aXZlIH0gZnJvbSAnLi9jb3JlL2NvbW1vbi9kaXJlY3RpdmVzL2RhdGEtcWEuZGlyZWN0aXZlJztcbi8vIGltcG9ydCB7IFByZXZlbnREb3VibGVDbGlja0RpcmVjdGl2ZSB9IGZyb20gJy4vY29yZS9jb21tb24vZGlyZWN0aXZlcy9kZWJvdW5jZS1jbGljay5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUGVwUHJldmVudE11bHRpQ2xpY2tEaXJlY3RpdmUgfSBmcm9tICcuL2NvcmUvY29tbW9uL2RpcmVjdGl2ZXMvcHJldmVudC1tdWx0aS1jbGljay5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUGVwUHJpbnREaXJlY3RpdmUgfSBmcm9tICcuL2NvcmUvY29tbW9uL2RpcmVjdGl2ZXMvcHJpbnQuZGlyZWN0aXZlJztcblxuY29uc3QgdXRpbGl0aWVzTGlzdCA9IFtcbiAgICBQZXBJbnB1dEF1dG9XaWR0aERpcmVjdGl2ZSxcbiAgICBQZXBCdXR0b25CbHVyRGlyZWN0aXZlLFxuICAgIFBlcEJ1dHRvbkxvYWRlckRpcmVjdGl2ZSxcbiAgICBQZXBNZW51Qmx1ckRpcmVjdGl2ZSxcbiAgICBQZXBEYXRhUWFEaXJlY3RpdmUsXG4gICAgLy8gUHJldmVudERvdWJsZUNsaWNrRGlyZWN0aXZlLFxuICAgIFBlcFByZXZlbnRNdWx0aUNsaWNrRGlyZWN0aXZlLFxuICAgIFBlcFByaW50RGlyZWN0aXZlLFxuXTtcblxuaW1wb3J0IHsgUGVwQXR0YWNoRGlyZWN0aXZlIH0gZnJvbSAnLi9jb3JlL3BvcnRhbC9hdHRhY2guZGlyZWN0aXZlJztcbmltcG9ydCB7IFBlcFRhcmdldERpcmVjdGl2ZSB9IGZyb20gJy4vY29yZS9wb3J0YWwvdGFyZ2V0LmRpcmVjdGl2ZSc7XG5cbmNvbnN0IHBvcnRhbExpc3QgPSBbUGVwQXR0YWNoRGlyZWN0aXZlLCBQZXBUYXJnZXREaXJlY3RpdmVdO1xuXG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUsIFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgcGlwZUxpc3QsXG4gICAgICAgIHV0aWxpdGllc0xpc3QsXG4gICAgICAgIGNsaXBib2FyZExpc3QsXG4gICAgICAgIGxheW91dExpc3QsXG4gICAgICAgIHBvcnRhbExpc3QsXG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgaHR0cEludGVyY2VwdG9yUHJvdmlkZXJzLFxuICAgICAgICAvLyBUcmFuc2xhdGVTZXJ2aWNlXG4gICAgXSxcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBIdHRwQ2xpZW50TW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIHBpcGVMaXN0LFxuICAgICAgICB1dGlsaXRpZXNMaXN0LFxuICAgICAgICBjbGlwYm9hcmRMaXN0LFxuICAgICAgICBsYXlvdXRMaXN0LFxuICAgICAgICBwb3J0YWxMaXN0LFxuICAgICAgICBUcmFuc2xhdGVNb2R1bGUsXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgUGVwTmd4TGliTW9kdWxlIHtcbiAgICAvLyBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFBlcE5neExpYk1vZHVsZT4ge1xuICAgIC8vICAgICByZXR1cm4ge1xuICAgIC8vICAgICAgICAgbmdNb2R1bGU6IFBlcE5neExpYk1vZHVsZSxcbiAgICAvLyAgICAgICAgIHByb3ZpZGVyczogW1BlcEN1c3RvbWl6YXRpb25TZXJ2aWNlXVxuICAgIC8vICAgICB9O1xuICAgIC8vIH1cbiAgICAvLyBzdGF0aWMgZm9yUm9vdCgpIHtcbiAgICAvLyAgICAgcmV0dXJuIHtcbiAgICAvLyAgICAgICBuZ01vZHVsZTogUGVwTmd4TGliTW9kdWxlLFxuICAgIC8vICAgICAgIHByb3ZpZGVyczogWyBQZXBDdXN0b21pemF0aW9uU2VydmljZSBdXG4gICAgLy8gICAgIH1cbiAgICAvLyB9XG59XG4iXX0=