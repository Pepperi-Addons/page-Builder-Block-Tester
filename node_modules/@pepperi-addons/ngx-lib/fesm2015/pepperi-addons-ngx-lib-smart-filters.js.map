{"version":3,"file":"pepperi-addons-ngx-lib-smart-filters.js","sources":["../../../projects/ngx-lib/smart-filters/smart-filters.component.ts","../../../projects/ngx-lib/smart-filters/common/filter-actions.component.ts","../../../projects/ngx-lib/smart-filters/common/model/operator.ts","../../../projects/ngx-lib/smart-filters/common/model/base-filter-component.ts","../../../projects/ngx-lib/smart-filters/boolean-filter/boolean-filter.component.ts","../../../projects/ngx-lib/smart-filters/date-filter/date-filter.component.ts","../../../projects/ngx-lib/smart-filters/multi-select-filter/multi-select-filter.component.ts","../../../projects/ngx-lib/smart-filters/number-filter/number-filter.component.ts","../../../projects/ngx-lib/smart-filters/smart-filters.module.ts","../../../projects/ngx-lib/smart-filters/common/model/field.ts","../../../projects/ngx-lib/smart-filters/common/model/creator.ts","../../../projects/ngx-lib/smart-filters/public-api.ts","../../../projects/ngx-lib/smart-filters/pepperi-addons-ngx-lib-smart-filters.ts"],"sourcesContent":["import {\n    Component,\n    Input,\n    ChangeDetectionStrategy,\n    Output,\n    EventEmitter,\n    ElementRef,\n} from '@angular/core';\nimport {\n    IPepSmartFilterField,\n    PepSmartFilterBaseField,\n} from './common/model/field';\nimport { PepLayoutService } from '@pepperi-addons/ngx-lib';\nimport { IPepSmartFilterData } from './common/model/filter';\n\n@Component({\n    selector: 'pep-smart-filters',\n    templateUrl: './smart-filters.component.html',\n    styleUrls: ['./smart-filters.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PepSmartFiltersComponent {\n\n    @Input() title = '';\n\n    filtersDataMap: Map<string, IPepSmartFilterData> = new Map<\n        string,\n        IPepSmartFilterData\n    >();\n\n    private _filters: IPepSmartFilterData[] = [];\n    @Input()\n    set filters(value: IPepSmartFilterData[]) {\n        this._filters = value;\n        this.setupFilters(value);\n    }\n    get filters(): IPepSmartFilterData[] {\n        this._filters = [...this.filtersDataMap.keys()]\n            // .filter((key) => this.filtersDataMap.get(key) !== null)\n            .map((key) => {\n                if (key) {\n                    return this.filtersDataMap.get(key);\n                }\n            });\n\n        return this._filters;\n    }\n\n    private _fields: Array<IPepSmartFilterField> = [];\n    @Input()\n    set fields(value: Array<IPepSmartFilterField>) {\n        this._fields = value;\n    }\n    get fields(): Array<IPepSmartFilterField> {\n        return this._fields;\n    }\n\n    private _useAsWebComponent = false;\n    @Input()\n    set useAsWebComponent(value: boolean) {\n        if (value) {\n            this.exportFunctionsOnHostElement();\n        }\n    }\n    get useAsWebComponent(): boolean {\n        return this._useAsWebComponent;\n    }\n\n    // @Output()\n    // filtersClear: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    filtersChange: EventEmitter<IPepSmartFilterData[]> = new EventEmitter<\n        IPepSmartFilterData[]\n    >();\n\n    @Output()\n    fieldToggleChange: EventEmitter<IPepSmartFilterField> = new EventEmitter<IPepSmartFilterField>();\n\n    expansionPanelHeaderHeight = '*';\n\n    constructor(\n        private hostElement: ElementRef,\n        public layoutService: PepLayoutService\n    ) { }\n\n    private exportFunctionsOnHostElement() {\n        // This is for web component usage for use those functions.\n        this.hostElement.nativeElement.clearFilters = this.clearFilters.bind(\n            this\n        );\n        this.hostElement.nativeElement.clearFilter = this.clearFilter.bind(\n            this\n        );\n        this.hostElement.nativeElement.toggleField = this.toggleField.bind(\n            this\n        );\n    }\n\n    private setupFilters(value: IPepSmartFilterData[]) {\n        this.filtersDataMap.clear();\n        if (value) {\n            value.forEach((filter) => {\n                // Validate before add the filter into the map.\n                let currentField = null;\n\n                if (this.fields && this.fields.length > 0) {\n                    currentField = this.fields.find(\n                        (field) => field.id === filter.fieldId\n                    ) as PepSmartFilterBaseField;\n                }\n\n                if (currentField) {\n                    // Only if the operator is from the same type\n                    if (\n                        filter.operator.componentType.includes(\n                            currentField.componentType\n                        )\n                    ) {\n                        let isOperatorUnitValid = true;\n                        if (filter.operatorUnit) {\n                            // Only if the operator unit is not from the same type\n                            if (\n                                !filter.operatorUnit.componentType.includes(\n                                    currentField.componentType\n                                )\n                            ) {\n                                isOperatorUnitValid = false;\n                            }\n                        }\n\n                        // Add the filter.\n                        if (isOperatorUnitValid) {\n                            this.filtersDataMap.set(filter.fieldId, filter);\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    private raiseFiltersChange(): void {\n        this.filtersChange.emit(this.filters);\n    }\n\n    toggleField(index: number, isOpen: boolean): void {\n        this.fields[index].isOpen = isOpen;\n        this.fieldToggleChange.emit(this.fields[index]);\n    }\n\n    clearFilters() {\n        this.filtersDataMap.clear();\n    }\n\n    clearFilter(fieldId: string) {\n        this.filtersDataMap.delete(fieldId);\n    }\n\n    // Clear all the filters and raise event that filters has change.\n    onFiltersClear() {\n        this.clearFilters();\n        this.raiseFiltersChange();\n    }\n\n    // Clear the filter and raise event that filters has change.\n    onFilterClear(field: IPepSmartFilterField) {\n        this.clearFilter(field.id);\n        this.raiseFiltersChange();\n    }\n\n    // Set the filter and raise event that filters has change.\n    onFilterChange(\n        field: IPepSmartFilterField,\n        filterData: IPepSmartFilterData\n    ) {\n        this.clearFilter(field.id);\n        this.filtersDataMap.set(field.id, filterData);\n        this.raiseFiltersChange();\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'pep-filter-actions',\n    templateUrl: './filter-actions.component.html',\n    styleUrls: ['./filter-actions.component.scss'],\n})\nexport class PepFilterActionsComponent {\n    @Input() form: FormGroup;\n\n    @Output() clearClick: EventEmitter<void> = new EventEmitter<void>();\n    @Output() applyClick: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    clear() {\n        this.clearClick.emit();\n    }\n\n    apply() {\n        this.applyClick.emit();\n    }\n}\n","import {\n    PepSmartFilterComponentType,\n    PepSmartFilterOperatorType,\n    PepSmartFilterOperatorUnitType,\n} from './type';\nexport class IPepSmartFilterOperator {\n    id: PepSmartFilterOperatorType;\n    name: string;\n    short: string;\n    componentType: PepSmartFilterComponentType[];\n}\n\nconst Equals: IPepSmartFilterOperator = {\n    id: 'eq',\n    name: 'EQUAL',\n    short: '=',\n    componentType: [\n        'number',\n        'boolean'\n        // 'multi-select',\n        // 'date',\n        // 'text',\n        // 'auto-complete',\n        // 'select',\n    ],\n};\n\nconst NotEqual: IPepSmartFilterOperator = {\n    id: 'neq',\n    name: 'NOT_EQUAL',\n    short: '<>',\n    componentType: [\n        'number',\n        // 'multi-select',\n        // 'date',\n        // 'text',\n        // 'auto-complete',\n        // 'select',\n    ],\n};\n\nconst LessThan: IPepSmartFilterOperator = {\n    id: 'lt',\n    name: 'LESS_THEN',\n    short: '<',\n    componentType: ['number'],\n};\n\n// const LessThanOrEquals: IPepSmartFilterOperator = {\n//     id: 'ltoe',\n//     name: 'LESS_THEN_OR_EQUAL',\n//     short: '<=',\n//     type: ['number'],\n// };\n\nconst GreaterThan: IPepSmartFilterOperator = {\n    id: 'gt',\n    name: 'GREATER_THEN',\n    short: '>',\n    componentType: ['number'],\n};\n\n// const GreaterThanOrEquals: IPepSmartFilterOperator = {\n//     id: 'gtoe',\n//     name: 'GREATER_THEN_OR_EQUAL',\n//     short: '>=',\n//     type: ['number'],\n// };\n\nconst NumberRange: IPepSmartFilterOperator = {\n    id: 'numberRange',\n    name: 'NUMBER_RANGE',\n    short: 'Range',\n    componentType: ['number'],\n};\n\n// const Contains: Operator = {\n//     id: 'contains',\n//     name: 'Contains',\n//     short: 'Contains',\n//     type: ['text'],\n// };\n\n// const BeginsWith: Operator = {\n//     id: 'beginsWith',\n//     name: 'Begins With',\n//     short: 'Begins With',\n//     type: ['text'],\n// };\n\n// const EndsWith: Operator = {\n//     id: 'endsWith',\n//     name: 'Ends With',\n//     short: 'End With',\n//     type: ['text'],\n// };\n\n// const After: Operator = {\n//     id: 'after',\n//     name: 'After',\n//     short: 'After',\n//     type: ['date'],\n// };\n\n// const Before: Operator = {\n//     id: 'before',\n//     name: 'Before',\n//     short: 'Before',\n//     type: ['date'],\n// };\n\nconst InTheLast: IPepSmartFilterOperator = {\n    id: 'inTheLast',\n    name: 'IN_THE_LAST',\n    short: 'In the last',\n    componentType: ['date'],\n};\n\nconst Today: IPepSmartFilterOperator = {\n    id: 'today',\n    name: 'TODAY',\n    short: 'Today',\n    componentType: ['date'],\n};\n\nconst ThisWeek: IPepSmartFilterOperator = {\n    id: 'thisWeek',\n    name: 'THIS_WEEK',\n    short: 'This week',\n    componentType: ['date'],\n};\n\nconst ThisMonth: IPepSmartFilterOperator = {\n    id: 'thisMonth',\n    name: 'THIS_MONTH',\n    short: 'This month',\n    componentType: ['date'],\n};\n\nconst DateRange: IPepSmartFilterOperator = {\n    id: 'dateRange',\n    name: 'DATE_RANGE',\n    short: 'Range',\n    componentType: ['date'],\n};\n\nconst DueIn: IPepSmartFilterOperator = {\n    id: 'dueIn',\n    name: 'DUE_IN',\n    short: 'Due in',\n    componentType: ['date'],\n};\n\nconst On: IPepSmartFilterOperator = {\n    id: 'on',\n    name: 'ON',\n    short: 'On',\n    componentType: ['date'],\n};\n\nconst NotInTheLast: IPepSmartFilterOperator = {\n    id: 'notInTheLast',\n    name: 'NOT_IN_THE_LAST',\n    short: 'Not in the last',\n    componentType: ['date'],\n};\n\nconst NotDueIn: IPepSmartFilterOperator = {\n    id: 'notDueIn',\n    name: 'NOT_DUE_IN',\n    short: 'Not due in',\n    componentType: ['date'],\n};\n\nconst IsEmpty: IPepSmartFilterOperator = {\n    id: 'isEmpty',\n    name: 'IS_EMPTY',\n    short: 'Is empty',\n    componentType: ['date'],\n};\n\nconst IsNotEmpty: IPepSmartFilterOperator = {\n    id: 'isNotEmpty',\n    name: 'IS_NOT_EMPTY',\n    short: 'Is not empty',\n    componentType: ['date'],\n};\n\nconst In: IPepSmartFilterOperator = {\n    id: 'in',\n    name: 'IN',\n    short: 'In',\n    componentType: ['multi-select'],\n};\n\nexport const PepSmartFilterOperators = {\n    Equals: Equals,\n    NotEqual: NotEqual,\n    LessThan: LessThan,\n    // LessThanOrEquals: LessThanOrEquals,\n    GreaterThan: GreaterThan,\n    // GreaterThanOrEquals: GreaterThanOrEquals,\n    NumberRange: NumberRange,\n    // Contains: Contains,\n    // BeginsWith: BeginsWith,\n    // EndsWith: EndsWith,\n    // After: After,\n    // Before: Before,\n    InTheLast: InTheLast,\n    Today: Today,\n    ThisWeek: ThisWeek,\n    ThisMonth: ThisMonth,\n    DateRange: DateRange,\n    DueIn: DueIn,\n    On: On,\n    NotInTheLast: NotInTheLast,\n    NotDueIn: NotDueIn,\n    IsEmpty: IsEmpty,\n    IsNotEmpty: IsNotEmpty,\n    In: In,\n};\n\nexport class IPepSmartFilterOperatorUnit {\n    id: PepSmartFilterOperatorUnitType;\n    name: string;\n    componentType: PepSmartFilterComponentType[];\n}\n\nconst Days: IPepSmartFilterOperatorUnit = {\n    id: 'days',\n    name: 'DAYS',\n    componentType: ['date'],\n};\n\nconst Weeks: IPepSmartFilterOperatorUnit = {\n    id: 'weeks',\n    name: 'WEEKS',\n    componentType: ['date'],\n};\n\nconst Months: IPepSmartFilterOperatorUnit = {\n    id: 'months',\n    name: 'MONTHS',\n    componentType: ['date'],\n};\n\nconst Years: IPepSmartFilterOperatorUnit = {\n    id: 'years',\n    name: 'YEARS',\n    componentType: ['date'],\n};\n\nexport const PepSmartFilterOperatorUnits = {\n    Days: Days,\n    Weeks: Weeks,\n    Months: Months,\n    Years: Years,\n};\n","import {\n    Directive,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    AfterViewInit,\n    Output,\n    ChangeDetectorRef,\n    Renderer2,\n    TemplateRef,\n    ViewContainerRef,\n    ViewChild,\n    ComponentFactoryResolver,\n    ComponentFactory,\n    ComponentRef,\n    Injector,\n    ElementRef,\n} from '@angular/core';\nimport {\n    AbstractControl,\n    FormBuilder,\n    FormGroup,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    ValidatorFn,\n    Validators,\n} from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { PepValidatorService } from '@pepperi-addons/ngx-lib';\nimport {\n    IPepSmartFilterOperator,\n    IPepSmartFilterOperatorUnit,\n    PepSmartFilterOperators,\n    PepSmartFilterOperatorUnits,\n} from './operator';\nimport { forwardRef } from '@angular/core';\nimport { IPepSmartFilterData, IPepSmartFilterDataValue } from './filter';\nimport { PepSmartFilterBaseField } from './field';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PepFilterActionsComponent } from '../filter-actions.component';\n\n@Directive({})\nexport abstract class BaseFilterComponent\n    implements OnInit, OnChanges, OnDestroy {\n    private readonly _destroyed: Subject<void>;\n    private actionsContainerRef: ComponentRef<PepFilterActionsComponent>;\n\n    private _fieldIdWithNoDots = '';\n    private _field: PepSmartFilterBaseField;\n    @Input()\n    set field(value: PepSmartFilterBaseField) {\n        this._field = value;\n        this._fieldIdWithNoDots = value ? value.id.replace(/./g, '_') : '';\n        this.setupForm();\n    }\n    get field(): PepSmartFilterBaseField {\n        return this._field;\n    }\n\n    private _filter: IPepSmartFilterData;\n    @Input()\n    set filter(value: IPepSmartFilterData) {\n        this._filter = value;\n        this.setupFilter();\n    }\n    get filter(): IPepSmartFilterData {\n        return this._filter;\n    }\n\n    @Output() filterClear: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    filterChange: EventEmitter<IPepSmartFilterData> = new EventEmitter<IPepSmartFilterData>();\n\n    private _operator: IPepSmartFilterOperator;\n    set operator(operator: IPepSmartFilterOperator) {\n        if (operator?.id != this._operator?.id) {\n            // Validate operator\n            const index = this.operators.findIndex((o) => o.id === operator.id);\n            if (index >= 0) {\n                this._operator = this.operators[index];\n            } else {\n                this._operator = this.operators[0];\n            }\n\n            this.form.reset();\n            this.updateValidity();\n        }\n    }\n    get operator(): IPepSmartFilterOperator {\n        return this._operator;\n    }\n\n    private _operatorUnit: IPepSmartFilterOperatorUnit;\n    set operatorUnit(operatorUnit: IPepSmartFilterOperatorUnit) {\n        // Validate operator unit\n        if (operatorUnit === undefined) {\n            this._operatorUnit = undefined;\n        } else {\n            const index = this.operatorUnits.findIndex(\n                (ou) => ou.id === operatorUnit.id\n            );\n            if (index >= 0) {\n                this._operatorUnit = this.operatorUnits[index];\n            } else {\n                this._operatorUnit = this.operatorUnits[0];\n            }\n        }\n    }\n    get operatorUnit(): IPepSmartFilterOperatorUnit {\n        return this._operatorUnit;\n    }\n\n    get firstControlKey() {\n        return this.field ? `${this._fieldIdWithNoDots}_first` : 'first';\n    }\n    get firstControl(): AbstractControl {\n        return this.form.get(this.firstControlKey);\n    }\n    get secondControlKey() {\n        return this.field ? `${this._fieldIdWithNoDots}_second` : 'second';\n    }\n    get secondControl(): AbstractControl {\n        return this.form.get(this.secondControlKey);\n    }\n\n    protected operators: IPepSmartFilterOperator[];\n    protected operatorUnits: IPepSmartFilterOperatorUnit[];\n\n    protected readonly OPERATORS_TRANSLATION_PREFIX = 'SMART_FILTERS.OPERATORS';\n    protected readonly OPERATOR_UNITS_TRANSLATION_PREFIX =\n        'SMART_FILTERS.OPERATOR_UNITS';\n\n    form: FormGroup;\n\n    constructor(\n        private viewContainerRef: ViewContainerRef,\n        private injector: Injector,\n        private resolver: ComponentFactoryResolver,\n        private builder: FormBuilder,\n        protected translate: TranslateService,\n        protected validator: PepValidatorService,\n        protected renderer: Renderer2\n    ) {\n        this._destroyed = new Subject();\n    }\n\n    private createActionsComponent() {\n        const factory: ComponentFactory<PepFilterActionsComponent> = this.resolver.resolveComponentFactory(\n            PepFilterActionsComponent\n        );\n\n        this.actionsContainerRef = factory.create(this.injector);\n        this.actionsContainerRef.instance.form = this.form;\n        this.actionsContainerRef.instance.applyClick.subscribe(() =>\n            this.applyFilter()\n        );\n        this.actionsContainerRef.instance.clearClick.subscribe(() =>\n            this.clearFilter()\n        );\n\n        this.viewContainerRef.insert(this.actionsContainerRef.hostView);\n    }\n\n    private setupForm() {\n        const formValue = {};\n        formValue[this.firstControlKey] = [];\n        formValue[this.secondControlKey] = [];\n        // this.form.patchValue(formValue);\n\n        this.form = this.builder.group(formValue);\n        // this.form[this.firstControlKey] = [];\n        // this.form[this.secondControlKey] = [];\n\n        this.setupOperators();\n\n        this.createActionsComponent();\n    }\n\n    private setupOperators() {\n        // Get the operators by componentType.\n        this.operators = Object.keys(PepSmartFilterOperators)\n            .filter((key) => {\n                return PepSmartFilterOperators[key].componentType.includes(\n                    this.field.componentType\n                );\n            })\n            .map((key) => PepSmartFilterOperators[key]);\n\n        // Filter by from field.operators input if exist.\n        if (this.field.operators?.length > 0) {\n            this.operators = this.operators.filter((o1) =>\n                this.field.operators.some((o2) => o1.id === o2)\n            );\n        }\n\n        // Get the operator units by componentType.\n        this.operatorUnits = Object.keys(PepSmartFilterOperatorUnits)\n            .filter((key) => {\n                return PepSmartFilterOperatorUnits[key].componentType.includes(\n                    this.field.componentType\n                );\n            })\n            .map((key) => PepSmartFilterOperatorUnits[key]);\n\n        // Filter by from field.operatorsUnits input if exist.\n        if (this.field.operatorUnits?.length > 0) {\n            this.operatorUnits = this.operatorUnits.filter((o1) =>\n                this.field.operatorUnits.some((o2) => o1.id === o2)\n            );\n        }\n\n        // Load translation before get the options in the children.\n        this.translate.get('SMART_FILTERS.TITLE').subscribe((res) => {\n            this.loadOperatorsOptions();\n        });\n    }\n\n    private setupFilter() {\n        if (this.filter) {\n            this.operator = this.filter.operator;\n            this.operatorUnit = this.filter.operatorUnit;\n            const formValue = {};\n            formValue[this.firstControlKey] = this.filter.value.first;\n            formValue[this.secondControlKey] = this.filter.value.second;\n            this.form.patchValue(formValue);\n        } else {\n            this.operator = this.getDefaultOperator();\n            this.operatorUnit = this.getDefaultOperatorUnit();\n            this.clearFilter(false);\n        }\n    }\n\n    protected getDestroyer() {\n        return takeUntil(this._destroyed);\n    }\n\n    private updateValidity() {\n        this.setFieldsStateAndValidators();\n\n        this.firstControl.updateValueAndValidity();\n        this.secondControl.updateValueAndValidity();\n    }\n    // Load the operators options from the translation.\n    protected loadOperatorsOptions(): void {\n        // Not implemented in the base\n    }\n\n    // Set default validators - some childs override this.\n    protected setFieldsStateAndValidators(): void {\n        this.firstControl.setValidators(Validators.required);\n        this.secondControl.setValidators(Validators.required);\n        this.secondControl.disable();\n    }\n\n    // Return undefined - some childs override this.\n    protected getDefaultOperatorUnit(): IPepSmartFilterOperatorUnit {\n        return undefined;\n    }\n\n    protected initFilter() {\n        // Not implemented in the base\n    }\n\n    abstract getDefaultOperator(): IPepSmartFilterOperator;\n    abstract getFilterValue(): IPepSmartFilterDataValue;\n\n    clearFilter(emitEvent = true) {\n        this._filter = null;\n        this.form.reset();\n        this.initFilter();\n\n        if (emitEvent) {\n            this.filterClear.emit();\n        }\n    }\n\n    applyFilter() {\n        const filterValue = this.getFilterValue();\n\n        // If the filter is not null declare it, else - clear it.\n        if (filterValue) {\n            const filter = {\n                fieldId: this.field.id,\n                operator: this.operator,\n                operatorUnit: this.operatorUnit,\n                value: filterValue,\n            };\n            this._filter = filter;\n            this.filterChange.emit(filter);\n        } else {\n            this.clearFilter();\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.form) {\n            this.updateValidity();\n        }\n    }\n\n    ngOnChanges(): void {\n        // if (this.form) {\n        //     this.updateValidity();\n        // }\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed.next();\n        this._destroyed.complete();\n\n        this.actionsContainerRef.destroy();\n    }\n\n    // writeValue(value: IPepSmartFilterDataValue): void {\n    //     if (value) {\n    //         this.form.setValue(\n    //             {\n    //                 first: value.first,\n    //                 second: value.second || null,\n    //             },\n    //             { emitEvent: false }\n    //         );\n    //     } else {\n    //         this.form.reset();\n    //     }\n    // }\n\n    // registerOnChange(fn: any): void {\n    //     this.form.valueChanges.subscribe(fn);\n    // }\n\n    // onTouched: () => void = () => {\n    //     /* Do nothing */\n    // };\n\n    // registerOnTouched(fn: any): void {\n    //     this.onTouched = fn;\n    // }\n\n    // setDisabledState?(isDisabled: boolean): void {\n    //     isDisabled ? this.form.disable() : this.form.enable();\n    // }\n\n    // validate(control: AbstractControl): ValidationErrors {\n    //     return this.form.valid ? null : { PepFilterIsNotValid: true };\n    // }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BaseFilterComponent } from '../common/model/base-filter-component';\nimport {\n    IPepSmartFilterOperator,\n    PepSmartFilterOperators,\n} from '../common/model/operator';\nimport { IPepSmartFilterDataValue } from '../common/model/filter';\n\n@Component({\n    selector: 'pep-boolean-filter',\n    templateUrl: './boolean-filter.component.html',\n    styleUrls: ['./boolean-filter.component.scss'],\n})\nexport class PepBooleanFilterComponent extends BaseFilterComponent {\n    // Override\n    getDefaultOperator(): IPepSmartFilterOperator {\n        return PepSmartFilterOperators.Equals;\n    }\n\n    // Override\n    getFilterValue(): IPepSmartFilterDataValue {\n        const filterValue = { first: this.firstControl.value || false };\n        return filterValue;\n    }\n\n    // // Override\n    // setFieldsStateAndValidators(): void {\n    //     this.secondControl.disable();\n    // }\n}\n","import { Component } from '@angular/core';\nimport { BaseFilterComponent } from '../common/model/base-filter-component';\nimport {\n    IPepSmartFilterOperator,\n    IPepSmartFilterOperatorUnit,\n    PepSmartFilterOperators,\n    PepSmartFilterOperatorUnits,\n} from '../common/model/operator';\nimport { IPepSmartFilterDataValue } from '../common/model/filter';\nimport { Validators } from '@angular/forms';\nimport { IPepOption } from '@pepperi-addons/ngx-lib';\n\n@Component({\n    selector: 'pep-date-filter',\n    templateUrl: './date-filter.component.html',\n    styleUrls: ['./date-filter.component.scss'],\n})\nexport class PepDateFilterComponent extends BaseFilterComponent {\n    PepSmartFilterOperators = PepSmartFilterOperators;\n    chooseTimeOptions: Array<IPepOption> = [];\n    chooseTimeUnitOptions: Array<IPepOption> = [];\n\n    // Override\n    getDefaultOperator(): IPepSmartFilterOperator {\n        return PepSmartFilterOperators.InTheLast;\n    }\n\n    // Override\n    getDefaultOperatorUnit(): IPepSmartFilterOperatorUnit {\n        if (this.operator === PepSmartFilterOperators.InTheLast ||\n            this.operator === PepSmartFilterOperators.NotInTheLast ||\n            this.operator === PepSmartFilterOperators.DueIn ||\n            this.operator === PepSmartFilterOperators.NotDueIn) {\n            return PepSmartFilterOperatorUnits.Months;\n        } else {\n            return undefined;\n        }\n    }\n\n    // Override\n    getFilterValue(): IPepSmartFilterDataValue {\n        const filterValue = {\n            first: this.firstControl.value,\n        };\n\n        if (this.operator === PepSmartFilterOperators.DateRange) {\n            filterValue['second'] = this.secondControl.value;\n        }\n\n        return filterValue;\n    }\n\n    // Override\n    loadOperatorsOptions() {\n        this.chooseTimeOptions = this.operators.map((operator) => {\n            return {\n                key: operator.id,\n                value: this.translate.instant(\n                    `${this.OPERATORS_TRANSLATION_PREFIX}.${operator.name}`\n                ),\n            };\n        });\n\n        this.chooseTimeUnitOptions = this.operatorUnits.map((operatorUnit) => {\n            return {\n                key: operatorUnit.id,\n                value: this.translate.instant(\n                    `${this.OPERATOR_UNITS_TRANSLATION_PREFIX}.${operatorUnit.name}`\n                ),\n            };\n        });\n    }\n\n    // Override\n    setFieldsStateAndValidators(): void {\n        this.firstControl.enable();\n\n        if (this.operator === PepSmartFilterOperators.DateRange) {\n            this.firstControl.setValidators(Validators.required);\n            this.secondControl.enable();\n            this.secondControl.setValidators(Validators.required);\n        } else if (\n            this.operator === PepSmartFilterOperators.InTheLast ||\n            this.operator === PepSmartFilterOperators.NotInTheLast ||\n            this.operator === PepSmartFilterOperators.DueIn ||\n            this.operator === PepSmartFilterOperators.NotDueIn\n        ) {\n            this.firstControl.setValidators([\n                Validators.required,\n                this.validator.numberValidator(),\n            ]);\n            this.secondControl.disable();\n        } else {\n            // Disable 'first' field.\n            if (\n                this.operator === PepSmartFilterOperators.Today ||\n                this.operator === PepSmartFilterOperators.ThisWeek ||\n                this.operator === PepSmartFilterOperators.ThisMonth ||\n                this.operator === PepSmartFilterOperators.IsEmpty ||\n                this.operator === PepSmartFilterOperators.IsNotEmpty\n            ) {\n                this.firstControl.disable();\n            }\n\n            // Default disable 'second' field.\n            super.setFieldsStateAndValidators();\n        }\n    }\n\n    onOperatorChanged(value: string) {\n        const operator = Object.values(PepSmartFilterOperators).find(\n            (operator) => operator.id === value\n        );\n\n        this.operator = operator;\n        this.operatorUnit = this.getDefaultOperatorUnit();\n    }\n\n    onTimeUnitChanged(value: string) {\n        const operatorUnit = Object.values(PepSmartFilterOperatorUnits).find(\n            (operatorUnit) => operatorUnit.id === value\n        );\n        this.operatorUnit = operatorUnit;\n    }\n}\n","import {\n    AfterViewInit,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { BaseFilterComponent } from '../common/model/base-filter-component';\nimport {\n    IPepSmartFilterOperator,\n    PepSmartFilterOperators,\n} from '../common/model/operator';\nimport { IPepSmartFilterDataValue } from '../common/model/filter';\nimport { IPepSmartFilterFieldOption } from '../common/model/field';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { VirtualScrollerComponent } from 'ngx-virtual-scroller';\n\nclass PepMultiSelectFilterOption implements IPepSmartFilterFieldOption {\n    value: string;\n    count?: number;\n    selected = false;\n}\n\n@Component({\n    selector: 'pep-multi-select-filter',\n    templateUrl: './multi-select-filter.component.html',\n    styleUrls: ['./multi-select-filter.component.scss'],\n})\nexport class PepMultiSelectFilterComponent\n    extends BaseFilterComponent\n    implements OnInit, AfterViewInit {\n    options: PepMultiSelectFilterOption[] = [];\n    filteredOptions$: Observable<any>;\n    searchControl = new FormControl();\n\n    @ViewChild('optionsContainer')\n    optionsContainer: ElementRef;\n\n    private readonly MAX_OPTIONS_TO_SHOW = 6.35;\n    @ViewChild(VirtualScrollerComponent)\n    private virtualScroller: VirtualScrollerComponent;\n\n    numberOptionsToShowSearch = 10;\n\n    ngOnInit() {\n        super.ngOnInit;\n\n        if (this.field.options?.length > 0) {\n            this.options = this.field.options.map((opt) => {\n                return { value: opt.value, count: opt.count, selected: false };\n            });\n        } else {\n            this.searchControl.disable();\n        }\n\n        // Init the selected values from first value.\n        const firstControl = this.firstControl;\n        if (firstControl.value) {\n            this.initOptionsSelectedValues(firstControl.value);\n        }\n\n        // Add subscription for the first value change to set the selected options.\n        firstControl.valueChanges\n            .pipe(this.getDestroyer(), distinctUntilChanged())\n            .subscribe((selectedValues: string[]) => {\n                this.initOptionsSelectedValues(selectedValues);\n            });\n\n        // Filter the options by the search control.\n        this.filteredOptions$ = this.searchControl.valueChanges.pipe(\n            this.getDestroyer(),\n            startWith<any>(''),\n            map((option) =>\n                typeof option === 'string' ? option : option && option.value\n            ),\n            map((value) => (value ? this.filterOptions(value) : this.options))\n        );\n\n        // Each time the filter change.\n        this.filteredOptions$.subscribe(\n            (filterdOptions: PepMultiSelectFilterOption[]) => {\n                this.calcOptionsHeight(filterdOptions.length);\n                setTimeout(() => {\n                    // 8 is the padding top of the multi-select-options\n                    this.virtualScroller.scrollToPosition(-8);\n                }, 125);\n            }\n        );\n    }\n\n    ngAfterViewInit(): void {\n        // Calc for the first time.\n        this.calcOptionsHeight(this.options.length);\n    }\n\n    initOptionsSelectedValues(selectedValues: string[]): void {\n        this.options.forEach((opt) => {\n            const isValueSelected =\n                selectedValues && selectedValues.includes(opt.value);\n            opt.selected = isValueSelected;\n        });\n    }\n\n    private calcOptionsHeight(optionsCount: number) {\n        if (this.optionsContainer) {\n            const optionsToShow =\n                optionsCount > this.MAX_OPTIONS_TO_SHOW\n                    ? this.MAX_OPTIONS_TO_SHOW\n                    : optionsCount;\n            // optionsToShow * 2.25 is 1 option height + 1 is the padding top & bottom of the container.\n            const optionsHeight = optionsToShow * 2.25 + 1 + 'rem';\n\n            this.renderer.setStyle(\n                this.optionsContainer.nativeElement,\n                'height',\n                optionsHeight\n            );\n        }\n    }\n\n    private filterOptions(value: string): any[] {\n        const filterValue = value.toLowerCase();\n        return this.options.filter(\n            (opt) =>\n                opt.value &&\n                opt.value.toLowerCase().includes(filterValue.toLowerCase())\n        );\n    }\n\n    // Override\n    getDefaultOperator(): IPepSmartFilterOperator {\n        return PepSmartFilterOperators.In;\n    }\n\n    // Override\n    getFilterValue(): IPepSmartFilterDataValue {\n        const selectedValues = this.options\n            .filter((opt) => opt.selected)\n            .map((opt) => opt.value);\n        const filterValue = {\n            first: selectedValues,\n        };\n\n        return selectedValues.length > 0 ? filterValue : null;\n    }\n\n    // Override\n    initFilter() {\n        this.options.forEach((opt) => (opt.selected = false));\n        this.searchControl.setValue('');\n    }\n\n    onOptionChange(\n        option: PepMultiSelectFilterOption,\n        event: MatCheckboxChange\n    ) {\n        option.selected = event.checked;\n        this.firstControl.setValue(\n            this.options.filter((opt) => opt.selected).map((opt) => opt.value),\n            { emitEvent: false }\n        );\n    }\n}\n","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { BaseFilterComponent } from '../common/model/base-filter-component';\nimport {\n    IPepSmartFilterOperator,\n    PepSmartFilterOperators,\n} from '../common/model/operator';\nimport { IPepSmartFilterDataValue } from '../common/model/filter';\nimport { Validators } from '@angular/forms';\nimport { IPepOption } from '@pepperi-addons/ngx-lib';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n    selector: 'pep-number-filter',\n    templateUrl: './number-filter.component.html',\n    styleUrls: ['./number-filter.component.scss'],\n})\nexport class PepNumberFilterComponent extends BaseFilterComponent implements OnInit {\n    PepSmartFilterOperators = PepSmartFilterOperators;\n    chooseTypeOptions: Array<IPepOption> = [];\n\n    ngOnInit() {\n        this.firstControl.valueChanges\n            .pipe(this.getDestroyer(), distinctUntilChanged())\n            .subscribe(() => {\n                this.setFieldsStateAndValidators();\n            });\n\n        this.secondControl.valueChanges\n            .pipe(this.getDestroyer(), distinctUntilChanged())\n            .subscribe(() => {\n                this.setFieldsStateAndValidators();\n            });\n    }\n\n    // Override\n    getDefaultOperator(): IPepSmartFilterOperator {\n        return PepSmartFilterOperators.Equals;\n    }\n\n    // Override\n    getFilterValue(): IPepSmartFilterDataValue {\n        const filterValue = {\n            first: this.firstControl.value,\n        };\n\n        if (this.operator === PepSmartFilterOperators.NumberRange) {\n            filterValue['second'] = this.secondControl.value;\n        }\n\n        return filterValue;\n    }\n\n    // Override\n    loadOperatorsOptions() {\n        this.chooseTypeOptions = this.operators.map((operator) => {\n            return {\n                key: operator.id,\n                value: this.translate.instant(\n                    `${this.OPERATORS_TRANSLATION_PREFIX}.${operator.name}`\n                ),\n            };\n        });\n    }\n\n    // Override\n    setFieldsStateAndValidators(): void {\n        if (this.operator === PepSmartFilterOperators.NumberRange) {\n            const firstValidators = [Validators.required];\n            if (this.secondControl.value) {\n                firstValidators.push(this.validator.isLessThan(this.secondControl));\n            }\n            this.firstControl.setValidators(firstValidators);\n\n\n            this.secondControl.enable();\n            const secondValidators = [Validators.required];\n            if (this.firstControl.value) {\n                secondValidators.push(this.validator.isGreaterThan(this.firstControl));\n            }\n            this.secondControl.setValidators(secondValidators);\n        } else {\n            super.setFieldsStateAndValidators();\n        }\n    }\n\n    onOperatorChanged(value: string) {\n        const operator = Object.values(PepSmartFilterOperators).find(\n            (operator) => operator.id === value\n        );\n        this.operator = operator;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\n\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\nimport { PepCheckboxModule } from '@pepperi-addons/ngx-lib/checkbox';\nimport { PepDateModule } from '@pepperi-addons/ngx-lib/date';\nimport { PepSelectModule } from '@pepperi-addons/ngx-lib/select';\nimport { PepTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\nimport { PepSearchModule } from '@pepperi-addons/ngx-lib/search';\nimport {\n    PepIconModule,\n    PepIconRegistry,\n    pepIconNumberMinus,\n    pepIconNumberPlus,\n} from '@pepperi-addons/ngx-lib/icon';\n\n// import { BaseFilterComponent } from './common/model/base-filter-component';\nimport { PepSmartFiltersComponent } from './smart-filters.component';\nimport { PepFilterActionsComponent } from './common/filter-actions.component';\nimport { PepBooleanFilterComponent } from './boolean-filter/boolean-filter.component';\nimport { PepDateFilterComponent } from './date-filter/date-filter.component';\nimport { PepMultiSelectFilterComponent } from './multi-select-filter/multi-select-filter.component';\nimport { PepNumberFilterComponent } from './number-filter/number-filter.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FlexLayoutModule,\n        // Material modules\n        MatCommonModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatExpansionModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatRadioModule,\n        // External modules\n        VirtualScrollerModule,\n        // ngx-lib modules\n        PepNgxLibModule,\n        PepCheckboxModule,\n        PepDateModule,\n        PepSelectModule,\n        PepTextboxModule,\n        PepSearchModule,\n        PepIconModule,\n    ],\n    exports: [PepSmartFiltersComponent],\n    declarations: [\n        // BaseFilterComponent,\n        PepSmartFiltersComponent,\n        PepFilterActionsComponent,\n        PepBooleanFilterComponent,\n        PepDateFilterComponent,\n        PepMultiSelectFilterComponent,\n        PepNumberFilterComponent,\n    ],\n})\nexport class PepSmartFiltersModule {\n    constructor(private pepIconRegistry: PepIconRegistry) {\n        this.pepIconRegistry.registerIcons([\n            pepIconNumberMinus,\n            pepIconNumberPlus,\n        ]);\n    }\n}\n","import {\n    IPepSmartFilterOperator,\n    IPepSmartFilterOperatorUnit,\n} from './operator';\nimport {\n    PepSmartFilterComponentType,\n    PepSmartFilterType,\n    PepSmartFilterOperatorType,\n    PepSmartFilterOperatorUnitType,\n} from './type';\n\nexport interface IPepSmartFilterFieldOption {\n    value: string;\n    count?: number;\n}\n\nexport interface IPepSmartFilterField {\n    id: string;\n    name: string;\n    isOpen?: boolean;\n    options?: IPepSmartFilterFieldOption[];\n    operators?: PepSmartFilterOperatorType[];\n    operatorUnits?: PepSmartFilterOperatorUnitType[];\n}\n\n// Base field\n// ------------------------------\nexport abstract class PepSmartFilterBaseField implements IPepSmartFilterField {\n    id: string;\n    name: string;\n    isOpen?: boolean;\n    options?: IPepSmartFilterFieldOption[];\n    operators?: PepSmartFilterOperatorType[];\n    operatorUnits?: PepSmartFilterOperatorUnitType[];\n\n    protected _componentType: PepSmartFilterComponentType;\n    get componentType(): PepSmartFilterComponentType {\n        return this._componentType;\n    }\n\n    private _type: PepSmartFilterType;\n    get type(): PepSmartFilterType {\n        return this._type;\n    }\n\n    constructor(field: IPepSmartFilterField) {\n        this.id = field.id;\n        this.name = field.name;\n        this.isOpen = field.isOpen;\n        this.options = field.options;\n        this.operators = field.operators;\n        this.operatorUnits = field.operatorUnits;\n\n        this._type = this.getType();\n    }\n\n    protected abstract getType(): PepSmartFilterType;\n}\n\n// Boolean field\n// ------------------------------\nexport class PepSmartFilterBooleanField extends PepSmartFilterBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n        this._componentType = 'boolean';\n    }\n\n    getType(): PepSmartFilterType {\n        return 'boolean';\n    }\n}\n\n// Date fields\n// ------------------------------\nexport abstract class PepSmartFilterDateBaseField extends PepSmartFilterBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n        this._componentType = 'date';\n    }\n}\nexport class PepSmartFilterDateField extends PepSmartFilterDateBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n    }\n\n    getType(): PepSmartFilterType {\n        return 'date';\n    }\n}\nexport class PepSmartFilterDateTimeField extends PepSmartFilterDateBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n    }\n\n    getType(): PepSmartFilterType {\n        return 'date-time';\n    }\n}\n\n// Multi select field\n// ------------------------------\nexport class PepSmartFilterMultiSelectField extends PepSmartFilterBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n        this._componentType = 'multi-select';\n    }\n\n    getType(): PepSmartFilterType {\n        return 'multi-select';\n    }\n}\n\n// Number fields\n// ------------------------------\nexport abstract class PepSmartFilterNumberBaseField extends PepSmartFilterBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n        this._componentType = 'number';\n    }\n}\nexport class PepSmartFilterIntField extends PepSmartFilterNumberBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n    }\n\n    getType(): PepSmartFilterType {\n        return 'int';\n    }\n}\nexport class PepSmartFilterRealField extends PepSmartFilterNumberBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n    }\n\n    getType(): PepSmartFilterType {\n        return 'real';\n    }\n}\nexport class PepSmartFilterCurrencyField extends PepSmartFilterNumberBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n    }\n\n    getType(): PepSmartFilterType {\n        return 'currency';\n    }\n}\nexport class PepSmartFilterPercentageField extends PepSmartFilterNumberBaseField {\n    constructor(field: IPepSmartFilterField) {\n        super(field);\n    }\n\n    getType(): PepSmartFilterType {\n        return 'percentage';\n    }\n}\n","import {\n    IPepSmartFilterField,\n    PepSmartFilterBaseField,\n    PepSmartFilterBooleanField,\n    PepSmartFilterDateField,\n    PepSmartFilterMultiSelectField,\n    PepSmartFilterIntField,\n    PepSmartFilterDateTimeField,\n    PepSmartFilterPercentageField,\n    PepSmartFilterCurrencyField,\n    PepSmartFilterRealField,\n} from './field';\nimport { IPepSmartFilterData } from './filter';\nimport { IPepSmartFilterOperator, IPepSmartFilterOperatorUnit } from './operator';\nimport { PepSmartFilterType } from './type';\n\nfunction createBooleanSmartFilterField(data: IPepSmartFilterField) {\n    return new PepSmartFilterBooleanField(data);\n}\n\nfunction createDateSmartFilterField(data: IPepSmartFilterField) {\n    return new PepSmartFilterDateField(data);\n}\n\nfunction createDateTimeSmartFilterField(data: IPepSmartFilterField) {\n    return new PepSmartFilterDateTimeField(data);\n}\n\nfunction createMultiSelectSmartFilterField(data: IPepSmartFilterField) {\n    return new PepSmartFilterMultiSelectField(data);\n}\n\nfunction createIntSmartFilterField(data: IPepSmartFilterField) {\n    return new PepSmartFilterIntField(data);\n}\n\nfunction createRealSmartFilterField(data: IPepSmartFilterField) {\n    return new PepSmartFilterRealField(data);\n}\n\nfunction createCurrencySmartFilterField(data: IPepSmartFilterField) {\n    return new PepSmartFilterCurrencyField(data);\n}\n\nfunction createPercentageSmartFilterField(data: IPepSmartFilterField) {\n    return new PepSmartFilterPercentageField(data);\n}\n\nexport function createSmartFilterField(\n    data: IPepSmartFilterField,\n    type: PepSmartFilterType\n): PepSmartFilterBaseField {\n    let field: PepSmartFilterBaseField;\n\n    switch (type) {\n        case 'boolean':\n            field = createBooleanSmartFilterField(data);\n            break;\n        case 'date':\n            field = createDateSmartFilterField(data);\n            break;\n        case 'date-time':\n            field = createDateTimeSmartFilterField(data);\n            break;\n        case 'multi-select':\n            field = createMultiSelectSmartFilterField(data);\n            break;\n        case 'int':\n            field = createIntSmartFilterField(data);\n            break;\n        case 'real':\n            field = createRealSmartFilterField(data);\n            break;\n        case 'currency':\n            field = createCurrencySmartFilterField(data);\n            break;\n        case 'percentage':\n            field = createPercentageSmartFilterField(data);\n            break;\n\n        default:\n            field = createMultiSelectSmartFilterField(data);\n            break;\n    }\n\n    return field;\n}\n\nexport function createSmartFilter(\n    fieldId: string,\n    operator: IPepSmartFilterOperator,\n    first: any,\n    second?: any,\n    operatorUnit?: IPepSmartFilterOperatorUnit\n): IPepSmartFilterData {\n    return {\n        fieldId: fieldId,\n        operator: operator,\n        operatorUnit: operatorUnit,\n        value: {\n            first: first,\n            second: second,\n        },\n    };\n}","/*\n * Public API Surface of ngx-lib/smart-filters\n */\nexport * from './smart-filters.module';\nexport * from './smart-filters.component';\nexport * from './common/model/base-filter-component';\nexport * from './common/filter-actions.component';\nexport * from './boolean-filter/boolean-filter.component';\nexport * from './date-filter/date-filter.component';\nexport * from './multi-select-filter/multi-select-filter.component';\nexport * from './number-filter/number-filter.component';\n\n// Model\nexport * from './common/model/creator';\nexport * from './common/model/field';\nexport * from './common/model/filter';\nexport * from './common/model/operator';\nexport * from './common/model/type';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;MAqBa,wBAAwB;IA2DjC,YACY,WAAuB,EACxB,aAA+B;QAD9B,gBAAW,GAAX,WAAW,CAAY;QACxB,kBAAa,GAAb,aAAa,CAAkB;QA3DjC,UAAK,GAAG,EAAE,CAAC;QAEpB,mBAAc,GAAqC,IAAI,GAAG,EAGvD,CAAC;QAEI,aAAQ,GAA0B,EAAE,CAAC;QAkBrC,YAAO,GAAgC,EAAE,CAAC;QAS1C,uBAAkB,GAAG,KAAK,CAAC;;;QAcnC,kBAAa,GAAwC,IAAI,YAAY,EAElE,CAAC;QAGJ,sBAAiB,GAAuC,IAAI,YAAY,EAAwB,CAAC;QAEjG,+BAA0B,GAAG,GAAG,CAAC;KAK5B;IApDL,IACI,OAAO,CAAC,KAA4B;QACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC5B;IACD,IAAI,OAAO;QACP,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;;aAE1C,GAAG,CAAC,CAAC,GAAG;YACL,IAAI,GAAG,EAAE;gBACL,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACvC;SACJ,CAAC,CAAC;QAEP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;IAGD,IACI,MAAM,CAAC,KAAkC;QACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACxB;IACD,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;IAGD,IACI,iBAAiB,CAAC,KAAc;QAChC,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,4BAA4B,EAAE,CAAC;SACvC;KACJ;IACD,IAAI,iBAAiB;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAClC;IAmBO,4BAA4B;;QAEhC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAChE,IAAI,CACP,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAC9D,IAAI,CACP,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAC9D,IAAI,CACP,CAAC;KACL;IAEO,YAAY,CAAC,KAA4B;QAC7C,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM;;gBAEjB,IAAI,YAAY,GAAG,IAAI,CAAC;gBAExB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAC3B,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CACd,CAAC;iBAChC;gBAED,IAAI,YAAY,EAAE;;oBAEd,IACI,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAClC,YAAY,CAAC,aAAa,CAC7B,EACH;wBACE,IAAI,mBAAmB,GAAG,IAAI,CAAC;wBAC/B,IAAI,MAAM,CAAC,YAAY,EAAE;;4BAErB,IACI,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CACvC,YAAY,CAAC,aAAa,CAC7B,EACH;gCACE,mBAAmB,GAAG,KAAK,CAAC;6BAC/B;yBACJ;;wBAGD,IAAI,mBAAmB,EAAE;4BACrB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;yBACnD;qBACJ;iBACJ;aACJ,CAAC,CAAC;SACN;KACJ;IAEO,kBAAkB;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzC;IAED,WAAW,CAAC,KAAa,EAAE,MAAe;QACtC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QACnC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KACnD;IAED,YAAY;QACR,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;KAC/B;IAED,WAAW,CAAC,OAAe;QACvB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACvC;;IAGD,cAAc;QACV,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;IAGD,aAAa,CAAC,KAA2B;QACrC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;IAGD,cAAc,CACV,KAA2B,EAC3B,UAA+B;QAE/B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;;YAlKJ,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,quIAA6C;gBAE7C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAdG,UAAU;YAML,gBAAgB;;;oBAWpB,KAAK;sBAQL,KAAK;qBAkBL,KAAK;gCASL,KAAK;4BAYL,MAAM;gCAKN,MAAM;;;MCnEE,yBAAyB;IALtC;QAQc,eAAU,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAC1D,eAAU,GAA0B,IAAI,YAAY,EAAW,CAAC;KAS7E;IAPG,KAAK;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,KAAK;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;;YAjBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,kbAA8C;;aAEjD;;;mBAEI,KAAK;yBAEL,MAAM;yBACN,MAAM;;;MCPE,uBAAuB;CAKnC;AAED,MAAM,MAAM,GAA4B;IACpC,EAAE,EAAE,IAAI;IACR,IAAI,EAAE,OAAO;IACb,KAAK,EAAE,GAAG;IACV,aAAa,EAAE;QACX,QAAQ;QACR,SAAS;;;;;;KAMZ;CACJ,CAAC;AAEF,MAAM,QAAQ,GAA4B;IACtC,EAAE,EAAE,KAAK;IACT,IAAI,EAAE,WAAW;IACjB,KAAK,EAAE,IAAI;IACX,aAAa,EAAE;QACX,QAAQ;;;;;;KAMX;CACJ,CAAC;AAEF,MAAM,QAAQ,GAA4B;IACtC,EAAE,EAAE,IAAI;IACR,IAAI,EAAE,WAAW;IACjB,KAAK,EAAE,GAAG;IACV,aAAa,EAAE,CAAC,QAAQ,CAAC;CAC5B,CAAC;AAEF;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM,WAAW,GAA4B;IACzC,EAAE,EAAE,IAAI;IACR,IAAI,EAAE,cAAc;IACpB,KAAK,EAAE,GAAG;IACV,aAAa,EAAE,CAAC,QAAQ,CAAC;CAC5B,CAAC;AAEF;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM,WAAW,GAA4B;IACzC,EAAE,EAAE,aAAa;IACjB,IAAI,EAAE,cAAc;IACpB,KAAK,EAAE,OAAO;IACd,aAAa,EAAE,CAAC,QAAQ,CAAC;CAC5B,CAAC;AAEF;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM,SAAS,GAA4B;IACvC,EAAE,EAAE,WAAW;IACf,IAAI,EAAE,aAAa;IACnB,KAAK,EAAE,aAAa;IACpB,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,KAAK,GAA4B;IACnC,EAAE,EAAE,OAAO;IACX,IAAI,EAAE,OAAO;IACb,KAAK,EAAE,OAAO;IACd,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,QAAQ,GAA4B;IACtC,EAAE,EAAE,UAAU;IACd,IAAI,EAAE,WAAW;IACjB,KAAK,EAAE,WAAW;IAClB,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,SAAS,GAA4B;IACvC,EAAE,EAAE,WAAW;IACf,IAAI,EAAE,YAAY;IAClB,KAAK,EAAE,YAAY;IACnB,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,SAAS,GAA4B;IACvC,EAAE,EAAE,WAAW;IACf,IAAI,EAAE,YAAY;IAClB,KAAK,EAAE,OAAO;IACd,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,KAAK,GAA4B;IACnC,EAAE,EAAE,OAAO;IACX,IAAI,EAAE,QAAQ;IACd,KAAK,EAAE,QAAQ;IACf,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,EAAE,GAA4B;IAChC,EAAE,EAAE,IAAI;IACR,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,IAAI;IACX,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,YAAY,GAA4B;IAC1C,EAAE,EAAE,cAAc;IAClB,IAAI,EAAE,iBAAiB;IACvB,KAAK,EAAE,iBAAiB;IACxB,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,QAAQ,GAA4B;IACtC,EAAE,EAAE,UAAU;IACd,IAAI,EAAE,YAAY;IAClB,KAAK,EAAE,YAAY;IACnB,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,OAAO,GAA4B;IACrC,EAAE,EAAE,SAAS;IACb,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,UAAU;IACjB,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,UAAU,GAA4B;IACxC,EAAE,EAAE,YAAY;IAChB,IAAI,EAAE,cAAc;IACpB,KAAK,EAAE,cAAc;IACrB,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,EAAE,GAA4B;IAChC,EAAE,EAAE,IAAI;IACR,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,IAAI;IACX,aAAa,EAAE,CAAC,cAAc,CAAC;CAClC,CAAC;MAEW,uBAAuB,GAAG;IACnC,MAAM,EAAE,MAAM;IACd,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;;IAElB,WAAW,EAAE,WAAW;;IAExB,WAAW,EAAE,WAAW;;;;;;IAMxB,SAAS,EAAE,SAAS;IACpB,KAAK,EAAE,KAAK;IACZ,QAAQ,EAAE,QAAQ;IAClB,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,KAAK,EAAE,KAAK;IACZ,EAAE,EAAE,EAAE;IACN,YAAY,EAAE,YAAY;IAC1B,QAAQ,EAAE,QAAQ;IAClB,OAAO,EAAE,OAAO;IAChB,UAAU,EAAE,UAAU;IACtB,EAAE,EAAE,EAAE;EACR;MAEW,2BAA2B;CAIvC;AAED,MAAM,IAAI,GAAgC;IACtC,EAAE,EAAE,MAAM;IACV,IAAI,EAAE,MAAM;IACZ,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,KAAK,GAAgC;IACvC,EAAE,EAAE,OAAO;IACX,IAAI,EAAE,OAAO;IACb,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,MAAM,GAAgC;IACxC,EAAE,EAAE,QAAQ;IACZ,IAAI,EAAE,QAAQ;IACd,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;AAEF,MAAM,KAAK,GAAgC;IACvC,EAAE,EAAE,OAAO;IACX,IAAI,EAAE,OAAO;IACb,aAAa,EAAE,CAAC,MAAM,CAAC;CAC1B,CAAC;MAEW,2BAA2B,GAAG;IACvC,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,KAAK;IACZ,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,KAAK;;;MCjNM,mBAAmB;IA4FrC,YACY,gBAAkC,EAClC,QAAkB,EAClB,QAAkC,EAClC,OAAoB,EAClB,SAA2B,EAC3B,SAA8B,EAC9B,QAAmB;QANrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAA0B;QAClC,YAAO,GAAP,OAAO,CAAa;QAClB,cAAS,GAAT,SAAS,CAAkB;QAC3B,cAAS,GAAT,SAAS,CAAqB;QAC9B,aAAQ,GAAR,QAAQ,CAAW;QA9FzB,uBAAkB,GAAG,EAAE,CAAC;QAsBtB,gBAAW,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAErE,iBAAY,GAAsC,IAAI,YAAY,EAAuB,CAAC;QAyDvE,iCAA4B,GAAG,yBAAyB,CAAC;QACzD,sCAAiC,GAChD,8BAA8B,CAAC;QAa/B,IAAI,CAAC,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;KACnC;IA/FD,IACI,KAAK,CAAC,KAA8B;QACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;QACnE,IAAI,CAAC,SAAS,EAAE,CAAC;KACpB;IACD,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;IAGD,IACI,MAAM,CAAC,KAA0B;QACjC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;IACD,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;IAOD,IAAI,QAAQ,CAAC,QAAiC;;QAC1C,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,EAAE,MAAI,MAAA,IAAI,CAAC,SAAS,0CAAE,EAAE,CAAA,EAAE;;YAEpC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;YACpE,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC1C;iBAAM;gBACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aACtC;YAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;KACJ;IACD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;IAGD,IAAI,YAAY,CAAC,YAAyC;;QAEtD,IAAI,YAAY,KAAK,SAAS,EAAE;YAC5B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;SAClC;aAAM;YACH,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CACtC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,CACpC,CAAC;YACF,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAClD;iBAAM;gBACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aAC9C;SACJ;KACJ;IACD,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,aAAa,CAAC;KAC7B;IAED,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,kBAAkB,QAAQ,GAAG,OAAO,CAAC;KACpE;IACD,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KAC9C;IACD,IAAI,gBAAgB;QAChB,OAAO,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,kBAAkB,SAAS,GAAG,QAAQ,CAAC;KACtE;IACD,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC/C;IAuBO,sBAAsB;QAC1B,MAAM,OAAO,GAAgD,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAC9F,yBAAyB,CAC5B,CAAC;QAEF,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,MACnD,IAAI,CAAC,WAAW,EAAE,CACrB,CAAC;QACF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,MACnD,IAAI,CAAC,WAAW,EAAE,CACrB,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;KACnE;IAEO,SAAS;QACb,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;QACrC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;;QAGtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;;;QAI1C,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;IAEO,cAAc;;;QAElB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC;aAChD,MAAM,CAAC,CAAC,GAAG;YACR,OAAO,uBAAuB,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,QAAQ,CACtD,IAAI,CAAC,KAAK,CAAC,aAAa,CAC3B,CAAC;SACL,CAAC;aACD,GAAG,CAAC,CAAC,GAAG,KAAK,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC;;QAGhD,IAAI,CAAA,MAAA,IAAI,CAAC,KAAK,CAAC,SAAS,0CAAE,MAAM,IAAG,CAAC,EAAE;YAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,KACtC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAClD,CAAC;SACL;;QAGD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC;aACxD,MAAM,CAAC,CAAC,GAAG;YACR,OAAO,2BAA2B,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,QAAQ,CAC1D,IAAI,CAAC,KAAK,CAAC,aAAa,CAC3B,CAAC;SACL,CAAC;aACD,GAAG,CAAC,CAAC,GAAG,KAAK,2BAA2B,CAAC,GAAG,CAAC,CAAC,CAAC;;QAGpD,IAAI,CAAA,MAAA,IAAI,CAAC,KAAK,CAAC,aAAa,0CAAE,MAAM,IAAG,CAAC,EAAE;YACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,KAC9C,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CACtD,CAAC;SACL;;QAGD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG;YACpD,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC/B,CAAC,CAAC;KACN;IAEO,WAAW;QACf,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAC7C,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAC1D,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAC5D,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3B;KACJ;IAES,YAAY;QAClB,OAAO,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACrC;IAEO,cAAc;QAClB,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAEnC,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE,CAAC;KAC/C;;IAES,oBAAoB;;KAE7B;;IAGS,2BAA2B;QACjC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;KAChC;;IAGS,sBAAsB;QAC5B,OAAO,SAAS,CAAC;KACpB;IAES,UAAU;;KAEnB;IAKD,WAAW,CAAC,SAAS,GAAG,IAAI;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SAC3B;KACJ;IAED,WAAW;QACP,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;;QAG1C,IAAI,WAAW,EAAE;YACb,MAAM,MAAM,GAAG;gBACX,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;gBACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,KAAK,EAAE,WAAW;aACrB,CAAC;YACF,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClC;aAAM;YACH,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;KACJ;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;KACJ;IAED,WAAW;;;;KAIV;IAED,WAAW;QACP,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAE3B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;KACtC;;;YA9QJ,SAAS,SAAC,EAAE;;;YAjCT,gBAAgB;YAKhB,QAAQ;YAHR,wBAAwB;YAQxB,WAAW;YAoBN,gBAAgB;YAXhB,mBAAmB;YArBxB,SAAS;;;oBA2CR,KAAK;qBAWL,KAAK;0BASL,MAAM;2BACN,MAAM;;;MC9DE,yBAA0B,SAAQ,mBAAmB;;IAE9D,kBAAkB;QACd,OAAO,uBAAuB,CAAC,MAAM,CAAC;KACzC;;IAGD,cAAc;QACV,MAAM,WAAW,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,KAAK,EAAE,CAAC;QAChE,OAAO,WAAW,CAAC;KACtB;;;YAfJ,SAAS,SAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,qgBAA8C;;aAEjD;;;MCKY,sBAAuB,SAAQ,mBAAmB;IAL/D;;QAMI,4BAAuB,GAAG,uBAAuB,CAAC;QAClD,sBAAiB,GAAsB,EAAE,CAAC;QAC1C,0BAAqB,GAAsB,EAAE,CAAC;KAwGjD;;IArGG,kBAAkB;QACd,OAAO,uBAAuB,CAAC,SAAS,CAAC;KAC5C;;IAGD,sBAAsB;QAClB,IAAI,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,SAAS;YACnD,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,YAAY;YACtD,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,KAAK;YAC/C,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,QAAQ,EAAE;YACpD,OAAO,2BAA2B,CAAC,MAAM,CAAC;SAC7C;aAAM;YACH,OAAO,SAAS,CAAC;SACpB;KACJ;;IAGD,cAAc;QACV,MAAM,WAAW,GAAG;YAChB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;SACjC,CAAC;QAEF,IAAI,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,SAAS,EAAE;YACrD,WAAW,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;SACpD;QAED,OAAO,WAAW,CAAC;KACtB;;IAGD,oBAAoB;QAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ;YACjD,OAAO;gBACH,GAAG,EAAE,QAAQ,CAAC,EAAE;gBAChB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,GAAG,IAAI,CAAC,4BAA4B,IAAI,QAAQ,CAAC,IAAI,EAAE,CAC1D;aACJ,CAAC;SACL,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY;YAC7D,OAAO;gBACH,GAAG,EAAE,YAAY,CAAC,EAAE;gBACpB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,GAAG,IAAI,CAAC,iCAAiC,IAAI,YAAY,CAAC,IAAI,EAAE,CACnE;aACJ,CAAC;SACL,CAAC,CAAC;KACN;;IAGD,2BAA2B;QACvB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAE3B,IAAI,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,SAAS,EAAE;YACrD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;YAC5B,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACzD;aAAM,IACH,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,SAAS;YACnD,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,YAAY;YACtD,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,KAAK;YAC/C,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,QAAQ,EACpD;YACE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;gBAC5B,UAAU,CAAC,QAAQ;gBACnB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE;aACnC,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SAChC;aAAM;;YAEH,IACI,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,KAAK;gBAC/C,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,QAAQ;gBAClD,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,SAAS;gBACnD,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,OAAO;gBACjD,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,UAAU,EACtD;gBACE,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;aAC/B;;YAGD,KAAK,CAAC,2BAA2B,EAAE,CAAC;SACvC;KACJ;IAED,iBAAiB,CAAC,KAAa;QAC3B,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,IAAI,CACxD,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAAE,KAAK,KAAK,CACtC,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACrD;IAED,iBAAiB,CAAC,KAAa;QAC3B,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAChE,CAAC,YAAY,KAAK,YAAY,CAAC,EAAE,KAAK,KAAK,CAC9C,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACpC;;;YA/GJ,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,0hFAA2C;;aAE9C;;;ACMD,MAAM,0BAA0B;IAAhC;QAGI,aAAQ,GAAG,KAAK,CAAC;KACpB;CAAA;MAOY,6BACT,SAAQ,mBAAmB;IAN/B;;QAQI,YAAO,GAAiC,EAAE,CAAC;QAE3C,kBAAa,GAAG,IAAI,WAAW,EAAE,CAAC;QAKjB,wBAAmB,GAAG,IAAI,CAAC;QAI5C,8BAAyB,GAAG,EAAE,CAAC;KAwHlC;IAtHG,QAAQ;;QACJ,KAAK,CAAC,QAAQ,CAAC;QAEf,IAAI,CAAA,MAAA,IAAI,CAAC,KAAK,CAAC,OAAO,0CAAE,MAAM,IAAG,CAAC,EAAE;YAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG;gBACtC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;aAClE,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SAChC;;QAGD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,YAAY,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SACtD;;QAGD,YAAY,CAAC,YAAY;aACpB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,oBAAoB,EAAE,CAAC;aACjD,SAAS,CAAC,CAAC,cAAwB;YAChC,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,CAAC;SAClD,CAAC,CAAC;;QAGP,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CACxD,IAAI,CAAC,YAAY,EAAE,EACnB,SAAS,CAAM,EAAE,CAAC,EAClB,GAAG,CAAC,CAAC,MAAM,KACP,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAC/D,EACD,GAAG,CAAC,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CACrE,CAAC;;QAGF,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAC3B,CAAC,cAA4C;YACzC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAC9C,UAAU,CAAC;;gBAEP,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C,EAAE,GAAG,CAAC,CAAC;SACX,CACJ,CAAC;KACL;IAED,eAAe;;QAEX,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KAC/C;IAED,yBAAyB,CAAC,cAAwB;QAC9C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG;YACrB,MAAM,eAAe,GACjB,cAAc,IAAI,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACzD,GAAG,CAAC,QAAQ,GAAG,eAAe,CAAC;SAClC,CAAC,CAAC;KACN;IAEO,iBAAiB,CAAC,YAAoB;QAC1C,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,MAAM,aAAa,GACf,YAAY,GAAG,IAAI,CAAC,mBAAmB;kBACjC,IAAI,CAAC,mBAAmB;kBACxB,YAAY,CAAC;;YAEvB,MAAM,aAAa,GAAG,aAAa,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC;YAEvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAClB,IAAI,CAAC,gBAAgB,CAAC,aAAa,EACnC,QAAQ,EACR,aAAa,CAChB,CAAC;SACL;KACJ;IAEO,aAAa,CAAC,KAAa;QAC/B,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CACtB,CAAC,GAAG,KACA,GAAG,CAAC,KAAK;YACT,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAClE,CAAC;KACL;;IAGD,kBAAkB;QACd,OAAO,uBAAuB,CAAC,EAAE,CAAC;KACrC;;IAGD,cAAc;QACV,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO;aAC9B,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,QAAQ,CAAC;aAC7B,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7B,MAAM,WAAW,GAAG;YAChB,KAAK,EAAE,cAAc;SACxB,CAAC;QAEF,OAAO,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC;KACzD;;IAGD,UAAU;QACN,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KACnC;IAED,cAAc,CACV,MAAkC,EAClC,KAAwB;QAExB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,QAAQ,CACtB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,EAClE,EAAE,SAAS,EAAE,KAAK,EAAE,CACvB,CAAC;KACL;;;YA1IJ,SAAS,SAAC;gBACP,QAAQ,EAAE,yBAAyB;gBACnC,ykDAAmD;;aAEtD;;;+BAQI,SAAS,SAAC,kBAAkB;8BAI5B,SAAS,SAAC,wBAAwB;;;MC5B1B,wBAAyB,SAAQ,mBAAmB;IALjE;;QAMI,4BAAuB,GAAG,uBAAuB,CAAC;QAClD,sBAAiB,GAAsB,EAAE,CAAC;KAyE7C;IAvEG,QAAQ;QACJ,IAAI,CAAC,YAAY,CAAC,YAAY;aACzB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,oBAAoB,EAAE,CAAC;aACjD,SAAS,CAAC;YACP,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACtC,CAAC,CAAC;QAEP,IAAI,CAAC,aAAa,CAAC,YAAY;aAC1B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,oBAAoB,EAAE,CAAC;aACjD,SAAS,CAAC;YACP,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACtC,CAAC,CAAC;KACV;;IAGD,kBAAkB;QACd,OAAO,uBAAuB,CAAC,MAAM,CAAC;KACzC;;IAGD,cAAc;QACV,MAAM,WAAW,GAAG;YAChB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;SACjC,CAAC;QAEF,IAAI,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,WAAW,EAAE;YACvD,WAAW,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;SACpD;QAED,OAAO,WAAW,CAAC;KACtB;;IAGD,oBAAoB;QAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ;YACjD,OAAO;gBACH,GAAG,EAAE,QAAQ,CAAC,EAAE;gBAChB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CACzB,GAAG,IAAI,CAAC,4BAA4B,IAAI,QAAQ,CAAC,IAAI,EAAE,CAC1D;aACJ,CAAC;SACL,CAAC,CAAC;KACN;;IAGD,2BAA2B;QACvB,IAAI,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,WAAW,EAAE;YACvD,MAAM,eAAe,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;gBAC1B,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;aACvE;YACD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;YAGjD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;YAC5B,MAAM,gBAAgB,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;gBACzB,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;aAC1E;YACD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;SACtD;aAAM;YACH,KAAK,CAAC,2BAA2B,EAAE,CAAC;SACvC;KACJ;IAED,iBAAiB,CAAC,KAAa;QAC3B,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,IAAI,CACxD,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAAE,KAAK,KAAK,CACtC,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;;YA/EJ,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,qjDAA6C;;aAEhD;;;MC0DY,qBAAqB;IAC9B,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAChD,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;YAC/B,kBAAkB;YAClB,iBAAiB;SACpB,CAAC,CAAC;KACN;;;YA1CJ,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,mBAAmB;oBACnB,gBAAgB;;oBAEhB,eAAe;oBACf,iBAAiB;oBACjB,cAAc;oBACd,kBAAkB;oBAClB,aAAa;oBACb,kBAAkB;oBAClB,cAAc;oBACd,cAAc;;oBAEd,qBAAqB;;oBAErB,eAAe;oBACf,iBAAiB;oBACjB,aAAa;oBACb,eAAe;oBACf,gBAAgB;oBAChB,eAAe;oBACf,aAAa;iBAChB;gBACD,OAAO,EAAE,CAAC,wBAAwB,CAAC;gBACnC,YAAY,EAAE;;oBAEV,wBAAwB;oBACxB,yBAAyB;oBACzB,yBAAyB;oBACzB,sBAAsB;oBACtB,6BAA6B;oBAC7B,wBAAwB;iBAC3B;aACJ;;;YAhDG,eAAe;;;ACCnB;AACA;MACsB,uBAAuB;IAkBzC,YAAY,KAA2B;QACnC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QAEzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;KAC/B;IAlBD,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,cAAc,CAAC;KAC9B;IAGD,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;CAcJ;AAED;AACA;MACa,0BAA2B,SAAQ,uBAAuB;IACnE,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;KACnC;IAED,OAAO;QACH,OAAO,SAAS,CAAC;KACpB;CACJ;AAED;AACA;MACsB,2BAA4B,SAAQ,uBAAuB;IAC7E,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;KAChC;CACJ;MACY,uBAAwB,SAAQ,2BAA2B;IACpE,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;KAChB;IAED,OAAO;QACH,OAAO,MAAM,CAAC;KACjB;CACJ;MACY,2BAA4B,SAAQ,2BAA2B;IACxE,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;KAChB;IAED,OAAO;QACH,OAAO,WAAW,CAAC;KACtB;CACJ;AAED;AACA;MACa,8BAA+B,SAAQ,uBAAuB;IACvE,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACxC;IAED,OAAO;QACH,OAAO,cAAc,CAAC;KACzB;CACJ;AAED;AACA;MACsB,6BAA8B,SAAQ,uBAAuB;IAC/E,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;KAClC;CACJ;MACY,sBAAuB,SAAQ,6BAA6B;IACrE,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;KAChB;IAED,OAAO;QACH,OAAO,KAAK,CAAC;KAChB;CACJ;MACY,uBAAwB,SAAQ,6BAA6B;IACtE,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;KAChB;IAED,OAAO;QACH,OAAO,MAAM,CAAC;KACjB;CACJ;MACY,2BAA4B,SAAQ,6BAA6B;IAC1E,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;KAChB;IAED,OAAO;QACH,OAAO,UAAU,CAAC;KACrB;CACJ;MACY,6BAA8B,SAAQ,6BAA6B;IAC5E,YAAY,KAA2B;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;KAChB;IAED,OAAO;QACH,OAAO,YAAY,CAAC;KACvB;;;AC1IL,SAAS,6BAA6B,CAAC,IAA0B;IAC7D,OAAO,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC;AAChD,CAAC;AAED,SAAS,0BAA0B,CAAC,IAA0B;IAC1D,OAAO,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;AAC7C,CAAC;AAED,SAAS,8BAA8B,CAAC,IAA0B;IAC9D,OAAO,IAAI,2BAA2B,CAAC,IAAI,CAAC,CAAC;AACjD,CAAC;AAED,SAAS,iCAAiC,CAAC,IAA0B;IACjE,OAAO,IAAI,8BAA8B,CAAC,IAAI,CAAC,CAAC;AACpD,CAAC;AAED,SAAS,yBAAyB,CAAC,IAA0B;IACzD,OAAO,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;AAC5C,CAAC;AAED,SAAS,0BAA0B,CAAC,IAA0B;IAC1D,OAAO,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;AAC7C,CAAC;AAED,SAAS,8BAA8B,CAAC,IAA0B;IAC9D,OAAO,IAAI,2BAA2B,CAAC,IAAI,CAAC,CAAC;AACjD,CAAC;AAED,SAAS,gCAAgC,CAAC,IAA0B;IAChE,OAAO,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC;AACnD,CAAC;SAEe,sBAAsB,CAClC,IAA0B,EAC1B,IAAwB;IAExB,IAAI,KAA8B,CAAC;IAEnC,QAAQ,IAAI;QACR,KAAK,SAAS;YACV,KAAK,GAAG,6BAA6B,CAAC,IAAI,CAAC,CAAC;YAC5C,MAAM;QACV,KAAK,MAAM;YACP,KAAK,GAAG,0BAA0B,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM;QACV,KAAK,WAAW;YACZ,KAAK,GAAG,8BAA8B,CAAC,IAAI,CAAC,CAAC;YAC7C,MAAM;QACV,KAAK,cAAc;YACf,KAAK,GAAG,iCAAiC,CAAC,IAAI,CAAC,CAAC;YAChD,MAAM;QACV,KAAK,KAAK;YACN,KAAK,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;YACxC,MAAM;QACV,KAAK,MAAM;YACP,KAAK,GAAG,0BAA0B,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM;QACV,KAAK,UAAU;YACX,KAAK,GAAG,8BAA8B,CAAC,IAAI,CAAC,CAAC;YAC7C,MAAM;QACV,KAAK,YAAY;YACb,KAAK,GAAG,gCAAgC,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM;QAEV;YACI,KAAK,GAAG,iCAAiC,CAAC,IAAI,CAAC,CAAC;YAChD,MAAM;KACb;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;SAEe,iBAAiB,CAC7B,OAAe,EACf,QAAiC,EACjC,KAAU,EACV,MAAY,EACZ,YAA0C;IAE1C,OAAO;QACH,OAAO,EAAE,OAAO;QAChB,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,YAAY;QAC1B,KAAK,EAAE;YACH,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;SACjB;KACJ,CAAC;AACN;;ACxGA;;;;ACAA;;;;;;"}