{"version":3,"file":"pepperi-addons-ngx-lib-address.js","sources":["../../../projects/ngx-lib/address/address.component.ts","../../../projects/ngx-lib/address/address.module.ts","../../../projects/ngx-lib/address/public-api.ts","../../../projects/ngx-lib/address/pepperi-addons-ngx-lib-address.ts"],"sourcesContent":["import {\n    Component,\n    OnInit,\n    OnChanges,\n    Input,\n    Output,\n    EventEmitter,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    Renderer2,\n    ElementRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n    PepLayoutType,\n    PepHorizontalAlignment,\n    DEFAULT_HORIZONTAL_ALIGNMENT,\n    IPepFieldValueChangeEvent,\n} from '@pepperi-addons/ngx-lib';\n\n@Component({\n    selector: 'pep-address',\n    templateUrl: './address.component.html',\n    styleUrls: ['./address.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PepAddressComponent implements OnChanges, OnInit, OnDestroy {\n    @Input() key = '';\n    // @Input() value = '';\n    @Input() formattedValue = '';\n    @Input() label = '';\n    @Input() mandatory = false;\n    @Input() disabled = false;\n    @Input() readonly = false;\n    @Input() xAlignment: PepHorizontalAlignment = DEFAULT_HORIZONTAL_ALIGNMENT;\n    @Input() rowSpan = 1;\n    @Input() groupFields: Array<any>;\n\n    @Input() form: FormGroup = null;\n    @Input() layoutType: PepLayoutType = 'form';\n\n    private _visible = true;\n    @Input()\n    set visible(visible: boolean) {\n        this._visible = visible;\n        if (visible) {\n            this.renderer.removeClass(\n                this.element.nativeElement,\n                'hidden-element'\n            );\n        } else {\n            this.renderer.addClass(\n                this.element.nativeElement,\n                'hidden-element'\n            );\n        }\n    }\n    get visible(): boolean {\n        return this._visible;\n    }\n\n    @Output()\n    addressValueChange: EventEmitter<IPepFieldValueChangeEvent> = new EventEmitter<IPepFieldValueChangeEvent>();\n\n    constructor(private element: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit(): void {\n        this.renderer.addClass(this.element.nativeElement, 'pep-grouped-field');\n    }\n\n    ngOnChanges(changes): void {\n        //\n    }\n\n    ngOnDestroy(): void {\n        //\n    }\n\n    // Not in use anymore comment in 16.55.\n    // onBlur(e: any, key: string): void {\n    //     const value = e.target ? e.target.value : e;\n    //     this.changeValue({ key, value }, e.relatedTarget);\n    // }\n\n    onValueChange(value: string, key: string): void {\n        // if (e.target) {\n        //     const input = e.target ? e.target.value : e;\n        //     this.changeValue({ key, value: input.value });\n        // } else {\n        //     this.changeValue(e);\n        // }\n\n        const currentGroupField = this.groupFields.find((gf) => gf.key === key);\n\n        if (currentGroupField && currentGroupField.value !== value) {\n            // Set the value in the form controls\n            if (this.form) {\n                const formCtrl = this.form.get(this.key);\n\n                if (formCtrl) {\n                    formCtrl.get(key).setValue(value);\n                }\n            }\n\n            this.addressValueChange.emit({\n                key: key,\n                value: value,\n            });\n        }\n    }\n\n    // changeValue(field: any): void {\n    //     const currentGroupField = this.groupFields.filter(\n    //         (groupField) => groupField.key === field.key\n    //     )[0];\n\n    //     if (currentGroupField.value !== field.value) {\n    //         // Set the value in the form controls\n    //         if (this.form) {\n    //             const formCtrl = this.form.get(this.key);\n\n    //             if (formCtrl) {\n    //                 formCtrl.get(field.key).setValue(field.value);\n    //             }\n    //         }\n\n    //         this.valueChange.emit({\n    //             key: field.key,\n    //             value: field.value,\n    //         });\n    //     }\n    // }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\nimport { PepTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\nimport { PepSelectModule } from '@pepperi-addons/ngx-lib/select';\nimport { PepFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\n\nimport { PepAddressComponent } from './address.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        // Material modules\n        MatCommonModule,\n        MatFormFieldModule,\n        // ngx-lib modules\n        PepNgxLibModule,\n        PepTextboxModule,\n        PepSelectModule,\n        PepFieldTitleModule,\n    ],\n    exports: [PepAddressComponent],\n    declarations: [PepAddressComponent],\n})\nexport class PepAddressModule {}\n","/*\n * Public API Surface of ngx-lib/address\n */\nexport * from './address.module';\nexport * from './address.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;MA0Ba,mBAAmB;IAsC5B,YAAoB,OAAmB,EAAU,QAAmB;QAAhD,YAAO,GAAP,OAAO,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QArC3D,QAAG,GAAG,EAAE,CAAC;;QAET,mBAAc,GAAG,EAAE,CAAC;QACpB,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAA2B,4BAA4B,CAAC;QAClE,YAAO,GAAG,CAAC,CAAC;QAGZ,SAAI,GAAc,IAAI,CAAC;QACvB,eAAU,GAAkB,MAAM,CAAC;QAEpC,aAAQ,GAAG,IAAI,CAAC;QAqBxB,uBAAkB,GAA4C,IAAI,YAAY,EAA6B,CAAC;KAEnC;IAtBzE,IACI,OAAO,CAAC,OAAgB;QACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,gBAAgB,CACnB,CAAC;SACL;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAClB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,gBAAgB,CACnB,CAAC;SACL;KACJ;IACD,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;IAOD,QAAQ;QACJ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;KAC3E;IAED,WAAW,CAAC,OAAO;;KAElB;IAED,WAAW;;KAEV;;;;;;IAQD,aAAa,CAAC,KAAa,EAAE,GAAW;;;;;;;QAQpC,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAExE,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,KAAK,KAAK,KAAK,EAAE;;YAExD,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAEzC,IAAI,QAAQ,EAAE;oBACV,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACrC;aACJ;YAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBACzB,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf,CAAC,CAAC;SACN;KACJ;;;YAzFJ,SAAS,SAAC;gBACP,QAAQ,EAAE,aAAa;gBACvB,wlGAAuC;gBAEvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAClD;;;YAfG,UAAU;YADV,SAAS;;;kBAkBR,KAAK;6BAEL,KAAK;oBACL,KAAK;wBACL,KAAK;uBACL,KAAK;uBACL,KAAK;yBACL,KAAK;sBACL,KAAK;0BACL,KAAK;mBAEL,KAAK;yBACL,KAAK;sBAGL,KAAK;iCAmBL,MAAM;;;MC/BE,gBAAgB;;;YAhB5B,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,mBAAmB;;oBAEnB,eAAe;oBACf,kBAAkB;;oBAElB,eAAe;oBACf,gBAAgB;oBAChB,eAAe;oBACf,mBAAmB;iBACtB;gBACD,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,YAAY,EAAE,CAAC,mBAAmB,CAAC;aACtC;;;AC7BD;;;;ACAA;;;;;;"}