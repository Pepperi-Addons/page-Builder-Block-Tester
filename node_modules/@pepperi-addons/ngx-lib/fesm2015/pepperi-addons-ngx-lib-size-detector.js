import { EventEmitter, Component, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { FlexLayoutModule } from '@angular/flex-layout';
import { PepScreenSizeType, PepLayoutService, PepNgxLibModule } from '@pepperi-addons/ngx-lib';

class PepSizeDetectorComponent {
    constructor(hostElement, layoutService) {
        this.hostElement = hostElement;
        this.layoutService = layoutService;
        this.showScreenSize = false;
        this._useAsWebComponent = false;
        this.sizeChange = new EventEmitter();
        this.prefix = 'is-';
        this.sizes = [
            {
                id: PepScreenSizeType.XS,
                name: 'xs',
                css: `d-block d-sm-none`,
            },
            {
                id: PepScreenSizeType.SM,
                name: 'sm',
                css: `d-none d-sm-block d-md-none`,
            },
            {
                id: PepScreenSizeType.MD,
                name: 'md',
                css: `d-none d-md-block d-lg-none`,
            },
            {
                id: PepScreenSizeType.LG,
                name: 'lg',
                css: `d-none d-lg-block d-xl-none`,
            },
            {
                id: PepScreenSizeType.XL,
                name: 'xl',
                css: `d-none d-xl-block`,
            },
        ];
        this.layoutService.onResize$.subscribe((size) => {
            this.currentSize = this.sizes.find((s) => s.id === size);
            this.sizeChange.emit(this.currentSize);
        });
    }
    set useAsWebComponent(value) {
        if (value) {
            this.exportFunctionsOnHostElement();
        }
    }
    get useAsWebComponent() {
        return this._useAsWebComponent;
    }
    onResize(event) {
        this.detectScreenSize();
    }
    ngAfterViewInit() {
        this.detectScreenSize();
    }
    detectScreenSize() {
        this.currentSize = this.sizes.find((x) => {
            const el = this.hostElement.nativeElement.querySelector(`.${this.prefix}${x.id}`);
            const isVisible = window.getComputedStyle(el).display !== 'none';
            return isVisible;
        });
        this.layoutService.onResize(this.currentSize.id);
    }
    exportFunctionsOnHostElement() {
        // This is for web component usage for use those functions.
        this.hostElement.nativeElement.getCurrentSize = this.getCurrentSize.bind(this);
    }
    getCurrentSize() {
        return this.currentSize;
    }
}
PepSizeDetectorComponent.decorators = [
    { type: Component, args: [{
                selector: 'pep-size-detector',
                template: "<!-- Bootstrap -->\n<!-- <div *ngFor=\"let s of sizes\" class=\"{{s.css + ' ' + (prefix + s.id) }}\">{{s.name}}</div> -->\n\n<!-- Angular flex-layout -->\n<div *ngFor=\"let s of sizes\" fxShow.xs=\"{{s.name == 'xs'}}\" fxShow.sm=\"{{s.name == 'sm'}}\"\n  fxShow.md=\"{{s.name == 'md'}}\" fxShow.lg=\"{{s.name == 'lg'}}\" fxShow.xl=\"{{s.name == 'xl'}}\"\n  class=\"{{s.css + ' ' + (prefix + s.id) }}\">\n  <ng-container *ngIf=\"showScreenSize\"> The current screen size is - {{s.name}}</ng-container>\n</div>"
            },] }
];
PepSizeDetectorComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: PepLayoutService }
];
PepSizeDetectorComponent.propDecorators = {
    showScreenSize: [{ type: Input }],
    useAsWebComponent: [{ type: Input }],
    sizeChange: [{ type: Output }],
    onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]
};

class PepSizeDetectorModule {
}
PepSizeDetectorModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    FlexLayoutModule,
                    // ngx-lib modules
                    PepNgxLibModule,
                ],
                exports: [PepSizeDetectorComponent],
                declarations: [PepSizeDetectorComponent],
            },] }
];

/*
 * Public API Surface of ngx-lib/size-detector
 */

/**
 * Generated bundle index. Do not edit.
 */

export { PepSizeDetectorComponent, PepSizeDetectorModule };
//# sourceMappingURL=pepperi-addons-ngx-lib-size-detector.js.map
