import { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatCommonModule } from '@angular/material/core';
import { MatButtonModule } from '@angular/material/button';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatIconModule } from '@angular/material/icon';
import { pepIconNumberCoins, pepIconNumberPercent, pepIconNumberNumber, pepIconNumberDecimal, pepIconSystemPhone, pepIconSystemEmail, pepIconSystemLink, pepIconSystemFullScreen, pepIconSystemEdit, pepIconTimeDatetime, pepIconTimeCal, PepIconModule, PepIconRegistry } from '@pepperi-addons/ngx-lib/icon';

class PepTextboxIconComponent {
    constructor() {
        this.test = true;
        this.iconClick = new EventEmitter();
    }
    iconButtonClicked() {
        const currentValue = this.value;
        if (currentValue.toString().trim().length > 0) {
            switch (this.type) {
                case 'email':
                    window.open('mailto:' + currentValue, 'email');
                    break;
                case 'phone':
                    window.open('tel:' + currentValue, 'tel');
                    break;
                case 'link':
                    window.open(currentValue);
                    break;
                default:
                    break;
            }
        }
        this.iconClick.emit();
    }
}
PepTextboxIconComponent.decorators = [
    { type: Component, args: [{
                selector: 'pep-textbox-icon',
                template: "<mat-icon *ngIf=\"type === 'currency'\" class=\"pep-text-icon\">\n    <pep-icon name=\"number_coins\">\n    </pep-icon>\n</mat-icon>\n<mat-icon *ngIf=\"type === 'percentage'\" class=\"pep-text-icon\">\n    <pep-icon name=\"number_percent\">\n    </pep-icon>\n</mat-icon>\n<mat-icon *ngIf=\"type === 'int'\" class=\"pep-text-icon\">\n    <pep-icon name=\"number_number\">\n    </pep-icon>\n</mat-icon>\n<mat-icon *ngIf=\"type === 'real'\" class=\"pep-text-icon\">\n    <pep-icon name=\"number_decimal\">\n    </pep-icon>\n</mat-icon>\n<button *ngIf=\"type === 'phone'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\"\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\n    <mat-icon>\n        <pep-icon name=\"system_phone\">\n        </pep-icon>\n    </mat-icon>\n</button>\n<button *ngIf=\"type === 'email'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\"\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\n    <mat-icon>\n        <pep-icon name=\"system_email\">\n        </pep-icon>\n    </mat-icon>\n</button>\n<button *ngIf=\"type === 'link'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\"\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\n    <mat-icon>\n        <pep-icon name=\"system_link\">\n        </pep-icon>\n    </mat-icon>\n</button>\n<button *ngIf=\"type === 'textarea'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\">\n    <mat-icon>\n        <pep-icon name=\"system_full_screen\">\n        </pep-icon>\n    </mat-icon>\n</button>\n<button *ngIf=\"type === 'richhtmltextarea'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\">\n    <mat-icon>\n        <pep-icon name=\"{{ disabled ? 'system_full_screen' : 'system_edit'}}\">\n        </pep-icon>\n    </mat-icon>\n</button>\n\n<button *ngIf=\"!disabled && type === 'datetime'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\">\n    <mat-icon>\n        <pep-icon name=\"time_datetime\">\n        </pep-icon>\n    </mat-icon>\n</button>\n\n<button *ngIf=\"!disabled && type === 'date'\" class=\"pep-button md regular\" mat-button (click)=\"iconButtonClicked()\">\n    <mat-icon>\n        <pep-icon name=\"time_cal\">\n        </pep-icon>\n    </mat-icon>\n</button>\n\n<!-- <span class=\"pep-text-icon\" *ngIf=\"type === 'percentage'\">%</span> -->\n<!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n<!-- <mat-icon matPrefix>sentiment_very_satisfied</mat-icon> -->\n<!-- <mat-hint>Hint</mat-hint> -->",
                styles: [":host{display:flex}"]
            },] }
];
PepTextboxIconComponent.propDecorators = {
    value: [{ type: Input }],
    label: [{ type: Input }],
    type: [{ type: Input }],
    disabled: [{ type: Input }],
    iconClick: [{ type: Output }]
};

class PepTextboxIconModule {
    constructor(pepIconRegistry) {
        this.pepIconRegistry = pepIconRegistry;
        this.pepIconRegistry.registerIcons([
            pepIconNumberCoins,
            pepIconNumberPercent,
            pepIconNumberNumber,
            pepIconNumberDecimal,
            pepIconSystemPhone,
            pepIconSystemEmail,
            pepIconSystemLink,
            pepIconSystemFullScreen,
            pepIconSystemEdit,
            pepIconTimeDatetime,
            pepIconTimeCal,
        ]);
    }
}
PepTextboxIconModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    // Material modules,
                    MatCommonModule,
                    MatButtonModule,
                    MatFormFieldModule,
                    MatIconModule,
                    // ngx-lib modules
                    PepIconModule,
                ],
                exports: [PepTextboxIconComponent],
                declarations: [PepTextboxIconComponent],
            },] }
];
PepTextboxIconModule.ctorParameters = () => [
    { type: PepIconRegistry }
];

/*
 * Public API Surface of ngx-lib/textbox-icon
 */

/**
 * Generated bundle index. Do not edit.
 */

export { PepTextboxIconComponent, PepTextboxIconModule };
//# sourceMappingURL=pepperi-addons-ngx-lib-textbox-icon.js.map
