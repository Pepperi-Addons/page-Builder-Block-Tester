{"version":3,"file":"pepperi-addons-ngx-lib-color.js","sources":["../../../projects/ngx-lib/color/color-picker.component.ts","../../../projects/ngx-lib/color/color.component.ts","../../../projects/ngx-lib/color/color.module.ts","../../../projects/ngx-lib/color/public-api.ts","../../../projects/ngx-lib/color/pepperi-addons-ngx-lib-color.ts"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// import {\n//     hex2hsl,\n//     hslString2hsl,\n//     rgbString2hsl,\n//     IPepHslColor,\n//     findClosestAccessibleColor,\n//     hsl2hex,\n//     convertHslToStringHsl,\n// } from './color-utils';\nimport { PepColorService, IPepHslColor } from '@pepperi-addons/ngx-lib';\n\nimport { PepColorType } from './color.model';\n\nenum PepContrastRatioType {\n    AA = 4.5,\n    AAA = 7,\n}\n\ninterface IPepColorPickerDialogData {\n    value: string;\n    type: PepColorType;\n    showAAComplient: boolean;\n    textColor: string;\n    contrastRatio: PepContrastRatioType;\n}\n\n@Component({\n    templateUrl: './color-picker.component.html',\n    styleUrls: ['./color-picker.component.scss'],\n})\nexport class PepColorPickerComponent implements OnInit {\n    static CURRENT_HUE = '--pep-color-picker-current-hue';\n    private readonly defaultColor = '#ccc';\n\n    checkAAComplient = true;\n\n    constructor(\n        private colorService: PepColorService,\n        private dialogRef: MatDialogRef<PepColorPickerComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: IPepColorPickerDialogData\n    ) {\n        this.data.type = data ? data.type : 'any';\n        this.data.showAAComplient = !data\n            ? false\n            : data.showAAComplient ?? true;\n        this.data.textColor = data && data.textColor ? data.textColor : '#fff';\n        this.data.contrastRatio =\n            data && data.contrastRatio\n                ? data.contrastRatio\n                : PepContrastRatioType.AA;\n    }\n\n    currentHue = 100;\n    currentHueMin = 0;\n    currentHueMax = 360;\n\n    currentSaturation = 50;\n    currentSaturationMin = 0;\n    currentSaturationMax = 100;\n\n    currentLightness = 50;\n    currentLightnessMin = 0;\n    currentLightnessMax = 100;\n\n    complientColor: string;\n    isUserChooseAAComplientColor: boolean;\n\n    ngOnInit(): void {\n        this.initVars();\n        this.checkAAComplient = this.data.showAAComplient;\n        this.convertValueStringToColor(this.data.value);\n    }\n\n    initVars(): void {\n        if (this.data.type === 'main') {\n            this.currentLightnessMax = 10;\n            this.currentLightness = 5;\n        } else if (this.data.type === 'success') {\n            this.currentHueMin = 70;\n            this.currentHueMax = 150;\n            this.currentHue = 100;\n\n            this.currentSaturationMin = 50;\n            this.currentSaturationMax = 100;\n            this.currentSaturation = 50;\n\n            this.currentLightnessMin = 10;\n            this.currentLightnessMax = 65;\n            this.currentLightness = 50;\n        } else if (this.data.type === 'caution') {\n            this.currentHueMin = -20;\n            this.currentHueMax = 20;\n            this.currentHue = 10;\n\n            this.currentSaturationMin = 75;\n            this.currentSaturationMax = 100;\n            this.currentSaturation = 75;\n\n            this.currentLightnessMin = 25;\n            this.currentLightnessMax = 75;\n            this.currentLightness = 50;\n        }\n    }\n\n    setCurrentHueInCss(): void {\n        document.documentElement.style.setProperty(\n            PepColorPickerComponent.CURRENT_HUE,\n            this.currentHue.toString()\n        );\n    }\n\n    convertValueStringToColor(color): void {\n        if (color.indexOf('hsl') === 0) {\n            const hsl = this.colorService.hslString2hsl(color);\n            this.convertColorToValueString(hsl);\n        } else if (color.indexOf('rgb') === 0) {\n            const hsl = this.colorService.rgbString2hsl(color);\n            this.convertColorToValueString(hsl);\n        } else if (color.indexOf('#') === 0) {\n            const hsl = this.colorService.hex2hsl(color);\n            this.convertColorToValueString(hsl);\n        } else {\n            // Handle default.\n            const hsl = this.colorService.hex2hsl(this.defaultColor);\n            this.convertColorToValueString(hsl);\n        }\n\n        this.setCurrentHueInCss();\n    }\n\n    convertColorToValueString(hslColor: IPepHslColor): void {\n        // Regular hue\n        if (\n            hslColor.h >= this.currentHueMin &&\n            hslColor.h <= this.currentHueMax\n        ) {\n            this.currentHue = hslColor.h;\n        } else if (\n            this.currentHueMin < 0 &&\n            hslColor.h >= 0 &&\n            hslColor.h <= 360\n        ) {\n            // For min with - (change to the other side of the circle)\n            hslColor.h = hslColor.h - 360;\n\n            if (\n                hslColor.h >= this.currentHueMin &&\n                hslColor.h <= this.currentHueMax\n            ) {\n                this.currentHue = hslColor.h;\n            }\n        }\n\n        this.currentSaturation =\n            hslColor.s >= this.currentSaturationMin &&\n            hslColor.s <= this.currentSaturationMax\n                ? hslColor.s\n                : this.currentSaturation;\n\n        this.currentLightness =\n            hslColor.l >= this.currentLightnessMin &&\n            hslColor.l <= this.currentLightnessMax\n                ? hslColor.l\n                : this.currentLightness;\n\n        // Write the value (if hue is changed to the other side of the circle return it back).\n        const hsl = {\n            h: this.currentHue,\n            s: this.currentSaturation,\n            l: this.currentLightness,\n        };\n        this.data.value = this.colorService.convertHslToStringHsl(hsl);\n\n        // Check the contrast ratio - set the closest accessible color to complientColor\n        // and update isUserChooseAAComplientColor.\n        const adjustableColor = this.colorService.hsl2hex(hsl);\n        const closestHex = this.colorService.findClosestAccessibleColor(\n            adjustableColor,\n            this.data.textColor,\n            this.data.contrastRatio\n        );\n\n        this.isUserChooseAAComplientColor = adjustableColor === closestHex;\n        this.complientColor = this.colorService.convertHslToStringHsl(\n            this.colorService.hex2hsl(closestHex)\n        );\n    }\n\n    onHueChange(event): void {\n        this.convertColorToValueString({ h: event.value });\n        this.setCurrentHueInCss();\n    }\n\n    onSaturationChange(event): void {\n        // this.currentSaturation = event.value;\n        this.convertColorToValueString({ s: event.value });\n    }\n\n    onLightnessChange(event): void {\n        // this.currentLightness = event.value;\n        this.convertColorToValueString({\n            l:\n                this.currentLightnessMax -\n                event.value +\n                this.currentLightnessMin,\n        });\n    }\n\n    onColorValueChange(event): void {\n        this.convertValueStringToColor(event.value);\n    }\n\n    onSave(event): void {\n        const color = this.checkAAComplient\n            ? this.complientColor\n            : this.data.value;\n\n        // this.notify.emit({ key: this.key, value: color });\n        this.dialogRef.close(color);\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    Renderer2,\n    ElementRef,\n    EventEmitter,\n    OnChanges,\n    OnDestroy,\n} from '@angular/core';\nimport {\n    PepCustomizationService,\n    PepLayoutType,\n    PepHorizontalAlignment,\n    DEFAULT_HORIZONTAL_ALIGNMENT,\n} from '@pepperi-addons/ngx-lib';\nimport { PepDialogService } from '@pepperi-addons/ngx-lib/dialog';\nimport { PepColorPickerComponent } from './color-picker.component';\nimport { PepColorType } from './color.model';\n\n@Component({\n    selector: 'pep-color',\n    templateUrl: './color.component.html',\n    styleUrls: ['./color.component.scss'],\n})\nexport class PepColorComponent implements OnInit, OnDestroy {\n    @Input() key = '';\n    @Input() value = '';\n    @Input() label = '';\n    @Input() disabled = false;\n    @Input() xAlignment: PepHorizontalAlignment = DEFAULT_HORIZONTAL_ALIGNMENT;\n    @Input() rowSpan = 1;\n    @Input() type: PepColorType = 'any';\n\n    @Input() showTitle = true;\n    @Input() showAAComplient = true;\n    @Input() layoutType: PepLayoutType = 'form';\n\n    @Output()\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(\n        private dialogService: PepDialogService,\n        private renderer: Renderer2,\n        private element: ElementRef\n    ) {}\n\n    ngOnInit(): void {\n        this.renderer.addClass(\n            this.element.nativeElement,\n            PepCustomizationService.STAND_ALONE_FIELD_CLASS_NAME\n        );\n    }\n\n    ngOnDestroy(): void {\n        //\n    }\n\n    changeColor(value: any): void {\n        this.value = value;\n        this.valueChange.emit(value);\n    }\n\n    chooseColor(): void {\n        const dialogRef = this.dialogService.openDialog(\n            PepColorPickerComponent,\n            {\n                value: this.value,\n                type: this.type,\n                showAAComplient: this.showAAComplient,\n            }\n        );\n\n        dialogRef.afterClosed().subscribe((value) => {\n            if (value !== undefined && value !== null) {\n                this.changeColor(value);\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\nimport { PepDialogModule } from '@pepperi-addons/ngx-lib/dialog';\nimport {\n    PepIconModule,\n    PepIconRegistry,\n    pepIconSystemEdit,\n    pepIconSystemOk,\n    pepIconSystemClose,\n} from '@pepperi-addons/ngx-lib/icon';\nimport { PepFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\nimport { PepTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\n\nimport { PepColorComponent } from './color.component';\nimport { PepColorPickerComponent } from './color-picker.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        // Material modules\n        MatCommonModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatIconModule,\n        MatSliderModule,\n        // ngx-lib modules\n        PepNgxLibModule,\n        PepDialogModule,\n        PepIconModule,\n        PepFieldTitleModule,\n        PepTextboxModule,\n    ],\n    exports: [PepColorComponent],\n    declarations: [PepColorComponent, PepColorPickerComponent],\n    entryComponents: [PepColorPickerComponent],\n})\nexport class PepColorModule {\n    constructor(private pepIconRegistry: PepIconRegistry) {\n        this.pepIconRegistry.registerIcons([\n            pepIconSystemEdit,\n            pepIconSystemOk,\n            pepIconSystemClose,\n        ]);\n    }\n}\n","/*\n * Public API Surface of ngx-lib/color\n */\nexport * from './color.module';\nexport * from './color.model';\n// export * from './color-utils';\nexport * from './color.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {PepColorPickerComponent as ɵa} from './color-picker.component';"],"names":[],"mappings":"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"}