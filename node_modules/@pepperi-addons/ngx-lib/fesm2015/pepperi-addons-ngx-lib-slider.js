import { EventEmitter, Component, Renderer2, ElementRef, Input, Output, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatCommonModule } from '@angular/material/core';
import { MatSliderModule } from '@angular/material/slider';
import { PepFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';
import { DEFAULT_HORIZONTAL_ALIGNMENT, PepLayoutService, PepNgxLibModule } from '@pepperi-addons/ngx-lib';

/**
 * This is a slider component that support pepperi theme
 * style & state & sizes
 *
 * @export
 * @class PepSliderComponent
 * @implements {OnDestroy}
 */
class PepSliderComponent {
    constructor(renderer, element, pepLayoutService) {
        this.renderer = renderer;
        this.element = element;
        this.pepLayoutService = pepLayoutService;
        this.label = '';
        this.disabled = false;
        this.hint = '';
        this.background = '';
        this.step = 1;
        this.minValue = NaN;
        this.maxValue = NaN;
        this._value = null;
        this.valueChange = new EventEmitter();
        this.xAlignment = DEFAULT_HORIZONTAL_ALIGNMENT;
    }
    set value(value) {
        if (!value) {
            value = '';
        }
        this._value = value;
    }
    get value() {
        return this._value;
    }
    ngOnInit() {
        this.xAlignment = this.pepLayoutService.isRtl() ? 'right' : 'left';
        // Get the wrapper for set the background.
        const sliderWrapper = this.element.nativeElement.querySelector('.mat-slider-wrapper');
        if (sliderWrapper) {
            this.renderer.setStyle(sliderWrapper, 'background', this.background.length > 0 ? this.background : '#ccc');
        }
    }
    onValueChange(event) {
        this.valueChange.emit(event.value);
    }
}
PepSliderComponent.decorators = [
    { type: Component, args: [{
                selector: 'pep-slider',
                template: "<div class=\"pep-slider-container\">\n    <pep-field-title [label]=\"label\" [disabled]=\"disabled\" [hint]=\"hint\" [xAlignment]=\"xAlignment\">\n    </pep-field-title>\n    <mat-slider [min]=\"minValue\" [max]=\"maxValue\" [step]=\"step\" [value]=\"value\" [disabled]=\"disabled\"\n        (change)=\"onValueChange($event)\">\n    </mat-slider>\n</div>",
                styles: [""]
            },] }
];
PepSliderComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef },
    { type: PepLayoutService }
];
PepSliderComponent.propDecorators = {
    label: [{ type: Input }],
    disabled: [{ type: Input }],
    hint: [{ type: Input }],
    background: [{ type: Input }],
    step: [{ type: Input }],
    minValue: [{ type: Input }],
    maxValue: [{ type: Input }],
    value: [{ type: Input }],
    valueChange: [{ type: Output }]
};

class PepSliderModule {
}
PepSliderModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    // Material modules
                    MatCommonModule,
                    MatSliderModule,
                    // ngx-lib modules
                    PepNgxLibModule,
                    PepFieldTitleModule,
                ],
                exports: [PepSliderComponent],
                declarations: [PepSliderComponent],
            },] }
];

/*
 * Public API Surface of ngx-lib/slider
 */

/**
 * Generated bundle index. Do not edit.
 */

export { PepSliderComponent, PepSliderModule };
//# sourceMappingURL=pepperi-addons-ngx-lib-slider.js.map
