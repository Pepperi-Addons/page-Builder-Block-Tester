import { OnInit, OnDestroy, EventEmitter, ChangeDetectorRef, OnChanges, ElementRef, Renderer2, TemplateRef } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { SignaturePad } from 'ngx-signaturepad/signature-pad';
import { PepFileService, PepLayoutType, PepCustomizationService, PepHorizontalAlignment } from '@pepperi-addons/ngx-lib';
import { PepDialogService } from '@pepperi-addons/ngx-lib/dialog';
import { MatDialogRef } from '@angular/material/dialog';
export declare class PepSignatureComponent implements OnInit, OnChanges, OnDestroy {
    private dialogService;
    private customizationService;
    private fileService;
    private cd;
    private renderer;
    private element;
    key: string;
    src: string;
    label: string;
    mandatory: boolean;
    disabled: boolean;
    readonly: boolean;
    xAlignment: PepHorizontalAlignment;
    private _rowSpan;
    set rowSpan(value: number);
    get rowSpan(): number;
    signatureURL: string;
    private _visible;
    set visible(visible: boolean);
    get visible(): boolean;
    controlType: string;
    form: FormGroup;
    showTitle: boolean;
    private _layoutType;
    set layoutType(value: PepLayoutType);
    get layoutType(): PepLayoutType;
    isActive: boolean;
    fileChange: EventEmitter<any>;
    signaturePad: SignaturePad;
    signaturePopupPad: TemplateRef<any>;
    dialogRef: MatDialogRef<any>;
    fieldHeight: string;
    standAlone: boolean;
    dataURI: any;
    showActionBtn: boolean;
    isVisibleModal: boolean;
    acceptSignatureType: string;
    signaturePadOptions: any;
    constructor(dialogService: PepDialogService, customizationService: PepCustomizationService, fileService: PepFileService, cd: ChangeDetectorRef, renderer: Renderer2, element: ElementRef);
    private setFieldHeight;
    private setDefaultForm;
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    drawComplete(): void;
    drawStart(): void;
    openSignModal(): void;
    openSignatoreDlg(src?: string): void;
    afterDialogOpened(): void;
    clearSignModal(): void;
    deleteSignature(event: any): void;
    saveSignModal(event: any): void;
    errorHandler(event: any): void;
    changeValue(fileData: any): void;
    onKeyPress_OpenSignModal(event: any): void;
}
